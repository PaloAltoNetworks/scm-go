/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
	"fmt"
)

// checks if the DosProtectionRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DosProtectionRules{}

// DosProtectionRules struct for DosProtectionRules
type DosProtectionRules struct {
	Action *DosProtectionRulesAction `json:"action,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// List of destination addresses
	Destination []string `json:"destination,omitempty"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// Rule disabled?
	Disabled *bool `json:"disabled,omitempty"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// List of source zones
	From []string `json:"from,omitempty"`
	// The UUID of the DNS security profile
	Id *string `json:"id,omitempty"`
	// Log forwarding profile name
	LogSetting *string `json:"log_setting,omitempty"`
	// Rule name
	Name string `json:"name"`
	// Position relative to local device rules
	Position   *string                       `json:"position,omitempty"`
	Protection *DosProtectionRulesProtection `json:"protection,omitempty"`
	// Schedule on which to enforce the rule
	Schedule *string `json:"schedule,omitempty"`
	// List of services
	Service []string `json:"service,omitempty"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// List of source addresses
	Source []string `json:"source,omitempty"`
	// List of source users and/or groups.  Reserved words include `any`, `pre-login`, `known-user`, and `unknown`.
	SourceUser []string `json:"source_user,omitempty"`
	// List of tags
	Tag []string `json:"tag,omitempty"`
	// List of destination zones
	To                   []string `json:"to,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DosProtectionRules DosProtectionRules

// NewDosProtectionRules instantiates a new DosProtectionRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDosProtectionRules(name string) *DosProtectionRules {
	this := DosProtectionRules{}
	var disabled bool = false
	this.Disabled = &disabled
	var logSetting string = "Cortex Data Lake"
	this.LogSetting = &logSetting
	this.Name = name
	var position string = "pre"
	this.Position = &position
	return &this
}

// NewDosProtectionRulesWithDefaults instantiates a new DosProtectionRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDosProtectionRulesWithDefaults() *DosProtectionRules {
	this := DosProtectionRules{}
	var disabled bool = false
	this.Disabled = &disabled
	var logSetting string = "Cortex Data Lake"
	this.LogSetting = &logSetting
	var position string = "pre"
	this.Position = &position
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *DosProtectionRules) GetAction() DosProtectionRulesAction {
	if o == nil || IsNil(o.Action) {
		var ret DosProtectionRulesAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetActionOk() (*DosProtectionRulesAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *DosProtectionRules) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given DosProtectionRulesAction and assigns it to the Action field.
func (o *DosProtectionRules) SetAction(v DosProtectionRulesAction) {
	o.Action = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DosProtectionRules) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DosProtectionRules) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DosProtectionRules) SetDescription(v string) {
	o.Description = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *DosProtectionRules) GetDestination() []string {
	if o == nil || IsNil(o.Destination) {
		var ret []string
		return ret
	}
	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetDestinationOk() ([]string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *DosProtectionRules) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given []string and assigns it to the Destination field.
func (o *DosProtectionRules) SetDestination(v []string) {
	o.Destination = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *DosProtectionRules) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *DosProtectionRules) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *DosProtectionRules) SetDevice(v string) {
	o.Device = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *DosProtectionRules) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *DosProtectionRules) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *DosProtectionRules) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *DosProtectionRules) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *DosProtectionRules) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *DosProtectionRules) SetFolder(v string) {
	o.Folder = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *DosProtectionRules) GetFrom() []string {
	if o == nil || IsNil(o.From) {
		var ret []string
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetFromOk() ([]string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *DosProtectionRules) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given []string and assigns it to the From field.
func (o *DosProtectionRules) SetFrom(v []string) {
	o.From = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DosProtectionRules) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DosProtectionRules) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DosProtectionRules) SetId(v string) {
	o.Id = &v
}

// GetLogSetting returns the LogSetting field value if set, zero value otherwise.
func (o *DosProtectionRules) GetLogSetting() string {
	if o == nil || IsNil(o.LogSetting) {
		var ret string
		return ret
	}
	return *o.LogSetting
}

// GetLogSettingOk returns a tuple with the LogSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetLogSettingOk() (*string, bool) {
	if o == nil || IsNil(o.LogSetting) {
		return nil, false
	}
	return o.LogSetting, true
}

// HasLogSetting returns a boolean if a field has been set.
func (o *DosProtectionRules) HasLogSetting() bool {
	if o != nil && !IsNil(o.LogSetting) {
		return true
	}

	return false
}

// SetLogSetting gets a reference to the given string and assigns it to the LogSetting field.
func (o *DosProtectionRules) SetLogSetting(v string) {
	o.LogSetting = &v
}

// GetName returns the Name field value
func (o *DosProtectionRules) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DosProtectionRules) SetName(v string) {
	o.Name = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *DosProtectionRules) GetPosition() string {
	if o == nil || IsNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetPositionOk() (*string, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *DosProtectionRules) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *DosProtectionRules) SetPosition(v string) {
	o.Position = &v
}

// GetProtection returns the Protection field value if set, zero value otherwise.
func (o *DosProtectionRules) GetProtection() DosProtectionRulesProtection {
	if o == nil || IsNil(o.Protection) {
		var ret DosProtectionRulesProtection
		return ret
	}
	return *o.Protection
}

// GetProtectionOk returns a tuple with the Protection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetProtectionOk() (*DosProtectionRulesProtection, bool) {
	if o == nil || IsNil(o.Protection) {
		return nil, false
	}
	return o.Protection, true
}

// HasProtection returns a boolean if a field has been set.
func (o *DosProtectionRules) HasProtection() bool {
	if o != nil && !IsNil(o.Protection) {
		return true
	}

	return false
}

// SetProtection gets a reference to the given DosProtectionRulesProtection and assigns it to the Protection field.
func (o *DosProtectionRules) SetProtection(v DosProtectionRulesProtection) {
	o.Protection = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *DosProtectionRules) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *DosProtectionRules) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *DosProtectionRules) SetSchedule(v string) {
	o.Schedule = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *DosProtectionRules) GetService() []string {
	if o == nil || IsNil(o.Service) {
		var ret []string
		return ret
	}
	return o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetServiceOk() ([]string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *DosProtectionRules) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given []string and assigns it to the Service field.
func (o *DosProtectionRules) SetService(v []string) {
	o.Service = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *DosProtectionRules) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *DosProtectionRules) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *DosProtectionRules) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *DosProtectionRules) GetSource() []string {
	if o == nil || IsNil(o.Source) {
		var ret []string
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetSourceOk() ([]string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *DosProtectionRules) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given []string and assigns it to the Source field.
func (o *DosProtectionRules) SetSource(v []string) {
	o.Source = v
}

// GetSourceUser returns the SourceUser field value if set, zero value otherwise.
func (o *DosProtectionRules) GetSourceUser() []string {
	if o == nil || IsNil(o.SourceUser) {
		var ret []string
		return ret
	}
	return o.SourceUser
}

// GetSourceUserOk returns a tuple with the SourceUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetSourceUserOk() ([]string, bool) {
	if o == nil || IsNil(o.SourceUser) {
		return nil, false
	}
	return o.SourceUser, true
}

// HasSourceUser returns a boolean if a field has been set.
func (o *DosProtectionRules) HasSourceUser() bool {
	if o != nil && !IsNil(o.SourceUser) {
		return true
	}

	return false
}

// SetSourceUser gets a reference to the given []string and assigns it to the SourceUser field.
func (o *DosProtectionRules) SetSourceUser(v []string) {
	o.SourceUser = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *DosProtectionRules) GetTag() []string {
	if o == nil || IsNil(o.Tag) {
		var ret []string
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetTagOk() ([]string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *DosProtectionRules) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given []string and assigns it to the Tag field.
func (o *DosProtectionRules) SetTag(v []string) {
	o.Tag = v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *DosProtectionRules) GetTo() []string {
	if o == nil || IsNil(o.To) {
		var ret []string
		return ret
	}
	return o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DosProtectionRules) GetToOk() ([]string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *DosProtectionRules) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given []string and assigns it to the To field.
func (o *DosProtectionRules) SetTo(v []string) {
	o.To = v
}

func (o DosProtectionRules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DosProtectionRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LogSetting) {
		toSerialize["log_setting"] = o.LogSetting
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Protection) {
		toSerialize["protection"] = o.Protection
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.SourceUser) {
		toSerialize["source_user"] = o.SourceUser
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DosProtectionRules) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDosProtectionRules := _DosProtectionRules{}

	err = json.Unmarshal(data, &varDosProtectionRules)

	if err != nil {
		return err
	}

	*o = DosProtectionRules(varDosProtectionRules)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "description")
		delete(additionalProperties, "destination")
		delete(additionalProperties, "device")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "from")
		delete(additionalProperties, "id")
		delete(additionalProperties, "log_setting")
		delete(additionalProperties, "name")
		delete(additionalProperties, "position")
		delete(additionalProperties, "protection")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "service")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "source")
		delete(additionalProperties, "source_user")
		delete(additionalProperties, "tag")
		delete(additionalProperties, "to")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDosProtectionRules struct {
	value *DosProtectionRules
	isSet bool
}

func (v NullableDosProtectionRules) Get() *DosProtectionRules {
	return v.value
}

func (v *NullableDosProtectionRules) Set(val *DosProtectionRules) {
	v.value = val
	v.isSet = true
}

func (v NullableDosProtectionRules) IsSet() bool {
	return v.isSet
}

func (v *NullableDosProtectionRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDosProtectionRules(val *DosProtectionRules) *NullableDosProtectionRules {
	return &NullableDosProtectionRules{value: val, isSet: true}
}

func (v NullableDosProtectionRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDosProtectionRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
