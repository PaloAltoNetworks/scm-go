/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the DnsSecurityProfilesBotnetDomains type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsSecurityProfilesBotnetDomains{}

// DnsSecurityProfilesBotnetDomains Botnet domains
type DnsSecurityProfilesBotnetDomains struct {
	// DNS categories
	DnsSecurityCategories []DnsSecurityProfilesBotnetDomainsDnsSecurityCategoriesInner `json:"dns_security_categories,omitempty"`
	// Dynamic lists of DNS domains
	Lists    []DnsSecurityProfilesBotnetDomainsListsInner `json:"lists,omitempty"`
	Sinkhole *DnsSecurityProfilesBotnetDomainsSinkhole    `json:"sinkhole,omitempty"`
	// DNS security overrides
	Whitelist            []DnsSecurityProfilesBotnetDomainsWhitelistInner `json:"whitelist,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DnsSecurityProfilesBotnetDomains DnsSecurityProfilesBotnetDomains

// NewDnsSecurityProfilesBotnetDomains instantiates a new DnsSecurityProfilesBotnetDomains object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsSecurityProfilesBotnetDomains() *DnsSecurityProfilesBotnetDomains {
	this := DnsSecurityProfilesBotnetDomains{}
	return &this
}

// NewDnsSecurityProfilesBotnetDomainsWithDefaults instantiates a new DnsSecurityProfilesBotnetDomains object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsSecurityProfilesBotnetDomainsWithDefaults() *DnsSecurityProfilesBotnetDomains {
	this := DnsSecurityProfilesBotnetDomains{}
	return &this
}

// GetDnsSecurityCategories returns the DnsSecurityCategories field value if set, zero value otherwise.
func (o *DnsSecurityProfilesBotnetDomains) GetDnsSecurityCategories() []DnsSecurityProfilesBotnetDomainsDnsSecurityCategoriesInner {
	if o == nil || IsNil(o.DnsSecurityCategories) {
		var ret []DnsSecurityProfilesBotnetDomainsDnsSecurityCategoriesInner
		return ret
	}
	return o.DnsSecurityCategories
}

// GetDnsSecurityCategoriesOk returns a tuple with the DnsSecurityCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsSecurityProfilesBotnetDomains) GetDnsSecurityCategoriesOk() ([]DnsSecurityProfilesBotnetDomainsDnsSecurityCategoriesInner, bool) {
	if o == nil || IsNil(o.DnsSecurityCategories) {
		return nil, false
	}
	return o.DnsSecurityCategories, true
}

// HasDnsSecurityCategories returns a boolean if a field has been set.
func (o *DnsSecurityProfilesBotnetDomains) HasDnsSecurityCategories() bool {
	if o != nil && !IsNil(o.DnsSecurityCategories) {
		return true
	}

	return false
}

// SetDnsSecurityCategories gets a reference to the given []DnsSecurityProfilesBotnetDomainsDnsSecurityCategoriesInner and assigns it to the DnsSecurityCategories field.
func (o *DnsSecurityProfilesBotnetDomains) SetDnsSecurityCategories(v []DnsSecurityProfilesBotnetDomainsDnsSecurityCategoriesInner) {
	o.DnsSecurityCategories = v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *DnsSecurityProfilesBotnetDomains) GetLists() []DnsSecurityProfilesBotnetDomainsListsInner {
	if o == nil || IsNil(o.Lists) {
		var ret []DnsSecurityProfilesBotnetDomainsListsInner
		return ret
	}
	return o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsSecurityProfilesBotnetDomains) GetListsOk() ([]DnsSecurityProfilesBotnetDomainsListsInner, bool) {
	if o == nil || IsNil(o.Lists) {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *DnsSecurityProfilesBotnetDomains) HasLists() bool {
	if o != nil && !IsNil(o.Lists) {
		return true
	}

	return false
}

// SetLists gets a reference to the given []DnsSecurityProfilesBotnetDomainsListsInner and assigns it to the Lists field.
func (o *DnsSecurityProfilesBotnetDomains) SetLists(v []DnsSecurityProfilesBotnetDomainsListsInner) {
	o.Lists = v
}

// GetSinkhole returns the Sinkhole field value if set, zero value otherwise.
func (o *DnsSecurityProfilesBotnetDomains) GetSinkhole() DnsSecurityProfilesBotnetDomainsSinkhole {
	if o == nil || IsNil(o.Sinkhole) {
		var ret DnsSecurityProfilesBotnetDomainsSinkhole
		return ret
	}
	return *o.Sinkhole
}

// GetSinkholeOk returns a tuple with the Sinkhole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsSecurityProfilesBotnetDomains) GetSinkholeOk() (*DnsSecurityProfilesBotnetDomainsSinkhole, bool) {
	if o == nil || IsNil(o.Sinkhole) {
		return nil, false
	}
	return o.Sinkhole, true
}

// HasSinkhole returns a boolean if a field has been set.
func (o *DnsSecurityProfilesBotnetDomains) HasSinkhole() bool {
	if o != nil && !IsNil(o.Sinkhole) {
		return true
	}

	return false
}

// SetSinkhole gets a reference to the given DnsSecurityProfilesBotnetDomainsSinkhole and assigns it to the Sinkhole field.
func (o *DnsSecurityProfilesBotnetDomains) SetSinkhole(v DnsSecurityProfilesBotnetDomainsSinkhole) {
	o.Sinkhole = &v
}

// GetWhitelist returns the Whitelist field value if set, zero value otherwise.
func (o *DnsSecurityProfilesBotnetDomains) GetWhitelist() []DnsSecurityProfilesBotnetDomainsWhitelistInner {
	if o == nil || IsNil(o.Whitelist) {
		var ret []DnsSecurityProfilesBotnetDomainsWhitelistInner
		return ret
	}
	return o.Whitelist
}

// GetWhitelistOk returns a tuple with the Whitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsSecurityProfilesBotnetDomains) GetWhitelistOk() ([]DnsSecurityProfilesBotnetDomainsWhitelistInner, bool) {
	if o == nil || IsNil(o.Whitelist) {
		return nil, false
	}
	return o.Whitelist, true
}

// HasWhitelist returns a boolean if a field has been set.
func (o *DnsSecurityProfilesBotnetDomains) HasWhitelist() bool {
	if o != nil && !IsNil(o.Whitelist) {
		return true
	}

	return false
}

// SetWhitelist gets a reference to the given []DnsSecurityProfilesBotnetDomainsWhitelistInner and assigns it to the Whitelist field.
func (o *DnsSecurityProfilesBotnetDomains) SetWhitelist(v []DnsSecurityProfilesBotnetDomainsWhitelistInner) {
	o.Whitelist = v
}

func (o DnsSecurityProfilesBotnetDomains) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsSecurityProfilesBotnetDomains) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsSecurityCategories) {
		toSerialize["dns_security_categories"] = o.DnsSecurityCategories
	}
	if !IsNil(o.Lists) {
		toSerialize["lists"] = o.Lists
	}
	if !IsNil(o.Sinkhole) {
		toSerialize["sinkhole"] = o.Sinkhole
	}
	if !IsNil(o.Whitelist) {
		toSerialize["whitelist"] = o.Whitelist
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DnsSecurityProfilesBotnetDomains) UnmarshalJSON(data []byte) (err error) {
	varDnsSecurityProfilesBotnetDomains := _DnsSecurityProfilesBotnetDomains{}

	err = json.Unmarshal(data, &varDnsSecurityProfilesBotnetDomains)

	if err != nil {
		return err
	}

	*o = DnsSecurityProfilesBotnetDomains(varDnsSecurityProfilesBotnetDomains)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dns_security_categories")
		delete(additionalProperties, "lists")
		delete(additionalProperties, "sinkhole")
		delete(additionalProperties, "whitelist")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDnsSecurityProfilesBotnetDomains struct {
	value *DnsSecurityProfilesBotnetDomains
	isSet bool
}

func (v NullableDnsSecurityProfilesBotnetDomains) Get() *DnsSecurityProfilesBotnetDomains {
	return v.value
}

func (v *NullableDnsSecurityProfilesBotnetDomains) Set(val *DnsSecurityProfilesBotnetDomains) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsSecurityProfilesBotnetDomains) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsSecurityProfilesBotnetDomains) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsSecurityProfilesBotnetDomains(val *DnsSecurityProfilesBotnetDomains) *NullableDnsSecurityProfilesBotnetDomains {
	return &NullableDnsSecurityProfilesBotnetDomains{value: val, isSet: true}
}

func (v NullableDnsSecurityProfilesBotnetDomains) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsSecurityProfilesBotnetDomains) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
