/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the SecurityRulesDefaultProfileSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityRulesDefaultProfileSettings{}

// SecurityRulesDefaultProfileSettings struct for SecurityRulesDefaultProfileSettings
type SecurityRulesDefaultProfileSettings struct {
	Dlp                  *string                                        `json:"dlp,omitempty"`
	FileControl          *SecurityRulesAllowUrlCategoryInnerFileControl `json:"file_control,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SecurityRulesDefaultProfileSettings SecurityRulesDefaultProfileSettings

// NewSecurityRulesDefaultProfileSettings instantiates a new SecurityRulesDefaultProfileSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityRulesDefaultProfileSettings() *SecurityRulesDefaultProfileSettings {
	this := SecurityRulesDefaultProfileSettings{}
	return &this
}

// NewSecurityRulesDefaultProfileSettingsWithDefaults instantiates a new SecurityRulesDefaultProfileSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityRulesDefaultProfileSettingsWithDefaults() *SecurityRulesDefaultProfileSettings {
	this := SecurityRulesDefaultProfileSettings{}
	return &this
}

// GetDlp returns the Dlp field value if set, zero value otherwise.
func (o *SecurityRulesDefaultProfileSettings) GetDlp() string {
	if o == nil || IsNil(o.Dlp) {
		var ret string
		return ret
	}
	return *o.Dlp
}

// GetDlpOk returns a tuple with the Dlp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRulesDefaultProfileSettings) GetDlpOk() (*string, bool) {
	if o == nil || IsNil(o.Dlp) {
		return nil, false
	}
	return o.Dlp, true
}

// HasDlp returns a boolean if a field has been set.
func (o *SecurityRulesDefaultProfileSettings) HasDlp() bool {
	if o != nil && !IsNil(o.Dlp) {
		return true
	}

	return false
}

// SetDlp gets a reference to the given string and assigns it to the Dlp field.
func (o *SecurityRulesDefaultProfileSettings) SetDlp(v string) {
	o.Dlp = &v
}

// GetFileControl returns the FileControl field value if set, zero value otherwise.
func (o *SecurityRulesDefaultProfileSettings) GetFileControl() SecurityRulesAllowUrlCategoryInnerFileControl {
	if o == nil || IsNil(o.FileControl) {
		var ret SecurityRulesAllowUrlCategoryInnerFileControl
		return ret
	}
	return *o.FileControl
}

// GetFileControlOk returns a tuple with the FileControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRulesDefaultProfileSettings) GetFileControlOk() (*SecurityRulesAllowUrlCategoryInnerFileControl, bool) {
	if o == nil || IsNil(o.FileControl) {
		return nil, false
	}
	return o.FileControl, true
}

// HasFileControl returns a boolean if a field has been set.
func (o *SecurityRulesDefaultProfileSettings) HasFileControl() bool {
	if o != nil && !IsNil(o.FileControl) {
		return true
	}

	return false
}

// SetFileControl gets a reference to the given SecurityRulesAllowUrlCategoryInnerFileControl and assigns it to the FileControl field.
func (o *SecurityRulesDefaultProfileSettings) SetFileControl(v SecurityRulesAllowUrlCategoryInnerFileControl) {
	o.FileControl = &v
}

func (o SecurityRulesDefaultProfileSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityRulesDefaultProfileSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dlp) {
		toSerialize["dlp"] = o.Dlp
	}
	if !IsNil(o.FileControl) {
		toSerialize["file_control"] = o.FileControl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecurityRulesDefaultProfileSettings) UnmarshalJSON(data []byte) (err error) {
	varSecurityRulesDefaultProfileSettings := _SecurityRulesDefaultProfileSettings{}

	err = json.Unmarshal(data, &varSecurityRulesDefaultProfileSettings)

	if err != nil {
		return err
	}

	*o = SecurityRulesDefaultProfileSettings(varSecurityRulesDefaultProfileSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dlp")
		delete(additionalProperties, "file_control")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecurityRulesDefaultProfileSettings struct {
	value *SecurityRulesDefaultProfileSettings
	isSet bool
}

func (v NullableSecurityRulesDefaultProfileSettings) Get() *SecurityRulesDefaultProfileSettings {
	return v.value
}

func (v *NullableSecurityRulesDefaultProfileSettings) Set(val *SecurityRulesDefaultProfileSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityRulesDefaultProfileSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityRulesDefaultProfileSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityRulesDefaultProfileSettings(val *SecurityRulesDefaultProfileSettings) *NullableSecurityRulesDefaultProfileSettings {
	return &NullableSecurityRulesDefaultProfileSettings{value: val, isSet: true}
}

func (v NullableSecurityRulesDefaultProfileSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityRulesDefaultProfileSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
