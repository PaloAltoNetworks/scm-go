/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
	"fmt"
)

// checks if the FileBlockingProfilesRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileBlockingProfilesRulesInner{}

// FileBlockingProfilesRulesInner struct for FileBlockingProfilesRulesInner
type FileBlockingProfilesRulesInner struct {
	// The action to take when the rule match criteria is met
	Action string `json:"action"`
	// The application transferring the files (App-ID naming)
	Application []string `json:"application"`
	// The direction of the file transfer
	Direction string `json:"direction"`
	// The file type
	FileType []string `json:"file_type"`
	// The name of the file blocking rule
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _FileBlockingProfilesRulesInner FileBlockingProfilesRulesInner

// NewFileBlockingProfilesRulesInner instantiates a new FileBlockingProfilesRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileBlockingProfilesRulesInner(action string, application []string, direction string, fileType []string, name string) *FileBlockingProfilesRulesInner {
	this := FileBlockingProfilesRulesInner{}
	this.Action = action
	this.Application = application
	this.Direction = direction
	this.FileType = fileType
	this.Name = name
	return &this
}

// NewFileBlockingProfilesRulesInnerWithDefaults instantiates a new FileBlockingProfilesRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileBlockingProfilesRulesInnerWithDefaults() *FileBlockingProfilesRulesInner {
	this := FileBlockingProfilesRulesInner{}
	var action string = "alert"
	this.Action = action
	var direction string = "both"
	this.Direction = direction
	return &this
}

// GetAction returns the Action field value
func (o *FileBlockingProfilesRulesInner) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *FileBlockingProfilesRulesInner) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *FileBlockingProfilesRulesInner) SetAction(v string) {
	o.Action = v
}

// GetApplication returns the Application field value
func (o *FileBlockingProfilesRulesInner) GetApplication() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Application
}

// GetApplicationOk returns a tuple with the Application field value
// and a boolean to check if the value has been set.
func (o *FileBlockingProfilesRulesInner) GetApplicationOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Application, true
}

// SetApplication sets field value
func (o *FileBlockingProfilesRulesInner) SetApplication(v []string) {
	o.Application = v
}

// GetDirection returns the Direction field value
func (o *FileBlockingProfilesRulesInner) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *FileBlockingProfilesRulesInner) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *FileBlockingProfilesRulesInner) SetDirection(v string) {
	o.Direction = v
}

// GetFileType returns the FileType field value
func (o *FileBlockingProfilesRulesInner) GetFileType() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value
// and a boolean to check if the value has been set.
func (o *FileBlockingProfilesRulesInner) GetFileTypeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileType, true
}

// SetFileType sets field value
func (o *FileBlockingProfilesRulesInner) SetFileType(v []string) {
	o.FileType = v
}

// GetName returns the Name field value
func (o *FileBlockingProfilesRulesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FileBlockingProfilesRulesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FileBlockingProfilesRulesInner) SetName(v string) {
	o.Name = v
}

func (o FileBlockingProfilesRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileBlockingProfilesRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["application"] = o.Application
	toSerialize["direction"] = o.Direction
	toSerialize["file_type"] = o.FileType
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FileBlockingProfilesRulesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"application",
		"direction",
		"file_type",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFileBlockingProfilesRulesInner := _FileBlockingProfilesRulesInner{}

	err = json.Unmarshal(data, &varFileBlockingProfilesRulesInner)

	if err != nil {
		return err
	}

	*o = FileBlockingProfilesRulesInner(varFileBlockingProfilesRulesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "application")
		delete(additionalProperties, "direction")
		delete(additionalProperties, "file_type")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFileBlockingProfilesRulesInner struct {
	value *FileBlockingProfilesRulesInner
	isSet bool
}

func (v NullableFileBlockingProfilesRulesInner) Get() *FileBlockingProfilesRulesInner {
	return v.value
}

func (v *NullableFileBlockingProfilesRulesInner) Set(val *FileBlockingProfilesRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFileBlockingProfilesRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFileBlockingProfilesRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileBlockingProfilesRulesInner(val *FileBlockingProfilesRulesInner) *NullableFileBlockingProfilesRulesInner {
	return &NullableFileBlockingProfilesRulesInner{value: val, isSet: true}
}

func (v NullableFileBlockingProfilesRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileBlockingProfilesRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
