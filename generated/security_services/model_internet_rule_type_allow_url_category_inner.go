/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the InternetRuleTypeAllowUrlCategoryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetRuleTypeAllowUrlCategoryInner{}

// InternetRuleTypeAllowUrlCategoryInner struct for InternetRuleTypeAllowUrlCategoryInner
type InternetRuleTypeAllowUrlCategoryInner struct {
	AdditionalAction      *string                                           `json:"additional_action,omitempty"`
	CredentialEnforcement *string                                           `json:"credential_enforcement,omitempty"`
	Decryption            *string                                           `json:"decryption,omitempty"`
	Dlp                   *string                                           `json:"dlp,omitempty"`
	FileControl           *InternetRuleTypeAllowUrlCategoryInnerFileControl `json:"file_control,omitempty"`
	IsolationProfiles     *string                                           `json:"isolation_profiles,omitempty"`
	Name                  *string                                           `json:"name,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _InternetRuleTypeAllowUrlCategoryInner InternetRuleTypeAllowUrlCategoryInner

// NewInternetRuleTypeAllowUrlCategoryInner instantiates a new InternetRuleTypeAllowUrlCategoryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetRuleTypeAllowUrlCategoryInner() *InternetRuleTypeAllowUrlCategoryInner {
	this := InternetRuleTypeAllowUrlCategoryInner{}
	var additionalAction string = "none"
	this.AdditionalAction = &additionalAction
	var credentialEnforcement string = "enabled"
	this.CredentialEnforcement = &credentialEnforcement
	var decryption string = "enabled"
	this.Decryption = &decryption
	var isolationProfiles string = "none"
	this.IsolationProfiles = &isolationProfiles
	return &this
}

// NewInternetRuleTypeAllowUrlCategoryInnerWithDefaults instantiates a new InternetRuleTypeAllowUrlCategoryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetRuleTypeAllowUrlCategoryInnerWithDefaults() *InternetRuleTypeAllowUrlCategoryInner {
	this := InternetRuleTypeAllowUrlCategoryInner{}
	var additionalAction string = "none"
	this.AdditionalAction = &additionalAction
	var credentialEnforcement string = "enabled"
	this.CredentialEnforcement = &credentialEnforcement
	var decryption string = "enabled"
	this.Decryption = &decryption
	var isolationProfiles string = "none"
	this.IsolationProfiles = &isolationProfiles
	return &this
}

// GetAdditionalAction returns the AdditionalAction field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetAdditionalAction() string {
	if o == nil || IsNil(o.AdditionalAction) {
		var ret string
		return ret
	}
	return *o.AdditionalAction
}

// GetAdditionalActionOk returns a tuple with the AdditionalAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetAdditionalActionOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalAction) {
		return nil, false
	}
	return o.AdditionalAction, true
}

// HasAdditionalAction returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasAdditionalAction() bool {
	if o != nil && !IsNil(o.AdditionalAction) {
		return true
	}

	return false
}

// SetAdditionalAction gets a reference to the given string and assigns it to the AdditionalAction field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetAdditionalAction(v string) {
	o.AdditionalAction = &v
}

// GetCredentialEnforcement returns the CredentialEnforcement field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetCredentialEnforcement() string {
	if o == nil || IsNil(o.CredentialEnforcement) {
		var ret string
		return ret
	}
	return *o.CredentialEnforcement
}

// GetCredentialEnforcementOk returns a tuple with the CredentialEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetCredentialEnforcementOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialEnforcement) {
		return nil, false
	}
	return o.CredentialEnforcement, true
}

// HasCredentialEnforcement returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasCredentialEnforcement() bool {
	if o != nil && !IsNil(o.CredentialEnforcement) {
		return true
	}

	return false
}

// SetCredentialEnforcement gets a reference to the given string and assigns it to the CredentialEnforcement field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetCredentialEnforcement(v string) {
	o.CredentialEnforcement = &v
}

// GetDecryption returns the Decryption field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetDecryption() string {
	if o == nil || IsNil(o.Decryption) {
		var ret string
		return ret
	}
	return *o.Decryption
}

// GetDecryptionOk returns a tuple with the Decryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetDecryptionOk() (*string, bool) {
	if o == nil || IsNil(o.Decryption) {
		return nil, false
	}
	return o.Decryption, true
}

// HasDecryption returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasDecryption() bool {
	if o != nil && !IsNil(o.Decryption) {
		return true
	}

	return false
}

// SetDecryption gets a reference to the given string and assigns it to the Decryption field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetDecryption(v string) {
	o.Decryption = &v
}

// GetDlp returns the Dlp field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetDlp() string {
	if o == nil || IsNil(o.Dlp) {
		var ret string
		return ret
	}
	return *o.Dlp
}

// GetDlpOk returns a tuple with the Dlp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetDlpOk() (*string, bool) {
	if o == nil || IsNil(o.Dlp) {
		return nil, false
	}
	return o.Dlp, true
}

// HasDlp returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasDlp() bool {
	if o != nil && !IsNil(o.Dlp) {
		return true
	}

	return false
}

// SetDlp gets a reference to the given string and assigns it to the Dlp field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetDlp(v string) {
	o.Dlp = &v
}

// GetFileControl returns the FileControl field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetFileControl() InternetRuleTypeAllowUrlCategoryInnerFileControl {
	if o == nil || IsNil(o.FileControl) {
		var ret InternetRuleTypeAllowUrlCategoryInnerFileControl
		return ret
	}
	return *o.FileControl
}

// GetFileControlOk returns a tuple with the FileControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetFileControlOk() (*InternetRuleTypeAllowUrlCategoryInnerFileControl, bool) {
	if o == nil || IsNil(o.FileControl) {
		return nil, false
	}
	return o.FileControl, true
}

// HasFileControl returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasFileControl() bool {
	if o != nil && !IsNil(o.FileControl) {
		return true
	}

	return false
}

// SetFileControl gets a reference to the given InternetRuleTypeAllowUrlCategoryInnerFileControl and assigns it to the FileControl field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetFileControl(v InternetRuleTypeAllowUrlCategoryInnerFileControl) {
	o.FileControl = &v
}

// GetIsolationProfiles returns the IsolationProfiles field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetIsolationProfiles() string {
	if o == nil || IsNil(o.IsolationProfiles) {
		var ret string
		return ret
	}
	return *o.IsolationProfiles
}

// GetIsolationProfilesOk returns a tuple with the IsolationProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetIsolationProfilesOk() (*string, bool) {
	if o == nil || IsNil(o.IsolationProfiles) {
		return nil, false
	}
	return o.IsolationProfiles, true
}

// HasIsolationProfiles returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasIsolationProfiles() bool {
	if o != nil && !IsNil(o.IsolationProfiles) {
		return true
	}

	return false
}

// SetIsolationProfiles gets a reference to the given string and assigns it to the IsolationProfiles field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetIsolationProfiles(v string) {
	o.IsolationProfiles = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InternetRuleTypeAllowUrlCategoryInner) SetName(v string) {
	o.Name = &v
}

func (o InternetRuleTypeAllowUrlCategoryInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetRuleTypeAllowUrlCategoryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalAction) {
		toSerialize["additional_action"] = o.AdditionalAction
	}
	if !IsNil(o.CredentialEnforcement) {
		toSerialize["credential_enforcement"] = o.CredentialEnforcement
	}
	if !IsNil(o.Decryption) {
		toSerialize["decryption"] = o.Decryption
	}
	if !IsNil(o.Dlp) {
		toSerialize["dlp"] = o.Dlp
	}
	if !IsNil(o.FileControl) {
		toSerialize["file_control"] = o.FileControl
	}
	if !IsNil(o.IsolationProfiles) {
		toSerialize["isolation_profiles"] = o.IsolationProfiles
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternetRuleTypeAllowUrlCategoryInner) UnmarshalJSON(data []byte) (err error) {
	varInternetRuleTypeAllowUrlCategoryInner := _InternetRuleTypeAllowUrlCategoryInner{}

	err = json.Unmarshal(data, &varInternetRuleTypeAllowUrlCategoryInner)

	if err != nil {
		return err
	}

	*o = InternetRuleTypeAllowUrlCategoryInner(varInternetRuleTypeAllowUrlCategoryInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_action")
		delete(additionalProperties, "credential_enforcement")
		delete(additionalProperties, "decryption")
		delete(additionalProperties, "dlp")
		delete(additionalProperties, "file_control")
		delete(additionalProperties, "isolation_profiles")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternetRuleTypeAllowUrlCategoryInner struct {
	value *InternetRuleTypeAllowUrlCategoryInner
	isSet bool
}

func (v NullableInternetRuleTypeAllowUrlCategoryInner) Get() *InternetRuleTypeAllowUrlCategoryInner {
	return v.value
}

func (v *NullableInternetRuleTypeAllowUrlCategoryInner) Set(val *InternetRuleTypeAllowUrlCategoryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetRuleTypeAllowUrlCategoryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetRuleTypeAllowUrlCategoryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetRuleTypeAllowUrlCategoryInner(val *InternetRuleTypeAllowUrlCategoryInner) *NullableInternetRuleTypeAllowUrlCategoryInner {
	return &NullableInternetRuleTypeAllowUrlCategoryInner{value: val, isSet: true}
}

func (v NullableInternetRuleTypeAllowUrlCategoryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetRuleTypeAllowUrlCategoryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
