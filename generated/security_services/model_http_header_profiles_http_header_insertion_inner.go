/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
	"fmt"
)

// checks if the HttpHeaderProfilesHttpHeaderInsertionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpHeaderProfilesHttpHeaderInsertionInner{}

// HttpHeaderProfilesHttpHeaderInsertionInner struct for HttpHeaderProfilesHttpHeaderInsertionInner
type HttpHeaderProfilesHttpHeaderInsertionInner struct {
	// The name of the HTTP header insertion rule
	Name string `json:"name"`
	// A list of HTTP header insertion definitions (_This should be an object rather than an array_)
	Type                 []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _HttpHeaderProfilesHttpHeaderInsertionInner HttpHeaderProfilesHttpHeaderInsertionInner

// NewHttpHeaderProfilesHttpHeaderInsertionInner instantiates a new HttpHeaderProfilesHttpHeaderInsertionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpHeaderProfilesHttpHeaderInsertionInner(name string, type_ []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) *HttpHeaderProfilesHttpHeaderInsertionInner {
	this := HttpHeaderProfilesHttpHeaderInsertionInner{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewHttpHeaderProfilesHttpHeaderInsertionInnerWithDefaults instantiates a new HttpHeaderProfilesHttpHeaderInsertionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpHeaderProfilesHttpHeaderInsertionInnerWithDefaults() *HttpHeaderProfilesHttpHeaderInsertionInner {
	this := HttpHeaderProfilesHttpHeaderInsertionInner{}
	return &this
}

// GetName returns the Name field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HttpHeaderProfilesHttpHeaderInsertionInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInner) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInner) GetType() []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner {
	if o == nil {
		var ret []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *HttpHeaderProfilesHttpHeaderInsertionInner) GetTypeOk() ([]HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInner) SetType(v []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) {
	o.Type = v
}

func (o HttpHeaderProfilesHttpHeaderInsertionInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpHeaderProfilesHttpHeaderInsertionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HttpHeaderProfilesHttpHeaderInsertionInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHttpHeaderProfilesHttpHeaderInsertionInner := _HttpHeaderProfilesHttpHeaderInsertionInner{}

	err = json.Unmarshal(data, &varHttpHeaderProfilesHttpHeaderInsertionInner)

	if err != nil {
		return err
	}

	*o = HttpHeaderProfilesHttpHeaderInsertionInner(varHttpHeaderProfilesHttpHeaderInsertionInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHttpHeaderProfilesHttpHeaderInsertionInner struct {
	value *HttpHeaderProfilesHttpHeaderInsertionInner
	isSet bool
}

func (v NullableHttpHeaderProfilesHttpHeaderInsertionInner) Get() *HttpHeaderProfilesHttpHeaderInsertionInner {
	return v.value
}

func (v *NullableHttpHeaderProfilesHttpHeaderInsertionInner) Set(val *HttpHeaderProfilesHttpHeaderInsertionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpHeaderProfilesHttpHeaderInsertionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpHeaderProfilesHttpHeaderInsertionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpHeaderProfilesHttpHeaderInsertionInner(val *HttpHeaderProfilesHttpHeaderInsertionInner) *NullableHttpHeaderProfilesHttpHeaderInsertionInner {
	return &NullableHttpHeaderProfilesHttpHeaderInsertionInner{value: val, isSet: true}
}

func (v NullableHttpHeaderProfilesHttpHeaderInsertionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpHeaderProfilesHttpHeaderInsertionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
