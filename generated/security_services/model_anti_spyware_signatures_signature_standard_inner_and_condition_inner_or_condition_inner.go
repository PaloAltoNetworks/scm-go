/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner{}

// AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner struct for AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner
type AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner struct {
	Name                 *string                                                                               `json:"name,omitempty"`
	Operator             *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerOperator `json:"operator,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner

// NewAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner instantiates a new AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner() *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner {
	this := AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner{}
	return &this
}

// NewAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerWithDefaults instantiates a new AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerWithDefaults() *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner {
	this := AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) SetName(v string) {
	o.Name = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) GetOperator() AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerOperator {
	if o == nil || IsNil(o.Operator) {
		var ret AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerOperator
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) GetOperatorOk() (*AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerOperator, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerOperator and assigns it to the Operator field.
func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) SetOperator(v AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInnerOperator) {
	o.Operator = &v
}

func (o AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) UnmarshalJSON(data []byte) (err error) {
	varAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner := _AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner{}

	err = json.Unmarshal(data, &varAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner)

	if err != nil {
		return err
	}

	*o = AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner(varAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "operator")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner struct {
	value *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner
	isSet bool
}

func (v NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) Get() *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner {
	return v.value
}

func (v *NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) Set(val *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner(val *AntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) *NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner {
	return &NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner{value: val, isSet: true}
}

func (v NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiSpywareSignaturesSignatureStandardInnerAndConditionInnerOrConditionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
