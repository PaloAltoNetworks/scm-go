/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the DecryptionProfilesSslForwardProxy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DecryptionProfilesSslForwardProxy{}

// DecryptionProfilesSslForwardProxy struct for DecryptionProfilesSslForwardProxy
type DecryptionProfilesSslForwardProxy struct {
	AutoIncludeAltname            *bool `json:"auto_include_altname,omitempty"`
	BlockClientCert               *bool `json:"block_client_cert,omitempty"`
	BlockExpiredCertificate       *bool `json:"block_expired_certificate,omitempty"`
	BlockTimeoutCert              *bool `json:"block_timeout_cert,omitempty"`
	BlockTls13DowngradeNoResource *bool `json:"block_tls13_downgrade_no_resource,omitempty"`
	BlockUnknownCert              *bool `json:"block_unknown_cert,omitempty"`
	BlockUnsupportedCipher        *bool `json:"block_unsupported_cipher,omitempty"`
	BlockUnsupportedVersion       *bool `json:"block_unsupported_version,omitempty"`
	BlockUntrustedIssuer          *bool `json:"block_untrusted_issuer,omitempty"`
	RestrictCertExts              *bool `json:"restrict_cert_exts,omitempty"`
	StripAlpn                     *bool `json:"strip_alpn,omitempty"`
	AdditionalProperties          map[string]interface{}
}

type _DecryptionProfilesSslForwardProxy DecryptionProfilesSslForwardProxy

// NewDecryptionProfilesSslForwardProxy instantiates a new DecryptionProfilesSslForwardProxy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecryptionProfilesSslForwardProxy() *DecryptionProfilesSslForwardProxy {
	this := DecryptionProfilesSslForwardProxy{}
	var autoIncludeAltname bool = false
	this.AutoIncludeAltname = &autoIncludeAltname
	var blockClientCert bool = false
	this.BlockClientCert = &blockClientCert
	var blockExpiredCertificate bool = false
	this.BlockExpiredCertificate = &blockExpiredCertificate
	var blockTimeoutCert bool = false
	this.BlockTimeoutCert = &blockTimeoutCert
	var blockTls13DowngradeNoResource bool = false
	this.BlockTls13DowngradeNoResource = &blockTls13DowngradeNoResource
	var blockUnknownCert bool = false
	this.BlockUnknownCert = &blockUnknownCert
	var blockUnsupportedCipher bool = false
	this.BlockUnsupportedCipher = &blockUnsupportedCipher
	var blockUnsupportedVersion bool = false
	this.BlockUnsupportedVersion = &blockUnsupportedVersion
	var blockUntrustedIssuer bool = false
	this.BlockUntrustedIssuer = &blockUntrustedIssuer
	var restrictCertExts bool = false
	this.RestrictCertExts = &restrictCertExts
	var stripAlpn bool = false
	this.StripAlpn = &stripAlpn
	return &this
}

// NewDecryptionProfilesSslForwardProxyWithDefaults instantiates a new DecryptionProfilesSslForwardProxy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecryptionProfilesSslForwardProxyWithDefaults() *DecryptionProfilesSslForwardProxy {
	this := DecryptionProfilesSslForwardProxy{}
	var autoIncludeAltname bool = false
	this.AutoIncludeAltname = &autoIncludeAltname
	var blockClientCert bool = false
	this.BlockClientCert = &blockClientCert
	var blockExpiredCertificate bool = false
	this.BlockExpiredCertificate = &blockExpiredCertificate
	var blockTimeoutCert bool = false
	this.BlockTimeoutCert = &blockTimeoutCert
	var blockTls13DowngradeNoResource bool = false
	this.BlockTls13DowngradeNoResource = &blockTls13DowngradeNoResource
	var blockUnknownCert bool = false
	this.BlockUnknownCert = &blockUnknownCert
	var blockUnsupportedCipher bool = false
	this.BlockUnsupportedCipher = &blockUnsupportedCipher
	var blockUnsupportedVersion bool = false
	this.BlockUnsupportedVersion = &blockUnsupportedVersion
	var blockUntrustedIssuer bool = false
	this.BlockUntrustedIssuer = &blockUntrustedIssuer
	var restrictCertExts bool = false
	this.RestrictCertExts = &restrictCertExts
	var stripAlpn bool = false
	this.StripAlpn = &stripAlpn
	return &this
}

// GetAutoIncludeAltname returns the AutoIncludeAltname field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetAutoIncludeAltname() bool {
	if o == nil || IsNil(o.AutoIncludeAltname) {
		var ret bool
		return ret
	}
	return *o.AutoIncludeAltname
}

// GetAutoIncludeAltnameOk returns a tuple with the AutoIncludeAltname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetAutoIncludeAltnameOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoIncludeAltname) {
		return nil, false
	}
	return o.AutoIncludeAltname, true
}

// HasAutoIncludeAltname returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasAutoIncludeAltname() bool {
	if o != nil && !IsNil(o.AutoIncludeAltname) {
		return true
	}

	return false
}

// SetAutoIncludeAltname gets a reference to the given bool and assigns it to the AutoIncludeAltname field.
func (o *DecryptionProfilesSslForwardProxy) SetAutoIncludeAltname(v bool) {
	o.AutoIncludeAltname = &v
}

// GetBlockClientCert returns the BlockClientCert field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockClientCert() bool {
	if o == nil || IsNil(o.BlockClientCert) {
		var ret bool
		return ret
	}
	return *o.BlockClientCert
}

// GetBlockClientCertOk returns a tuple with the BlockClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockClientCertOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockClientCert) {
		return nil, false
	}
	return o.BlockClientCert, true
}

// HasBlockClientCert returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockClientCert() bool {
	if o != nil && !IsNil(o.BlockClientCert) {
		return true
	}

	return false
}

// SetBlockClientCert gets a reference to the given bool and assigns it to the BlockClientCert field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockClientCert(v bool) {
	o.BlockClientCert = &v
}

// GetBlockExpiredCertificate returns the BlockExpiredCertificate field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockExpiredCertificate() bool {
	if o == nil || IsNil(o.BlockExpiredCertificate) {
		var ret bool
		return ret
	}
	return *o.BlockExpiredCertificate
}

// GetBlockExpiredCertificateOk returns a tuple with the BlockExpiredCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockExpiredCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockExpiredCertificate) {
		return nil, false
	}
	return o.BlockExpiredCertificate, true
}

// HasBlockExpiredCertificate returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockExpiredCertificate() bool {
	if o != nil && !IsNil(o.BlockExpiredCertificate) {
		return true
	}

	return false
}

// SetBlockExpiredCertificate gets a reference to the given bool and assigns it to the BlockExpiredCertificate field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockExpiredCertificate(v bool) {
	o.BlockExpiredCertificate = &v
}

// GetBlockTimeoutCert returns the BlockTimeoutCert field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockTimeoutCert() bool {
	if o == nil || IsNil(o.BlockTimeoutCert) {
		var ret bool
		return ret
	}
	return *o.BlockTimeoutCert
}

// GetBlockTimeoutCertOk returns a tuple with the BlockTimeoutCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockTimeoutCertOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockTimeoutCert) {
		return nil, false
	}
	return o.BlockTimeoutCert, true
}

// HasBlockTimeoutCert returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockTimeoutCert() bool {
	if o != nil && !IsNil(o.BlockTimeoutCert) {
		return true
	}

	return false
}

// SetBlockTimeoutCert gets a reference to the given bool and assigns it to the BlockTimeoutCert field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockTimeoutCert(v bool) {
	o.BlockTimeoutCert = &v
}

// GetBlockTls13DowngradeNoResource returns the BlockTls13DowngradeNoResource field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockTls13DowngradeNoResource() bool {
	if o == nil || IsNil(o.BlockTls13DowngradeNoResource) {
		var ret bool
		return ret
	}
	return *o.BlockTls13DowngradeNoResource
}

// GetBlockTls13DowngradeNoResourceOk returns a tuple with the BlockTls13DowngradeNoResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockTls13DowngradeNoResourceOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockTls13DowngradeNoResource) {
		return nil, false
	}
	return o.BlockTls13DowngradeNoResource, true
}

// HasBlockTls13DowngradeNoResource returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockTls13DowngradeNoResource() bool {
	if o != nil && !IsNil(o.BlockTls13DowngradeNoResource) {
		return true
	}

	return false
}

// SetBlockTls13DowngradeNoResource gets a reference to the given bool and assigns it to the BlockTls13DowngradeNoResource field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockTls13DowngradeNoResource(v bool) {
	o.BlockTls13DowngradeNoResource = &v
}

// GetBlockUnknownCert returns the BlockUnknownCert field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUnknownCert() bool {
	if o == nil || IsNil(o.BlockUnknownCert) {
		var ret bool
		return ret
	}
	return *o.BlockUnknownCert
}

// GetBlockUnknownCertOk returns a tuple with the BlockUnknownCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUnknownCertOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockUnknownCert) {
		return nil, false
	}
	return o.BlockUnknownCert, true
}

// HasBlockUnknownCert returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockUnknownCert() bool {
	if o != nil && !IsNil(o.BlockUnknownCert) {
		return true
	}

	return false
}

// SetBlockUnknownCert gets a reference to the given bool and assigns it to the BlockUnknownCert field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockUnknownCert(v bool) {
	o.BlockUnknownCert = &v
}

// GetBlockUnsupportedCipher returns the BlockUnsupportedCipher field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUnsupportedCipher() bool {
	if o == nil || IsNil(o.BlockUnsupportedCipher) {
		var ret bool
		return ret
	}
	return *o.BlockUnsupportedCipher
}

// GetBlockUnsupportedCipherOk returns a tuple with the BlockUnsupportedCipher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUnsupportedCipherOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockUnsupportedCipher) {
		return nil, false
	}
	return o.BlockUnsupportedCipher, true
}

// HasBlockUnsupportedCipher returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockUnsupportedCipher() bool {
	if o != nil && !IsNil(o.BlockUnsupportedCipher) {
		return true
	}

	return false
}

// SetBlockUnsupportedCipher gets a reference to the given bool and assigns it to the BlockUnsupportedCipher field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockUnsupportedCipher(v bool) {
	o.BlockUnsupportedCipher = &v
}

// GetBlockUnsupportedVersion returns the BlockUnsupportedVersion field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUnsupportedVersion() bool {
	if o == nil || IsNil(o.BlockUnsupportedVersion) {
		var ret bool
		return ret
	}
	return *o.BlockUnsupportedVersion
}

// GetBlockUnsupportedVersionOk returns a tuple with the BlockUnsupportedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUnsupportedVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockUnsupportedVersion) {
		return nil, false
	}
	return o.BlockUnsupportedVersion, true
}

// HasBlockUnsupportedVersion returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockUnsupportedVersion() bool {
	if o != nil && !IsNil(o.BlockUnsupportedVersion) {
		return true
	}

	return false
}

// SetBlockUnsupportedVersion gets a reference to the given bool and assigns it to the BlockUnsupportedVersion field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockUnsupportedVersion(v bool) {
	o.BlockUnsupportedVersion = &v
}

// GetBlockUntrustedIssuer returns the BlockUntrustedIssuer field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUntrustedIssuer() bool {
	if o == nil || IsNil(o.BlockUntrustedIssuer) {
		var ret bool
		return ret
	}
	return *o.BlockUntrustedIssuer
}

// GetBlockUntrustedIssuerOk returns a tuple with the BlockUntrustedIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetBlockUntrustedIssuerOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockUntrustedIssuer) {
		return nil, false
	}
	return o.BlockUntrustedIssuer, true
}

// HasBlockUntrustedIssuer returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasBlockUntrustedIssuer() bool {
	if o != nil && !IsNil(o.BlockUntrustedIssuer) {
		return true
	}

	return false
}

// SetBlockUntrustedIssuer gets a reference to the given bool and assigns it to the BlockUntrustedIssuer field.
func (o *DecryptionProfilesSslForwardProxy) SetBlockUntrustedIssuer(v bool) {
	o.BlockUntrustedIssuer = &v
}

// GetRestrictCertExts returns the RestrictCertExts field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetRestrictCertExts() bool {
	if o == nil || IsNil(o.RestrictCertExts) {
		var ret bool
		return ret
	}
	return *o.RestrictCertExts
}

// GetRestrictCertExtsOk returns a tuple with the RestrictCertExts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetRestrictCertExtsOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictCertExts) {
		return nil, false
	}
	return o.RestrictCertExts, true
}

// HasRestrictCertExts returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasRestrictCertExts() bool {
	if o != nil && !IsNil(o.RestrictCertExts) {
		return true
	}

	return false
}

// SetRestrictCertExts gets a reference to the given bool and assigns it to the RestrictCertExts field.
func (o *DecryptionProfilesSslForwardProxy) SetRestrictCertExts(v bool) {
	o.RestrictCertExts = &v
}

// GetStripAlpn returns the StripAlpn field value if set, zero value otherwise.
func (o *DecryptionProfilesSslForwardProxy) GetStripAlpn() bool {
	if o == nil || IsNil(o.StripAlpn) {
		var ret bool
		return ret
	}
	return *o.StripAlpn
}

// GetStripAlpnOk returns a tuple with the StripAlpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslForwardProxy) GetStripAlpnOk() (*bool, bool) {
	if o == nil || IsNil(o.StripAlpn) {
		return nil, false
	}
	return o.StripAlpn, true
}

// HasStripAlpn returns a boolean if a field has been set.
func (o *DecryptionProfilesSslForwardProxy) HasStripAlpn() bool {
	if o != nil && !IsNil(o.StripAlpn) {
		return true
	}

	return false
}

// SetStripAlpn gets a reference to the given bool and assigns it to the StripAlpn field.
func (o *DecryptionProfilesSslForwardProxy) SetStripAlpn(v bool) {
	o.StripAlpn = &v
}

func (o DecryptionProfilesSslForwardProxy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DecryptionProfilesSslForwardProxy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoIncludeAltname) {
		toSerialize["auto_include_altname"] = o.AutoIncludeAltname
	}
	if !IsNil(o.BlockClientCert) {
		toSerialize["block_client_cert"] = o.BlockClientCert
	}
	if !IsNil(o.BlockExpiredCertificate) {
		toSerialize["block_expired_certificate"] = o.BlockExpiredCertificate
	}
	if !IsNil(o.BlockTimeoutCert) {
		toSerialize["block_timeout_cert"] = o.BlockTimeoutCert
	}
	if !IsNil(o.BlockTls13DowngradeNoResource) {
		toSerialize["block_tls13_downgrade_no_resource"] = o.BlockTls13DowngradeNoResource
	}
	if !IsNil(o.BlockUnknownCert) {
		toSerialize["block_unknown_cert"] = o.BlockUnknownCert
	}
	if !IsNil(o.BlockUnsupportedCipher) {
		toSerialize["block_unsupported_cipher"] = o.BlockUnsupportedCipher
	}
	if !IsNil(o.BlockUnsupportedVersion) {
		toSerialize["block_unsupported_version"] = o.BlockUnsupportedVersion
	}
	if !IsNil(o.BlockUntrustedIssuer) {
		toSerialize["block_untrusted_issuer"] = o.BlockUntrustedIssuer
	}
	if !IsNil(o.RestrictCertExts) {
		toSerialize["restrict_cert_exts"] = o.RestrictCertExts
	}
	if !IsNil(o.StripAlpn) {
		toSerialize["strip_alpn"] = o.StripAlpn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DecryptionProfilesSslForwardProxy) UnmarshalJSON(data []byte) (err error) {
	varDecryptionProfilesSslForwardProxy := _DecryptionProfilesSslForwardProxy{}

	err = json.Unmarshal(data, &varDecryptionProfilesSslForwardProxy)

	if err != nil {
		return err
	}

	*o = DecryptionProfilesSslForwardProxy(varDecryptionProfilesSslForwardProxy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auto_include_altname")
		delete(additionalProperties, "block_client_cert")
		delete(additionalProperties, "block_expired_certificate")
		delete(additionalProperties, "block_timeout_cert")
		delete(additionalProperties, "block_tls13_downgrade_no_resource")
		delete(additionalProperties, "block_unknown_cert")
		delete(additionalProperties, "block_unsupported_cipher")
		delete(additionalProperties, "block_unsupported_version")
		delete(additionalProperties, "block_untrusted_issuer")
		delete(additionalProperties, "restrict_cert_exts")
		delete(additionalProperties, "strip_alpn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDecryptionProfilesSslForwardProxy struct {
	value *DecryptionProfilesSslForwardProxy
	isSet bool
}

func (v NullableDecryptionProfilesSslForwardProxy) Get() *DecryptionProfilesSslForwardProxy {
	return v.value
}

func (v *NullableDecryptionProfilesSslForwardProxy) Set(val *DecryptionProfilesSslForwardProxy) {
	v.value = val
	v.isSet = true
}

func (v NullableDecryptionProfilesSslForwardProxy) IsSet() bool {
	return v.isSet
}

func (v *NullableDecryptionProfilesSslForwardProxy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecryptionProfilesSslForwardProxy(val *DecryptionProfilesSslForwardProxy) *NullableDecryptionProfilesSslForwardProxy {
	return &NullableDecryptionProfilesSslForwardProxy{value: val, isSet: true}
}

func (v NullableDecryptionProfilesSslForwardProxy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecryptionProfilesSslForwardProxy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
