/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the AntiSpywareSignaturesSignatureCombination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiSpywareSignaturesSignatureCombination{}

// AntiSpywareSignaturesSignatureCombination struct for AntiSpywareSignaturesSignatureCombination
type AntiSpywareSignaturesSignatureCombination struct {
	AndCondition         []AntiSpywareSignaturesSignatureCombinationAndConditionInner `json:"and_condition,omitempty"`
	OrderFree            *bool                                                        `json:"order_free,omitempty"`
	TimeAttribute        *AntiSpywareSignaturesSignatureCombinationTimeAttribute      `json:"time_attribute,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AntiSpywareSignaturesSignatureCombination AntiSpywareSignaturesSignatureCombination

// NewAntiSpywareSignaturesSignatureCombination instantiates a new AntiSpywareSignaturesSignatureCombination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiSpywareSignaturesSignatureCombination() *AntiSpywareSignaturesSignatureCombination {
	this := AntiSpywareSignaturesSignatureCombination{}
	var orderFree bool = false
	this.OrderFree = &orderFree
	return &this
}

// NewAntiSpywareSignaturesSignatureCombinationWithDefaults instantiates a new AntiSpywareSignaturesSignatureCombination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiSpywareSignaturesSignatureCombinationWithDefaults() *AntiSpywareSignaturesSignatureCombination {
	this := AntiSpywareSignaturesSignatureCombination{}
	var orderFree bool = false
	this.OrderFree = &orderFree
	return &this
}

// GetAndCondition returns the AndCondition field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureCombination) GetAndCondition() []AntiSpywareSignaturesSignatureCombinationAndConditionInner {
	if o == nil || IsNil(o.AndCondition) {
		var ret []AntiSpywareSignaturesSignatureCombinationAndConditionInner
		return ret
	}
	return o.AndCondition
}

// GetAndConditionOk returns a tuple with the AndCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureCombination) GetAndConditionOk() ([]AntiSpywareSignaturesSignatureCombinationAndConditionInner, bool) {
	if o == nil || IsNil(o.AndCondition) {
		return nil, false
	}
	return o.AndCondition, true
}

// HasAndCondition returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureCombination) HasAndCondition() bool {
	if o != nil && !IsNil(o.AndCondition) {
		return true
	}

	return false
}

// SetAndCondition gets a reference to the given []AntiSpywareSignaturesSignatureCombinationAndConditionInner and assigns it to the AndCondition field.
func (o *AntiSpywareSignaturesSignatureCombination) SetAndCondition(v []AntiSpywareSignaturesSignatureCombinationAndConditionInner) {
	o.AndCondition = v
}

// GetOrderFree returns the OrderFree field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureCombination) GetOrderFree() bool {
	if o == nil || IsNil(o.OrderFree) {
		var ret bool
		return ret
	}
	return *o.OrderFree
}

// GetOrderFreeOk returns a tuple with the OrderFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureCombination) GetOrderFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.OrderFree) {
		return nil, false
	}
	return o.OrderFree, true
}

// HasOrderFree returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureCombination) HasOrderFree() bool {
	if o != nil && !IsNil(o.OrderFree) {
		return true
	}

	return false
}

// SetOrderFree gets a reference to the given bool and assigns it to the OrderFree field.
func (o *AntiSpywareSignaturesSignatureCombination) SetOrderFree(v bool) {
	o.OrderFree = &v
}

// GetTimeAttribute returns the TimeAttribute field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureCombination) GetTimeAttribute() AntiSpywareSignaturesSignatureCombinationTimeAttribute {
	if o == nil || IsNil(o.TimeAttribute) {
		var ret AntiSpywareSignaturesSignatureCombinationTimeAttribute
		return ret
	}
	return *o.TimeAttribute
}

// GetTimeAttributeOk returns a tuple with the TimeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureCombination) GetTimeAttributeOk() (*AntiSpywareSignaturesSignatureCombinationTimeAttribute, bool) {
	if o == nil || IsNil(o.TimeAttribute) {
		return nil, false
	}
	return o.TimeAttribute, true
}

// HasTimeAttribute returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureCombination) HasTimeAttribute() bool {
	if o != nil && !IsNil(o.TimeAttribute) {
		return true
	}

	return false
}

// SetTimeAttribute gets a reference to the given AntiSpywareSignaturesSignatureCombinationTimeAttribute and assigns it to the TimeAttribute field.
func (o *AntiSpywareSignaturesSignatureCombination) SetTimeAttribute(v AntiSpywareSignaturesSignatureCombinationTimeAttribute) {
	o.TimeAttribute = &v
}

func (o AntiSpywareSignaturesSignatureCombination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiSpywareSignaturesSignatureCombination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AndCondition) {
		toSerialize["and_condition"] = o.AndCondition
	}
	if !IsNil(o.OrderFree) {
		toSerialize["order_free"] = o.OrderFree
	}
	if !IsNil(o.TimeAttribute) {
		toSerialize["time_attribute"] = o.TimeAttribute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AntiSpywareSignaturesSignatureCombination) UnmarshalJSON(data []byte) (err error) {
	varAntiSpywareSignaturesSignatureCombination := _AntiSpywareSignaturesSignatureCombination{}

	err = json.Unmarshal(data, &varAntiSpywareSignaturesSignatureCombination)

	if err != nil {
		return err
	}

	*o = AntiSpywareSignaturesSignatureCombination(varAntiSpywareSignaturesSignatureCombination)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "and_condition")
		delete(additionalProperties, "order_free")
		delete(additionalProperties, "time_attribute")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAntiSpywareSignaturesSignatureCombination struct {
	value *AntiSpywareSignaturesSignatureCombination
	isSet bool
}

func (v NullableAntiSpywareSignaturesSignatureCombination) Get() *AntiSpywareSignaturesSignatureCombination {
	return v.value
}

func (v *NullableAntiSpywareSignaturesSignatureCombination) Set(val *AntiSpywareSignaturesSignatureCombination) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiSpywareSignaturesSignatureCombination) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiSpywareSignaturesSignatureCombination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiSpywareSignaturesSignatureCombination(val *AntiSpywareSignaturesSignatureCombination) *NullableAntiSpywareSignaturesSignatureCombination {
	return &NullableAntiSpywareSignaturesSignatureCombination{value: val, isSet: true}
}

func (v NullableAntiSpywareSignaturesSignatureCombination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiSpywareSignaturesSignatureCombination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
