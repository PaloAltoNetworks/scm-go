/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess{}

// SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess struct for SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess
type SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess struct {
	Enable               *string `json:"enable,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess

// NewSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess instantiates a new SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess() *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess {
	this := SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess{}
	return &this
}

// NewSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccessWithDefaults instantiates a new SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccessWithDefaults() *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess {
	this := SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) GetEnable() string {
	if o == nil || IsNil(o.Enable) {
		var ret string
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) GetEnableOk() (*string, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given string and assigns it to the Enable field.
func (o *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) SetEnable(v string) {
	o.Enable = &v
}

func (o SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) UnmarshalJSON(data []byte) (err error) {
	varSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess := _SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess{}

	err = json.Unmarshal(data, &varSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess)

	if err != nil {
		return err
	}

	*o = SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess(varSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess struct {
	value *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess
	isSet bool
}

func (v NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) Get() *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess {
	return v.value
}

func (v *NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) Set(val *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess(val *SecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) *NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess {
	return &NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess{value: val, isSet: true}
}

func (v NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityRulesAllowWebApplicationInnerSaasEnterpriseControlConsumerAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
