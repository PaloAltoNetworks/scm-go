/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the InternetRuleTypeAllowWebApplicationInnerTenantControl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetRuleTypeAllowWebApplicationInnerTenantControl{}

// InternetRuleTypeAllowWebApplicationInnerTenantControl struct for InternetRuleTypeAllowWebApplicationInnerTenantControl
type InternetRuleTypeAllowWebApplicationInnerTenantControl struct {
	AllowedActivities    []string `json:"allowed_activities,omitempty"`
	BlockedActivities    []string `json:"blocked_activities,omitempty"`
	ParentApplication    *string  `json:"parent_application,omitempty"`
	Tenants              []string `json:"tenants,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InternetRuleTypeAllowWebApplicationInnerTenantControl InternetRuleTypeAllowWebApplicationInnerTenantControl

// NewInternetRuleTypeAllowWebApplicationInnerTenantControl instantiates a new InternetRuleTypeAllowWebApplicationInnerTenantControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetRuleTypeAllowWebApplicationInnerTenantControl() *InternetRuleTypeAllowWebApplicationInnerTenantControl {
	this := InternetRuleTypeAllowWebApplicationInnerTenantControl{}
	return &this
}

// NewInternetRuleTypeAllowWebApplicationInnerTenantControlWithDefaults instantiates a new InternetRuleTypeAllowWebApplicationInnerTenantControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetRuleTypeAllowWebApplicationInnerTenantControlWithDefaults() *InternetRuleTypeAllowWebApplicationInnerTenantControl {
	this := InternetRuleTypeAllowWebApplicationInnerTenantControl{}
	return &this
}

// GetAllowedActivities returns the AllowedActivities field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetAllowedActivities() []string {
	if o == nil || IsNil(o.AllowedActivities) {
		var ret []string
		return ret
	}
	return o.AllowedActivities
}

// GetAllowedActivitiesOk returns a tuple with the AllowedActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetAllowedActivitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedActivities) {
		return nil, false
	}
	return o.AllowedActivities, true
}

// HasAllowedActivities returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) HasAllowedActivities() bool {
	if o != nil && !IsNil(o.AllowedActivities) {
		return true
	}

	return false
}

// SetAllowedActivities gets a reference to the given []string and assigns it to the AllowedActivities field.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) SetAllowedActivities(v []string) {
	o.AllowedActivities = v
}

// GetBlockedActivities returns the BlockedActivities field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetBlockedActivities() []string {
	if o == nil || IsNil(o.BlockedActivities) {
		var ret []string
		return ret
	}
	return o.BlockedActivities
}

// GetBlockedActivitiesOk returns a tuple with the BlockedActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetBlockedActivitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.BlockedActivities) {
		return nil, false
	}
	return o.BlockedActivities, true
}

// HasBlockedActivities returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) HasBlockedActivities() bool {
	if o != nil && !IsNil(o.BlockedActivities) {
		return true
	}

	return false
}

// SetBlockedActivities gets a reference to the given []string and assigns it to the BlockedActivities field.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) SetBlockedActivities(v []string) {
	o.BlockedActivities = v
}

// GetParentApplication returns the ParentApplication field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetParentApplication() string {
	if o == nil || IsNil(o.ParentApplication) {
		var ret string
		return ret
	}
	return *o.ParentApplication
}

// GetParentApplicationOk returns a tuple with the ParentApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetParentApplicationOk() (*string, bool) {
	if o == nil || IsNil(o.ParentApplication) {
		return nil, false
	}
	return o.ParentApplication, true
}

// HasParentApplication returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) HasParentApplication() bool {
	if o != nil && !IsNil(o.ParentApplication) {
		return true
	}

	return false
}

// SetParentApplication gets a reference to the given string and assigns it to the ParentApplication field.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) SetParentApplication(v string) {
	o.ParentApplication = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetTenants() []string {
	if o == nil || IsNil(o.Tenants) {
		var ret []string
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) GetTenantsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []string and assigns it to the Tenants field.
func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) SetTenants(v []string) {
	o.Tenants = v
}

func (o InternetRuleTypeAllowWebApplicationInnerTenantControl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetRuleTypeAllowWebApplicationInnerTenantControl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedActivities) {
		toSerialize["allowed_activities"] = o.AllowedActivities
	}
	if !IsNil(o.BlockedActivities) {
		toSerialize["blocked_activities"] = o.BlockedActivities
	}
	if !IsNil(o.ParentApplication) {
		toSerialize["parent_application"] = o.ParentApplication
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternetRuleTypeAllowWebApplicationInnerTenantControl) UnmarshalJSON(data []byte) (err error) {
	varInternetRuleTypeAllowWebApplicationInnerTenantControl := _InternetRuleTypeAllowWebApplicationInnerTenantControl{}

	err = json.Unmarshal(data, &varInternetRuleTypeAllowWebApplicationInnerTenantControl)

	if err != nil {
		return err
	}

	*o = InternetRuleTypeAllowWebApplicationInnerTenantControl(varInternetRuleTypeAllowWebApplicationInnerTenantControl)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowed_activities")
		delete(additionalProperties, "blocked_activities")
		delete(additionalProperties, "parent_application")
		delete(additionalProperties, "tenants")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternetRuleTypeAllowWebApplicationInnerTenantControl struct {
	value *InternetRuleTypeAllowWebApplicationInnerTenantControl
	isSet bool
}

func (v NullableInternetRuleTypeAllowWebApplicationInnerTenantControl) Get() *InternetRuleTypeAllowWebApplicationInnerTenantControl {
	return v.value
}

func (v *NullableInternetRuleTypeAllowWebApplicationInnerTenantControl) Set(val *InternetRuleTypeAllowWebApplicationInnerTenantControl) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetRuleTypeAllowWebApplicationInnerTenantControl) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetRuleTypeAllowWebApplicationInnerTenantControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetRuleTypeAllowWebApplicationInnerTenantControl(val *InternetRuleTypeAllowWebApplicationInnerTenantControl) *NullableInternetRuleTypeAllowWebApplicationInnerTenantControl {
	return &NullableInternetRuleTypeAllowWebApplicationInnerTenantControl{value: val, isSet: true}
}

func (v NullableInternetRuleTypeAllowWebApplicationInnerTenantControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetRuleTypeAllowWebApplicationInnerTenantControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
