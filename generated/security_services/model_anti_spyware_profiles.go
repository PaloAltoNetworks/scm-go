/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
	"fmt"
)

// checks if the AntiSpywareProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiSpywareProfiles{}

// AntiSpywareProfiles struct for AntiSpywareProfiles
type AntiSpywareProfiles struct {
	CloudInlineAnalysis *bool   `json:"cloud_inline_analysis,omitempty"`
	Description         *string `json:"description,omitempty"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// The UUID of the anti-spyware profile
	Id                       string                                             `json:"id"`
	InlineExceptionEdlUrl    []string                                           `json:"inline_exception_edl_url,omitempty"`
	InlineExceptionIpAddress []string                                           `json:"inline_exception_ip_address,omitempty"`
	MicaEngineSpywareEnabled []AntiSpywareProfilesMicaEngineSpywareEnabledInner `json:"mica_engine_spyware_enabled,omitempty"`
	// The name of the anti-spyware profile
	Name  string                          `json:"name"`
	Rules []AntiSpywareProfilesRulesInner `json:"rules,omitempty"`
	// The snippet in which the resource is defined
	Snippet              *string                                   `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	ThreatException      []AntiSpywareProfilesThreatExceptionInner `json:"threat_exception,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AntiSpywareProfiles AntiSpywareProfiles

// NewAntiSpywareProfiles instantiates a new AntiSpywareProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiSpywareProfiles(id string, name string) *AntiSpywareProfiles {
	this := AntiSpywareProfiles{}
	var cloudInlineAnalysis bool = false
	this.CloudInlineAnalysis = &cloudInlineAnalysis
	this.Id = id
	this.Name = name
	return &this
}

// NewAntiSpywareProfilesWithDefaults instantiates a new AntiSpywareProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiSpywareProfilesWithDefaults() *AntiSpywareProfiles {
	this := AntiSpywareProfiles{}
	var cloudInlineAnalysis bool = false
	this.CloudInlineAnalysis = &cloudInlineAnalysis
	return &this
}

// GetCloudInlineAnalysis returns the CloudInlineAnalysis field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetCloudInlineAnalysis() bool {
	if o == nil || IsNil(o.CloudInlineAnalysis) {
		var ret bool
		return ret
	}
	return *o.CloudInlineAnalysis
}

// GetCloudInlineAnalysisOk returns a tuple with the CloudInlineAnalysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetCloudInlineAnalysisOk() (*bool, bool) {
	if o == nil || IsNil(o.CloudInlineAnalysis) {
		return nil, false
	}
	return o.CloudInlineAnalysis, true
}

// HasCloudInlineAnalysis returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasCloudInlineAnalysis() bool {
	if o != nil && !IsNil(o.CloudInlineAnalysis) {
		return true
	}

	return false
}

// SetCloudInlineAnalysis gets a reference to the given bool and assigns it to the CloudInlineAnalysis field.
func (o *AntiSpywareProfiles) SetCloudInlineAnalysis(v bool) {
	o.CloudInlineAnalysis = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AntiSpywareProfiles) SetDescription(v string) {
	o.Description = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *AntiSpywareProfiles) SetDevice(v string) {
	o.Device = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *AntiSpywareProfiles) SetFolder(v string) {
	o.Folder = &v
}

// GetId returns the Id field value
func (o *AntiSpywareProfiles) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AntiSpywareProfiles) SetId(v string) {
	o.Id = v
}

// GetInlineExceptionEdlUrl returns the InlineExceptionEdlUrl field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetInlineExceptionEdlUrl() []string {
	if o == nil || IsNil(o.InlineExceptionEdlUrl) {
		var ret []string
		return ret
	}
	return o.InlineExceptionEdlUrl
}

// GetInlineExceptionEdlUrlOk returns a tuple with the InlineExceptionEdlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetInlineExceptionEdlUrlOk() ([]string, bool) {
	if o == nil || IsNil(o.InlineExceptionEdlUrl) {
		return nil, false
	}
	return o.InlineExceptionEdlUrl, true
}

// HasInlineExceptionEdlUrl returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasInlineExceptionEdlUrl() bool {
	if o != nil && !IsNil(o.InlineExceptionEdlUrl) {
		return true
	}

	return false
}

// SetInlineExceptionEdlUrl gets a reference to the given []string and assigns it to the InlineExceptionEdlUrl field.
func (o *AntiSpywareProfiles) SetInlineExceptionEdlUrl(v []string) {
	o.InlineExceptionEdlUrl = v
}

// GetInlineExceptionIpAddress returns the InlineExceptionIpAddress field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetInlineExceptionIpAddress() []string {
	if o == nil || IsNil(o.InlineExceptionIpAddress) {
		var ret []string
		return ret
	}
	return o.InlineExceptionIpAddress
}

// GetInlineExceptionIpAddressOk returns a tuple with the InlineExceptionIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetInlineExceptionIpAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.InlineExceptionIpAddress) {
		return nil, false
	}
	return o.InlineExceptionIpAddress, true
}

// HasInlineExceptionIpAddress returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasInlineExceptionIpAddress() bool {
	if o != nil && !IsNil(o.InlineExceptionIpAddress) {
		return true
	}

	return false
}

// SetInlineExceptionIpAddress gets a reference to the given []string and assigns it to the InlineExceptionIpAddress field.
func (o *AntiSpywareProfiles) SetInlineExceptionIpAddress(v []string) {
	o.InlineExceptionIpAddress = v
}

// GetMicaEngineSpywareEnabled returns the MicaEngineSpywareEnabled field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetMicaEngineSpywareEnabled() []AntiSpywareProfilesMicaEngineSpywareEnabledInner {
	if o == nil || IsNil(o.MicaEngineSpywareEnabled) {
		var ret []AntiSpywareProfilesMicaEngineSpywareEnabledInner
		return ret
	}
	return o.MicaEngineSpywareEnabled
}

// GetMicaEngineSpywareEnabledOk returns a tuple with the MicaEngineSpywareEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetMicaEngineSpywareEnabledOk() ([]AntiSpywareProfilesMicaEngineSpywareEnabledInner, bool) {
	if o == nil || IsNil(o.MicaEngineSpywareEnabled) {
		return nil, false
	}
	return o.MicaEngineSpywareEnabled, true
}

// HasMicaEngineSpywareEnabled returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasMicaEngineSpywareEnabled() bool {
	if o != nil && !IsNil(o.MicaEngineSpywareEnabled) {
		return true
	}

	return false
}

// SetMicaEngineSpywareEnabled gets a reference to the given []AntiSpywareProfilesMicaEngineSpywareEnabledInner and assigns it to the MicaEngineSpywareEnabled field.
func (o *AntiSpywareProfiles) SetMicaEngineSpywareEnabled(v []AntiSpywareProfilesMicaEngineSpywareEnabledInner) {
	o.MicaEngineSpywareEnabled = v
}

// GetName returns the Name field value
func (o *AntiSpywareProfiles) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AntiSpywareProfiles) SetName(v string) {
	o.Name = v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetRules() []AntiSpywareProfilesRulesInner {
	if o == nil || IsNil(o.Rules) {
		var ret []AntiSpywareProfilesRulesInner
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetRulesOk() ([]AntiSpywareProfilesRulesInner, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []AntiSpywareProfilesRulesInner and assigns it to the Rules field.
func (o *AntiSpywareProfiles) SetRules(v []AntiSpywareProfilesRulesInner) {
	o.Rules = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *AntiSpywareProfiles) SetSnippet(v string) {
	o.Snippet = &v
}

// GetThreatException returns the ThreatException field value if set, zero value otherwise.
func (o *AntiSpywareProfiles) GetThreatException() []AntiSpywareProfilesThreatExceptionInner {
	if o == nil || IsNil(o.ThreatException) {
		var ret []AntiSpywareProfilesThreatExceptionInner
		return ret
	}
	return o.ThreatException
}

// GetThreatExceptionOk returns a tuple with the ThreatException field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfiles) GetThreatExceptionOk() ([]AntiSpywareProfilesThreatExceptionInner, bool) {
	if o == nil || IsNil(o.ThreatException) {
		return nil, false
	}
	return o.ThreatException, true
}

// HasThreatException returns a boolean if a field has been set.
func (o *AntiSpywareProfiles) HasThreatException() bool {
	if o != nil && !IsNil(o.ThreatException) {
		return true
	}

	return false
}

// SetThreatException gets a reference to the given []AntiSpywareProfilesThreatExceptionInner and assigns it to the ThreatException field.
func (o *AntiSpywareProfiles) SetThreatException(v []AntiSpywareProfilesThreatExceptionInner) {
	o.ThreatException = v
}

func (o AntiSpywareProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiSpywareProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudInlineAnalysis) {
		toSerialize["cloud_inline_analysis"] = o.CloudInlineAnalysis
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.InlineExceptionEdlUrl) {
		toSerialize["inline_exception_edl_url"] = o.InlineExceptionEdlUrl
	}
	if !IsNil(o.InlineExceptionIpAddress) {
		toSerialize["inline_exception_ip_address"] = o.InlineExceptionIpAddress
	}
	if !IsNil(o.MicaEngineSpywareEnabled) {
		toSerialize["mica_engine_spyware_enabled"] = o.MicaEngineSpywareEnabled
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.ThreatException) {
		toSerialize["threat_exception"] = o.ThreatException
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AntiSpywareProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAntiSpywareProfiles := _AntiSpywareProfiles{}

	err = json.Unmarshal(data, &varAntiSpywareProfiles)

	if err != nil {
		return err
	}

	*o = AntiSpywareProfiles(varAntiSpywareProfiles)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloud_inline_analysis")
		delete(additionalProperties, "description")
		delete(additionalProperties, "device")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "id")
		delete(additionalProperties, "inline_exception_edl_url")
		delete(additionalProperties, "inline_exception_ip_address")
		delete(additionalProperties, "mica_engine_spyware_enabled")
		delete(additionalProperties, "name")
		delete(additionalProperties, "rules")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "threat_exception")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAntiSpywareProfiles struct {
	value *AntiSpywareProfiles
	isSet bool
}

func (v NullableAntiSpywareProfiles) Get() *AntiSpywareProfiles {
	return v.value
}

func (v *NullableAntiSpywareProfiles) Set(val *AntiSpywareProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiSpywareProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiSpywareProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiSpywareProfiles(val *AntiSpywareProfiles) *NullableAntiSpywareProfiles {
	return &NullableAntiSpywareProfiles{value: val, isSet: true}
}

func (v NullableAntiSpywareProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiSpywareProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
