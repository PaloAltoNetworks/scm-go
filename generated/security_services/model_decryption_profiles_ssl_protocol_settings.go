/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the DecryptionProfilesSslProtocolSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DecryptionProfilesSslProtocolSettings{}

// DecryptionProfilesSslProtocolSettings struct for DecryptionProfilesSslProtocolSettings
type DecryptionProfilesSslProtocolSettings struct {
	AuthAlgoMd5             *bool   `json:"auth_algo_md5,omitempty"`
	AuthAlgoSha1            *bool   `json:"auth_algo_sha1,omitempty"`
	AuthAlgoSha256          *bool   `json:"auth_algo_sha256,omitempty"`
	AuthAlgoSha384          *bool   `json:"auth_algo_sha384,omitempty"`
	EncAlgo3des             *bool   `json:"enc_algo_3des,omitempty"`
	EncAlgoAes128Cbc        *bool   `json:"enc_algo_aes_128_cbc,omitempty"`
	EncAlgoAes128Gcm        *bool   `json:"enc_algo_aes_128_gcm,omitempty"`
	EncAlgoAes256Cbc        *bool   `json:"enc_algo_aes_256_cbc,omitempty"`
	EncAlgoAes256Gcm        *bool   `json:"enc_algo_aes_256_gcm,omitempty"`
	EncAlgoChacha20Poly1305 *bool   `json:"enc_algo_chacha20_poly1305,omitempty"`
	EncAlgoRc4              *bool   `json:"enc_algo_rc4,omitempty"`
	KeyxchgAlgoDhe          *bool   `json:"keyxchg_algo_dhe,omitempty"`
	KeyxchgAlgoEcdhe        *bool   `json:"keyxchg_algo_ecdhe,omitempty"`
	KeyxchgAlgoRsa          *bool   `json:"keyxchg_algo_rsa,omitempty"`
	MaxVersion              *string `json:"max_version,omitempty"`
	MinVersion              *string `json:"min_version,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _DecryptionProfilesSslProtocolSettings DecryptionProfilesSslProtocolSettings

// NewDecryptionProfilesSslProtocolSettings instantiates a new DecryptionProfilesSslProtocolSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecryptionProfilesSslProtocolSettings() *DecryptionProfilesSslProtocolSettings {
	this := DecryptionProfilesSslProtocolSettings{}
	var authAlgoMd5 bool = true
	this.AuthAlgoMd5 = &authAlgoMd5
	var authAlgoSha1 bool = true
	this.AuthAlgoSha1 = &authAlgoSha1
	var authAlgoSha256 bool = true
	this.AuthAlgoSha256 = &authAlgoSha256
	var authAlgoSha384 bool = true
	this.AuthAlgoSha384 = &authAlgoSha384
	var encAlgo3des bool = true
	this.EncAlgo3des = &encAlgo3des
	var encAlgoAes128Cbc bool = true
	this.EncAlgoAes128Cbc = &encAlgoAes128Cbc
	var encAlgoAes128Gcm bool = true
	this.EncAlgoAes128Gcm = &encAlgoAes128Gcm
	var encAlgoAes256Cbc bool = true
	this.EncAlgoAes256Cbc = &encAlgoAes256Cbc
	var encAlgoAes256Gcm bool = true
	this.EncAlgoAes256Gcm = &encAlgoAes256Gcm
	var encAlgoChacha20Poly1305 bool = true
	this.EncAlgoChacha20Poly1305 = &encAlgoChacha20Poly1305
	var encAlgoRc4 bool = true
	this.EncAlgoRc4 = &encAlgoRc4
	var keyxchgAlgoDhe bool = true
	this.KeyxchgAlgoDhe = &keyxchgAlgoDhe
	var keyxchgAlgoEcdhe bool = true
	this.KeyxchgAlgoEcdhe = &keyxchgAlgoEcdhe
	var keyxchgAlgoRsa bool = true
	this.KeyxchgAlgoRsa = &keyxchgAlgoRsa
	var maxVersion string = "tls1-2"
	this.MaxVersion = &maxVersion
	var minVersion string = "tls1-0"
	this.MinVersion = &minVersion
	return &this
}

// NewDecryptionProfilesSslProtocolSettingsWithDefaults instantiates a new DecryptionProfilesSslProtocolSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecryptionProfilesSslProtocolSettingsWithDefaults() *DecryptionProfilesSslProtocolSettings {
	this := DecryptionProfilesSslProtocolSettings{}
	var authAlgoMd5 bool = true
	this.AuthAlgoMd5 = &authAlgoMd5
	var authAlgoSha1 bool = true
	this.AuthAlgoSha1 = &authAlgoSha1
	var authAlgoSha256 bool = true
	this.AuthAlgoSha256 = &authAlgoSha256
	var authAlgoSha384 bool = true
	this.AuthAlgoSha384 = &authAlgoSha384
	var encAlgo3des bool = true
	this.EncAlgo3des = &encAlgo3des
	var encAlgoAes128Cbc bool = true
	this.EncAlgoAes128Cbc = &encAlgoAes128Cbc
	var encAlgoAes128Gcm bool = true
	this.EncAlgoAes128Gcm = &encAlgoAes128Gcm
	var encAlgoAes256Cbc bool = true
	this.EncAlgoAes256Cbc = &encAlgoAes256Cbc
	var encAlgoAes256Gcm bool = true
	this.EncAlgoAes256Gcm = &encAlgoAes256Gcm
	var encAlgoChacha20Poly1305 bool = true
	this.EncAlgoChacha20Poly1305 = &encAlgoChacha20Poly1305
	var encAlgoRc4 bool = true
	this.EncAlgoRc4 = &encAlgoRc4
	var keyxchgAlgoDhe bool = true
	this.KeyxchgAlgoDhe = &keyxchgAlgoDhe
	var keyxchgAlgoEcdhe bool = true
	this.KeyxchgAlgoEcdhe = &keyxchgAlgoEcdhe
	var keyxchgAlgoRsa bool = true
	this.KeyxchgAlgoRsa = &keyxchgAlgoRsa
	var maxVersion string = "tls1-2"
	this.MaxVersion = &maxVersion
	var minVersion string = "tls1-0"
	this.MinVersion = &minVersion
	return &this
}

// GetAuthAlgoMd5 returns the AuthAlgoMd5 field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoMd5() bool {
	if o == nil || IsNil(o.AuthAlgoMd5) {
		var ret bool
		return ret
	}
	return *o.AuthAlgoMd5
}

// GetAuthAlgoMd5Ok returns a tuple with the AuthAlgoMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoMd5Ok() (*bool, bool) {
	if o == nil || IsNil(o.AuthAlgoMd5) {
		return nil, false
	}
	return o.AuthAlgoMd5, true
}

// HasAuthAlgoMd5 returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasAuthAlgoMd5() bool {
	if o != nil && !IsNil(o.AuthAlgoMd5) {
		return true
	}

	return false
}

// SetAuthAlgoMd5 gets a reference to the given bool and assigns it to the AuthAlgoMd5 field.
func (o *DecryptionProfilesSslProtocolSettings) SetAuthAlgoMd5(v bool) {
	o.AuthAlgoMd5 = &v
}

// GetAuthAlgoSha1 returns the AuthAlgoSha1 field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoSha1() bool {
	if o == nil || IsNil(o.AuthAlgoSha1) {
		var ret bool
		return ret
	}
	return *o.AuthAlgoSha1
}

// GetAuthAlgoSha1Ok returns a tuple with the AuthAlgoSha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoSha1Ok() (*bool, bool) {
	if o == nil || IsNil(o.AuthAlgoSha1) {
		return nil, false
	}
	return o.AuthAlgoSha1, true
}

// HasAuthAlgoSha1 returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasAuthAlgoSha1() bool {
	if o != nil && !IsNil(o.AuthAlgoSha1) {
		return true
	}

	return false
}

// SetAuthAlgoSha1 gets a reference to the given bool and assigns it to the AuthAlgoSha1 field.
func (o *DecryptionProfilesSslProtocolSettings) SetAuthAlgoSha1(v bool) {
	o.AuthAlgoSha1 = &v
}

// GetAuthAlgoSha256 returns the AuthAlgoSha256 field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoSha256() bool {
	if o == nil || IsNil(o.AuthAlgoSha256) {
		var ret bool
		return ret
	}
	return *o.AuthAlgoSha256
}

// GetAuthAlgoSha256Ok returns a tuple with the AuthAlgoSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.AuthAlgoSha256) {
		return nil, false
	}
	return o.AuthAlgoSha256, true
}

// HasAuthAlgoSha256 returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasAuthAlgoSha256() bool {
	if o != nil && !IsNil(o.AuthAlgoSha256) {
		return true
	}

	return false
}

// SetAuthAlgoSha256 gets a reference to the given bool and assigns it to the AuthAlgoSha256 field.
func (o *DecryptionProfilesSslProtocolSettings) SetAuthAlgoSha256(v bool) {
	o.AuthAlgoSha256 = &v
}

// GetAuthAlgoSha384 returns the AuthAlgoSha384 field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoSha384() bool {
	if o == nil || IsNil(o.AuthAlgoSha384) {
		var ret bool
		return ret
	}
	return *o.AuthAlgoSha384
}

// GetAuthAlgoSha384Ok returns a tuple with the AuthAlgoSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetAuthAlgoSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.AuthAlgoSha384) {
		return nil, false
	}
	return o.AuthAlgoSha384, true
}

// HasAuthAlgoSha384 returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasAuthAlgoSha384() bool {
	if o != nil && !IsNil(o.AuthAlgoSha384) {
		return true
	}

	return false
}

// SetAuthAlgoSha384 gets a reference to the given bool and assigns it to the AuthAlgoSha384 field.
func (o *DecryptionProfilesSslProtocolSettings) SetAuthAlgoSha384(v bool) {
	o.AuthAlgoSha384 = &v
}

// GetEncAlgo3des returns the EncAlgo3des field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgo3des() bool {
	if o == nil || IsNil(o.EncAlgo3des) {
		var ret bool
		return ret
	}
	return *o.EncAlgo3des
}

// GetEncAlgo3desOk returns a tuple with the EncAlgo3des field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgo3desOk() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgo3des) {
		return nil, false
	}
	return o.EncAlgo3des, true
}

// HasEncAlgo3des returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgo3des() bool {
	if o != nil && !IsNil(o.EncAlgo3des) {
		return true
	}

	return false
}

// SetEncAlgo3des gets a reference to the given bool and assigns it to the EncAlgo3des field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgo3des(v bool) {
	o.EncAlgo3des = &v
}

// GetEncAlgoAes128Cbc returns the EncAlgoAes128Cbc field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes128Cbc() bool {
	if o == nil || IsNil(o.EncAlgoAes128Cbc) {
		var ret bool
		return ret
	}
	return *o.EncAlgoAes128Cbc
}

// GetEncAlgoAes128CbcOk returns a tuple with the EncAlgoAes128Cbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes128CbcOk() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgoAes128Cbc) {
		return nil, false
	}
	return o.EncAlgoAes128Cbc, true
}

// HasEncAlgoAes128Cbc returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgoAes128Cbc() bool {
	if o != nil && !IsNil(o.EncAlgoAes128Cbc) {
		return true
	}

	return false
}

// SetEncAlgoAes128Cbc gets a reference to the given bool and assigns it to the EncAlgoAes128Cbc field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgoAes128Cbc(v bool) {
	o.EncAlgoAes128Cbc = &v
}

// GetEncAlgoAes128Gcm returns the EncAlgoAes128Gcm field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes128Gcm() bool {
	if o == nil || IsNil(o.EncAlgoAes128Gcm) {
		var ret bool
		return ret
	}
	return *o.EncAlgoAes128Gcm
}

// GetEncAlgoAes128GcmOk returns a tuple with the EncAlgoAes128Gcm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes128GcmOk() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgoAes128Gcm) {
		return nil, false
	}
	return o.EncAlgoAes128Gcm, true
}

// HasEncAlgoAes128Gcm returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgoAes128Gcm() bool {
	if o != nil && !IsNil(o.EncAlgoAes128Gcm) {
		return true
	}

	return false
}

// SetEncAlgoAes128Gcm gets a reference to the given bool and assigns it to the EncAlgoAes128Gcm field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgoAes128Gcm(v bool) {
	o.EncAlgoAes128Gcm = &v
}

// GetEncAlgoAes256Cbc returns the EncAlgoAes256Cbc field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes256Cbc() bool {
	if o == nil || IsNil(o.EncAlgoAes256Cbc) {
		var ret bool
		return ret
	}
	return *o.EncAlgoAes256Cbc
}

// GetEncAlgoAes256CbcOk returns a tuple with the EncAlgoAes256Cbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes256CbcOk() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgoAes256Cbc) {
		return nil, false
	}
	return o.EncAlgoAes256Cbc, true
}

// HasEncAlgoAes256Cbc returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgoAes256Cbc() bool {
	if o != nil && !IsNil(o.EncAlgoAes256Cbc) {
		return true
	}

	return false
}

// SetEncAlgoAes256Cbc gets a reference to the given bool and assigns it to the EncAlgoAes256Cbc field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgoAes256Cbc(v bool) {
	o.EncAlgoAes256Cbc = &v
}

// GetEncAlgoAes256Gcm returns the EncAlgoAes256Gcm field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes256Gcm() bool {
	if o == nil || IsNil(o.EncAlgoAes256Gcm) {
		var ret bool
		return ret
	}
	return *o.EncAlgoAes256Gcm
}

// GetEncAlgoAes256GcmOk returns a tuple with the EncAlgoAes256Gcm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoAes256GcmOk() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgoAes256Gcm) {
		return nil, false
	}
	return o.EncAlgoAes256Gcm, true
}

// HasEncAlgoAes256Gcm returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgoAes256Gcm() bool {
	if o != nil && !IsNil(o.EncAlgoAes256Gcm) {
		return true
	}

	return false
}

// SetEncAlgoAes256Gcm gets a reference to the given bool and assigns it to the EncAlgoAes256Gcm field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgoAes256Gcm(v bool) {
	o.EncAlgoAes256Gcm = &v
}

// GetEncAlgoChacha20Poly1305 returns the EncAlgoChacha20Poly1305 field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoChacha20Poly1305() bool {
	if o == nil || IsNil(o.EncAlgoChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.EncAlgoChacha20Poly1305
}

// GetEncAlgoChacha20Poly1305Ok returns a tuple with the EncAlgoChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgoChacha20Poly1305) {
		return nil, false
	}
	return o.EncAlgoChacha20Poly1305, true
}

// HasEncAlgoChacha20Poly1305 returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgoChacha20Poly1305() bool {
	if o != nil && !IsNil(o.EncAlgoChacha20Poly1305) {
		return true
	}

	return false
}

// SetEncAlgoChacha20Poly1305 gets a reference to the given bool and assigns it to the EncAlgoChacha20Poly1305 field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgoChacha20Poly1305(v bool) {
	o.EncAlgoChacha20Poly1305 = &v
}

// GetEncAlgoRc4 returns the EncAlgoRc4 field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoRc4() bool {
	if o == nil || IsNil(o.EncAlgoRc4) {
		var ret bool
		return ret
	}
	return *o.EncAlgoRc4
}

// GetEncAlgoRc4Ok returns a tuple with the EncAlgoRc4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetEncAlgoRc4Ok() (*bool, bool) {
	if o == nil || IsNil(o.EncAlgoRc4) {
		return nil, false
	}
	return o.EncAlgoRc4, true
}

// HasEncAlgoRc4 returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasEncAlgoRc4() bool {
	if o != nil && !IsNil(o.EncAlgoRc4) {
		return true
	}

	return false
}

// SetEncAlgoRc4 gets a reference to the given bool and assigns it to the EncAlgoRc4 field.
func (o *DecryptionProfilesSslProtocolSettings) SetEncAlgoRc4(v bool) {
	o.EncAlgoRc4 = &v
}

// GetKeyxchgAlgoDhe returns the KeyxchgAlgoDhe field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetKeyxchgAlgoDhe() bool {
	if o == nil || IsNil(o.KeyxchgAlgoDhe) {
		var ret bool
		return ret
	}
	return *o.KeyxchgAlgoDhe
}

// GetKeyxchgAlgoDheOk returns a tuple with the KeyxchgAlgoDhe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetKeyxchgAlgoDheOk() (*bool, bool) {
	if o == nil || IsNil(o.KeyxchgAlgoDhe) {
		return nil, false
	}
	return o.KeyxchgAlgoDhe, true
}

// HasKeyxchgAlgoDhe returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasKeyxchgAlgoDhe() bool {
	if o != nil && !IsNil(o.KeyxchgAlgoDhe) {
		return true
	}

	return false
}

// SetKeyxchgAlgoDhe gets a reference to the given bool and assigns it to the KeyxchgAlgoDhe field.
func (o *DecryptionProfilesSslProtocolSettings) SetKeyxchgAlgoDhe(v bool) {
	o.KeyxchgAlgoDhe = &v
}

// GetKeyxchgAlgoEcdhe returns the KeyxchgAlgoEcdhe field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetKeyxchgAlgoEcdhe() bool {
	if o == nil || IsNil(o.KeyxchgAlgoEcdhe) {
		var ret bool
		return ret
	}
	return *o.KeyxchgAlgoEcdhe
}

// GetKeyxchgAlgoEcdheOk returns a tuple with the KeyxchgAlgoEcdhe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetKeyxchgAlgoEcdheOk() (*bool, bool) {
	if o == nil || IsNil(o.KeyxchgAlgoEcdhe) {
		return nil, false
	}
	return o.KeyxchgAlgoEcdhe, true
}

// HasKeyxchgAlgoEcdhe returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasKeyxchgAlgoEcdhe() bool {
	if o != nil && !IsNil(o.KeyxchgAlgoEcdhe) {
		return true
	}

	return false
}

// SetKeyxchgAlgoEcdhe gets a reference to the given bool and assigns it to the KeyxchgAlgoEcdhe field.
func (o *DecryptionProfilesSslProtocolSettings) SetKeyxchgAlgoEcdhe(v bool) {
	o.KeyxchgAlgoEcdhe = &v
}

// GetKeyxchgAlgoRsa returns the KeyxchgAlgoRsa field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetKeyxchgAlgoRsa() bool {
	if o == nil || IsNil(o.KeyxchgAlgoRsa) {
		var ret bool
		return ret
	}
	return *o.KeyxchgAlgoRsa
}

// GetKeyxchgAlgoRsaOk returns a tuple with the KeyxchgAlgoRsa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetKeyxchgAlgoRsaOk() (*bool, bool) {
	if o == nil || IsNil(o.KeyxchgAlgoRsa) {
		return nil, false
	}
	return o.KeyxchgAlgoRsa, true
}

// HasKeyxchgAlgoRsa returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasKeyxchgAlgoRsa() bool {
	if o != nil && !IsNil(o.KeyxchgAlgoRsa) {
		return true
	}

	return false
}

// SetKeyxchgAlgoRsa gets a reference to the given bool and assigns it to the KeyxchgAlgoRsa field.
func (o *DecryptionProfilesSslProtocolSettings) SetKeyxchgAlgoRsa(v bool) {
	o.KeyxchgAlgoRsa = &v
}

// GetMaxVersion returns the MaxVersion field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetMaxVersion() string {
	if o == nil || IsNil(o.MaxVersion) {
		var ret string
		return ret
	}
	return *o.MaxVersion
}

// GetMaxVersionOk returns a tuple with the MaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetMaxVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MaxVersion) {
		return nil, false
	}
	return o.MaxVersion, true
}

// HasMaxVersion returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasMaxVersion() bool {
	if o != nil && !IsNil(o.MaxVersion) {
		return true
	}

	return false
}

// SetMaxVersion gets a reference to the given string and assigns it to the MaxVersion field.
func (o *DecryptionProfilesSslProtocolSettings) SetMaxVersion(v string) {
	o.MaxVersion = &v
}

// GetMinVersion returns the MinVersion field value if set, zero value otherwise.
func (o *DecryptionProfilesSslProtocolSettings) GetMinVersion() string {
	if o == nil || IsNil(o.MinVersion) {
		var ret string
		return ret
	}
	return *o.MinVersion
}

// GetMinVersionOk returns a tuple with the MinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslProtocolSettings) GetMinVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MinVersion) {
		return nil, false
	}
	return o.MinVersion, true
}

// HasMinVersion returns a boolean if a field has been set.
func (o *DecryptionProfilesSslProtocolSettings) HasMinVersion() bool {
	if o != nil && !IsNil(o.MinVersion) {
		return true
	}

	return false
}

// SetMinVersion gets a reference to the given string and assigns it to the MinVersion field.
func (o *DecryptionProfilesSslProtocolSettings) SetMinVersion(v string) {
	o.MinVersion = &v
}

func (o DecryptionProfilesSslProtocolSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DecryptionProfilesSslProtocolSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthAlgoMd5) {
		toSerialize["auth_algo_md5"] = o.AuthAlgoMd5
	}
	if !IsNil(o.AuthAlgoSha1) {
		toSerialize["auth_algo_sha1"] = o.AuthAlgoSha1
	}
	if !IsNil(o.AuthAlgoSha256) {
		toSerialize["auth_algo_sha256"] = o.AuthAlgoSha256
	}
	if !IsNil(o.AuthAlgoSha384) {
		toSerialize["auth_algo_sha384"] = o.AuthAlgoSha384
	}
	if !IsNil(o.EncAlgo3des) {
		toSerialize["enc_algo_3des"] = o.EncAlgo3des
	}
	if !IsNil(o.EncAlgoAes128Cbc) {
		toSerialize["enc_algo_aes_128_cbc"] = o.EncAlgoAes128Cbc
	}
	if !IsNil(o.EncAlgoAes128Gcm) {
		toSerialize["enc_algo_aes_128_gcm"] = o.EncAlgoAes128Gcm
	}
	if !IsNil(o.EncAlgoAes256Cbc) {
		toSerialize["enc_algo_aes_256_cbc"] = o.EncAlgoAes256Cbc
	}
	if !IsNil(o.EncAlgoAes256Gcm) {
		toSerialize["enc_algo_aes_256_gcm"] = o.EncAlgoAes256Gcm
	}
	if !IsNil(o.EncAlgoChacha20Poly1305) {
		toSerialize["enc_algo_chacha20_poly1305"] = o.EncAlgoChacha20Poly1305
	}
	if !IsNil(o.EncAlgoRc4) {
		toSerialize["enc_algo_rc4"] = o.EncAlgoRc4
	}
	if !IsNil(o.KeyxchgAlgoDhe) {
		toSerialize["keyxchg_algo_dhe"] = o.KeyxchgAlgoDhe
	}
	if !IsNil(o.KeyxchgAlgoEcdhe) {
		toSerialize["keyxchg_algo_ecdhe"] = o.KeyxchgAlgoEcdhe
	}
	if !IsNil(o.KeyxchgAlgoRsa) {
		toSerialize["keyxchg_algo_rsa"] = o.KeyxchgAlgoRsa
	}
	if !IsNil(o.MaxVersion) {
		toSerialize["max_version"] = o.MaxVersion
	}
	if !IsNil(o.MinVersion) {
		toSerialize["min_version"] = o.MinVersion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DecryptionProfilesSslProtocolSettings) UnmarshalJSON(data []byte) (err error) {
	varDecryptionProfilesSslProtocolSettings := _DecryptionProfilesSslProtocolSettings{}

	err = json.Unmarshal(data, &varDecryptionProfilesSslProtocolSettings)

	if err != nil {
		return err
	}

	*o = DecryptionProfilesSslProtocolSettings(varDecryptionProfilesSslProtocolSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth_algo_md5")
		delete(additionalProperties, "auth_algo_sha1")
		delete(additionalProperties, "auth_algo_sha256")
		delete(additionalProperties, "auth_algo_sha384")
		delete(additionalProperties, "enc_algo_3des")
		delete(additionalProperties, "enc_algo_aes_128_cbc")
		delete(additionalProperties, "enc_algo_aes_128_gcm")
		delete(additionalProperties, "enc_algo_aes_256_cbc")
		delete(additionalProperties, "enc_algo_aes_256_gcm")
		delete(additionalProperties, "enc_algo_chacha20_poly1305")
		delete(additionalProperties, "enc_algo_rc4")
		delete(additionalProperties, "keyxchg_algo_dhe")
		delete(additionalProperties, "keyxchg_algo_ecdhe")
		delete(additionalProperties, "keyxchg_algo_rsa")
		delete(additionalProperties, "max_version")
		delete(additionalProperties, "min_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDecryptionProfilesSslProtocolSettings struct {
	value *DecryptionProfilesSslProtocolSettings
	isSet bool
}

func (v NullableDecryptionProfilesSslProtocolSettings) Get() *DecryptionProfilesSslProtocolSettings {
	return v.value
}

func (v *NullableDecryptionProfilesSslProtocolSettings) Set(val *DecryptionProfilesSslProtocolSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableDecryptionProfilesSslProtocolSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableDecryptionProfilesSslProtocolSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecryptionProfilesSslProtocolSettings(val *DecryptionProfilesSslProtocolSettings) *NullableDecryptionProfilesSslProtocolSettings {
	return &NullableDecryptionProfilesSslProtocolSettings{value: val, isSet: true}
}

func (v NullableDecryptionProfilesSslProtocolSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecryptionProfilesSslProtocolSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
