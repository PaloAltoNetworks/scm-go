/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the WildfireAntiVirusProfilesThreatExceptionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WildfireAntiVirusProfilesThreatExceptionInner{}

// WildfireAntiVirusProfilesThreatExceptionInner struct for WildfireAntiVirusProfilesThreatExceptionInner
type WildfireAntiVirusProfilesThreatExceptionInner struct {
	Name                 *string `json:"name,omitempty"`
	Notes                *string `json:"notes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WildfireAntiVirusProfilesThreatExceptionInner WildfireAntiVirusProfilesThreatExceptionInner

// NewWildfireAntiVirusProfilesThreatExceptionInner instantiates a new WildfireAntiVirusProfilesThreatExceptionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWildfireAntiVirusProfilesThreatExceptionInner() *WildfireAntiVirusProfilesThreatExceptionInner {
	this := WildfireAntiVirusProfilesThreatExceptionInner{}
	return &this
}

// NewWildfireAntiVirusProfilesThreatExceptionInnerWithDefaults instantiates a new WildfireAntiVirusProfilesThreatExceptionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWildfireAntiVirusProfilesThreatExceptionInnerWithDefaults() *WildfireAntiVirusProfilesThreatExceptionInner {
	this := WildfireAntiVirusProfilesThreatExceptionInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) SetName(v string) {
	o.Name = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *WildfireAntiVirusProfilesThreatExceptionInner) SetNotes(v string) {
	o.Notes = &v
}

func (o WildfireAntiVirusProfilesThreatExceptionInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WildfireAntiVirusProfilesThreatExceptionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WildfireAntiVirusProfilesThreatExceptionInner) UnmarshalJSON(data []byte) (err error) {
	varWildfireAntiVirusProfilesThreatExceptionInner := _WildfireAntiVirusProfilesThreatExceptionInner{}

	err = json.Unmarshal(data, &varWildfireAntiVirusProfilesThreatExceptionInner)

	if err != nil {
		return err
	}

	*o = WildfireAntiVirusProfilesThreatExceptionInner(varWildfireAntiVirusProfilesThreatExceptionInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "notes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWildfireAntiVirusProfilesThreatExceptionInner struct {
	value *WildfireAntiVirusProfilesThreatExceptionInner
	isSet bool
}

func (v NullableWildfireAntiVirusProfilesThreatExceptionInner) Get() *WildfireAntiVirusProfilesThreatExceptionInner {
	return v.value
}

func (v *NullableWildfireAntiVirusProfilesThreatExceptionInner) Set(val *WildfireAntiVirusProfilesThreatExceptionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWildfireAntiVirusProfilesThreatExceptionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWildfireAntiVirusProfilesThreatExceptionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWildfireAntiVirusProfilesThreatExceptionInner(val *WildfireAntiVirusProfilesThreatExceptionInner) *NullableWildfireAntiVirusProfilesThreatExceptionInner {
	return &NullableWildfireAntiVirusProfilesThreatExceptionInner{value: val, isSet: true}
}

func (v NullableWildfireAntiVirusProfilesThreatExceptionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWildfireAntiVirusProfilesThreatExceptionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
