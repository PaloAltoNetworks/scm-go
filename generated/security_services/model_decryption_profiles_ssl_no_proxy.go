/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the DecryptionProfilesSslNoProxy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DecryptionProfilesSslNoProxy{}

// DecryptionProfilesSslNoProxy struct for DecryptionProfilesSslNoProxy
type DecryptionProfilesSslNoProxy struct {
	BlockExpiredCertificate *bool `json:"block_expired_certificate,omitempty"`
	BlockUntrustedIssuer    *bool `json:"block_untrusted_issuer,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _DecryptionProfilesSslNoProxy DecryptionProfilesSslNoProxy

// NewDecryptionProfilesSslNoProxy instantiates a new DecryptionProfilesSslNoProxy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecryptionProfilesSslNoProxy() *DecryptionProfilesSslNoProxy {
	this := DecryptionProfilesSslNoProxy{}
	var blockExpiredCertificate bool = false
	this.BlockExpiredCertificate = &blockExpiredCertificate
	var blockUntrustedIssuer bool = false
	this.BlockUntrustedIssuer = &blockUntrustedIssuer
	return &this
}

// NewDecryptionProfilesSslNoProxyWithDefaults instantiates a new DecryptionProfilesSslNoProxy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecryptionProfilesSslNoProxyWithDefaults() *DecryptionProfilesSslNoProxy {
	this := DecryptionProfilesSslNoProxy{}
	var blockExpiredCertificate bool = false
	this.BlockExpiredCertificate = &blockExpiredCertificate
	var blockUntrustedIssuer bool = false
	this.BlockUntrustedIssuer = &blockUntrustedIssuer
	return &this
}

// GetBlockExpiredCertificate returns the BlockExpiredCertificate field value if set, zero value otherwise.
func (o *DecryptionProfilesSslNoProxy) GetBlockExpiredCertificate() bool {
	if o == nil || IsNil(o.BlockExpiredCertificate) {
		var ret bool
		return ret
	}
	return *o.BlockExpiredCertificate
}

// GetBlockExpiredCertificateOk returns a tuple with the BlockExpiredCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslNoProxy) GetBlockExpiredCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockExpiredCertificate) {
		return nil, false
	}
	return o.BlockExpiredCertificate, true
}

// HasBlockExpiredCertificate returns a boolean if a field has been set.
func (o *DecryptionProfilesSslNoProxy) HasBlockExpiredCertificate() bool {
	if o != nil && !IsNil(o.BlockExpiredCertificate) {
		return true
	}

	return false
}

// SetBlockExpiredCertificate gets a reference to the given bool and assigns it to the BlockExpiredCertificate field.
func (o *DecryptionProfilesSslNoProxy) SetBlockExpiredCertificate(v bool) {
	o.BlockExpiredCertificate = &v
}

// GetBlockUntrustedIssuer returns the BlockUntrustedIssuer field value if set, zero value otherwise.
func (o *DecryptionProfilesSslNoProxy) GetBlockUntrustedIssuer() bool {
	if o == nil || IsNil(o.BlockUntrustedIssuer) {
		var ret bool
		return ret
	}
	return *o.BlockUntrustedIssuer
}

// GetBlockUntrustedIssuerOk returns a tuple with the BlockUntrustedIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionProfilesSslNoProxy) GetBlockUntrustedIssuerOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockUntrustedIssuer) {
		return nil, false
	}
	return o.BlockUntrustedIssuer, true
}

// HasBlockUntrustedIssuer returns a boolean if a field has been set.
func (o *DecryptionProfilesSslNoProxy) HasBlockUntrustedIssuer() bool {
	if o != nil && !IsNil(o.BlockUntrustedIssuer) {
		return true
	}

	return false
}

// SetBlockUntrustedIssuer gets a reference to the given bool and assigns it to the BlockUntrustedIssuer field.
func (o *DecryptionProfilesSslNoProxy) SetBlockUntrustedIssuer(v bool) {
	o.BlockUntrustedIssuer = &v
}

func (o DecryptionProfilesSslNoProxy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DecryptionProfilesSslNoProxy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockExpiredCertificate) {
		toSerialize["block_expired_certificate"] = o.BlockExpiredCertificate
	}
	if !IsNil(o.BlockUntrustedIssuer) {
		toSerialize["block_untrusted_issuer"] = o.BlockUntrustedIssuer
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DecryptionProfilesSslNoProxy) UnmarshalJSON(data []byte) (err error) {
	varDecryptionProfilesSslNoProxy := _DecryptionProfilesSslNoProxy{}

	err = json.Unmarshal(data, &varDecryptionProfilesSslNoProxy)

	if err != nil {
		return err
	}

	*o = DecryptionProfilesSslNoProxy(varDecryptionProfilesSslNoProxy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "block_expired_certificate")
		delete(additionalProperties, "block_untrusted_issuer")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDecryptionProfilesSslNoProxy struct {
	value *DecryptionProfilesSslNoProxy
	isSet bool
}

func (v NullableDecryptionProfilesSslNoProxy) Get() *DecryptionProfilesSslNoProxy {
	return v.value
}

func (v *NullableDecryptionProfilesSslNoProxy) Set(val *DecryptionProfilesSslNoProxy) {
	v.value = val
	v.isSet = true
}

func (v NullableDecryptionProfilesSslNoProxy) IsSet() bool {
	return v.isSet
}

func (v *NullableDecryptionProfilesSslNoProxy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecryptionProfilesSslNoProxy(val *DecryptionProfilesSslNoProxy) *NullableDecryptionProfilesSslNoProxy {
	return &NullableDecryptionProfilesSslNoProxy{value: val, isSet: true}
}

func (v NullableDecryptionProfilesSslNoProxy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecryptionProfilesSslNoProxy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
