/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the DecryptionRulesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DecryptionRulesType{}

// DecryptionRulesType The type of decryption
type DecryptionRulesType struct {
	SslForwardProxy map[string]interface{} `json:"ssl_forward_proxy,omitempty"`
	// add the certificate name for SSL inbound inspection
	SslInboundInspection *string `json:"ssl_inbound_inspection,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DecryptionRulesType DecryptionRulesType

// NewDecryptionRulesType instantiates a new DecryptionRulesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecryptionRulesType() *DecryptionRulesType {
	this := DecryptionRulesType{}
	return &this
}

// NewDecryptionRulesTypeWithDefaults instantiates a new DecryptionRulesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecryptionRulesTypeWithDefaults() *DecryptionRulesType {
	this := DecryptionRulesType{}
	return &this
}

// GetSslForwardProxy returns the SslForwardProxy field value if set, zero value otherwise.
func (o *DecryptionRulesType) GetSslForwardProxy() map[string]interface{} {
	if o == nil || IsNil(o.SslForwardProxy) {
		var ret map[string]interface{}
		return ret
	}
	return o.SslForwardProxy
}

// GetSslForwardProxyOk returns a tuple with the SslForwardProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionRulesType) GetSslForwardProxyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SslForwardProxy) {
		return map[string]interface{}{}, false
	}
	return o.SslForwardProxy, true
}

// HasSslForwardProxy returns a boolean if a field has been set.
func (o *DecryptionRulesType) HasSslForwardProxy() bool {
	if o != nil && !IsNil(o.SslForwardProxy) {
		return true
	}

	return false
}

// SetSslForwardProxy gets a reference to the given map[string]interface{} and assigns it to the SslForwardProxy field.
func (o *DecryptionRulesType) SetSslForwardProxy(v map[string]interface{}) {
	o.SslForwardProxy = v
}

// GetSslInboundInspection returns the SslInboundInspection field value if set, zero value otherwise.
func (o *DecryptionRulesType) GetSslInboundInspection() string {
	if o == nil || IsNil(o.SslInboundInspection) {
		var ret string
		return ret
	}
	return *o.SslInboundInspection
}

// GetSslInboundInspectionOk returns a tuple with the SslInboundInspection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecryptionRulesType) GetSslInboundInspectionOk() (*string, bool) {
	if o == nil || IsNil(o.SslInboundInspection) {
		return nil, false
	}
	return o.SslInboundInspection, true
}

// HasSslInboundInspection returns a boolean if a field has been set.
func (o *DecryptionRulesType) HasSslInboundInspection() bool {
	if o != nil && !IsNil(o.SslInboundInspection) {
		return true
	}

	return false
}

// SetSslInboundInspection gets a reference to the given string and assigns it to the SslInboundInspection field.
func (o *DecryptionRulesType) SetSslInboundInspection(v string) {
	o.SslInboundInspection = &v
}

func (o DecryptionRulesType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DecryptionRulesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SslForwardProxy) {
		toSerialize["ssl_forward_proxy"] = o.SslForwardProxy
	}
	if !IsNil(o.SslInboundInspection) {
		toSerialize["ssl_inbound_inspection"] = o.SslInboundInspection
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DecryptionRulesType) UnmarshalJSON(data []byte) (err error) {
	varDecryptionRulesType := _DecryptionRulesType{}

	err = json.Unmarshal(data, &varDecryptionRulesType)

	if err != nil {
		return err
	}

	*o = DecryptionRulesType(varDecryptionRulesType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ssl_forward_proxy")
		delete(additionalProperties, "ssl_inbound_inspection")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDecryptionRulesType struct {
	value *DecryptionRulesType
	isSet bool
}

func (v NullableDecryptionRulesType) Get() *DecryptionRulesType {
	return v.value
}

func (v *NullableDecryptionRulesType) Set(val *DecryptionRulesType) {
	v.value = val
	v.isSet = true
}

func (v NullableDecryptionRulesType) IsSet() bool {
	return v.isSet
}

func (v *NullableDecryptionRulesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecryptionRulesType(val *DecryptionRulesType) *NullableDecryptionRulesType {
	return &NullableDecryptionRulesType{value: val, isSet: true}
}

func (v NullableDecryptionRulesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecryptionRulesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
