/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
	"fmt"
)

// checks if the AntiSpywareSignaturesSignatureStandardInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiSpywareSignaturesSignatureStandardInner{}

// AntiSpywareSignaturesSignatureStandardInner struct for AntiSpywareSignaturesSignatureStandardInner
type AntiSpywareSignaturesSignatureStandardInner struct {
	AndCondition         []AntiSpywareSignaturesSignatureStandardInnerAndConditionInner `json:"and_condition,omitempty"`
	Comment              *string                                                        `json:"comment,omitempty"`
	Name                 string                                                         `json:"name"`
	OrderFree            *bool                                                          `json:"order_free,omitempty"`
	Scope                *string                                                        `json:"scope,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AntiSpywareSignaturesSignatureStandardInner AntiSpywareSignaturesSignatureStandardInner

// NewAntiSpywareSignaturesSignatureStandardInner instantiates a new AntiSpywareSignaturesSignatureStandardInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiSpywareSignaturesSignatureStandardInner(name string) *AntiSpywareSignaturesSignatureStandardInner {
	this := AntiSpywareSignaturesSignatureStandardInner{}
	this.Name = name
	var orderFree bool = false
	this.OrderFree = &orderFree
	return &this
}

// NewAntiSpywareSignaturesSignatureStandardInnerWithDefaults instantiates a new AntiSpywareSignaturesSignatureStandardInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiSpywareSignaturesSignatureStandardInnerWithDefaults() *AntiSpywareSignaturesSignatureStandardInner {
	this := AntiSpywareSignaturesSignatureStandardInner{}
	var orderFree bool = false
	this.OrderFree = &orderFree
	return &this
}

// GetAndCondition returns the AndCondition field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetAndCondition() []AntiSpywareSignaturesSignatureStandardInnerAndConditionInner {
	if o == nil || IsNil(o.AndCondition) {
		var ret []AntiSpywareSignaturesSignatureStandardInnerAndConditionInner
		return ret
	}
	return o.AndCondition
}

// GetAndConditionOk returns a tuple with the AndCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetAndConditionOk() ([]AntiSpywareSignaturesSignatureStandardInnerAndConditionInner, bool) {
	if o == nil || IsNil(o.AndCondition) {
		return nil, false
	}
	return o.AndCondition, true
}

// HasAndCondition returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) HasAndCondition() bool {
	if o != nil && !IsNil(o.AndCondition) {
		return true
	}

	return false
}

// SetAndCondition gets a reference to the given []AntiSpywareSignaturesSignatureStandardInnerAndConditionInner and assigns it to the AndCondition field.
func (o *AntiSpywareSignaturesSignatureStandardInner) SetAndCondition(v []AntiSpywareSignaturesSignatureStandardInnerAndConditionInner) {
	o.AndCondition = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *AntiSpywareSignaturesSignatureStandardInner) SetComment(v string) {
	o.Comment = &v
}

// GetName returns the Name field value
func (o *AntiSpywareSignaturesSignatureStandardInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AntiSpywareSignaturesSignatureStandardInner) SetName(v string) {
	o.Name = v
}

// GetOrderFree returns the OrderFree field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetOrderFree() bool {
	if o == nil || IsNil(o.OrderFree) {
		var ret bool
		return ret
	}
	return *o.OrderFree
}

// GetOrderFreeOk returns a tuple with the OrderFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetOrderFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.OrderFree) {
		return nil, false
	}
	return o.OrderFree, true
}

// HasOrderFree returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) HasOrderFree() bool {
	if o != nil && !IsNil(o.OrderFree) {
		return true
	}

	return false
}

// SetOrderFree gets a reference to the given bool and assigns it to the OrderFree field.
func (o *AntiSpywareSignaturesSignatureStandardInner) SetOrderFree(v bool) {
	o.OrderFree = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignatureStandardInner) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *AntiSpywareSignaturesSignatureStandardInner) SetScope(v string) {
	o.Scope = &v
}

func (o AntiSpywareSignaturesSignatureStandardInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiSpywareSignaturesSignatureStandardInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AndCondition) {
		toSerialize["and_condition"] = o.AndCondition
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.OrderFree) {
		toSerialize["order_free"] = o.OrderFree
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AntiSpywareSignaturesSignatureStandardInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAntiSpywareSignaturesSignatureStandardInner := _AntiSpywareSignaturesSignatureStandardInner{}

	err = json.Unmarshal(data, &varAntiSpywareSignaturesSignatureStandardInner)

	if err != nil {
		return err
	}

	*o = AntiSpywareSignaturesSignatureStandardInner(varAntiSpywareSignaturesSignatureStandardInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "and_condition")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "name")
		delete(additionalProperties, "order_free")
		delete(additionalProperties, "scope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAntiSpywareSignaturesSignatureStandardInner struct {
	value *AntiSpywareSignaturesSignatureStandardInner
	isSet bool
}

func (v NullableAntiSpywareSignaturesSignatureStandardInner) Get() *AntiSpywareSignaturesSignatureStandardInner {
	return v.value
}

func (v *NullableAntiSpywareSignaturesSignatureStandardInner) Set(val *AntiSpywareSignaturesSignatureStandardInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiSpywareSignaturesSignatureStandardInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiSpywareSignaturesSignatureStandardInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiSpywareSignaturesSignatureStandardInner(val *AntiSpywareSignaturesSignatureStandardInner) *NullableAntiSpywareSignaturesSignatureStandardInner {
	return &NullableAntiSpywareSignaturesSignatureStandardInner{value: val, isSet: true}
}

func (v NullableAntiSpywareSignaturesSignatureStandardInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiSpywareSignaturesSignatureStandardInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
