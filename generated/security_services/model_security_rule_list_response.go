/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the SecurityRuleListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityRuleListResponse{}

// SecurityRuleListResponse struct for SecurityRuleListResponse
type SecurityRuleListResponse struct {
	Data                 []SecurityRules `json:"data,omitempty"`
	Limit                *int32          `json:"limit,omitempty"`
	Offset               *int32          `json:"offset,omitempty"`
	Total                *int32          `json:"total,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SecurityRuleListResponse SecurityRuleListResponse

// NewSecurityRuleListResponse instantiates a new SecurityRuleListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityRuleListResponse() *SecurityRuleListResponse {
	this := SecurityRuleListResponse{}
	var limit int32 = 200
	this.Limit = &limit
	var offset int32 = 0
	this.Offset = &offset
	return &this
}

// NewSecurityRuleListResponseWithDefaults instantiates a new SecurityRuleListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityRuleListResponseWithDefaults() *SecurityRuleListResponse {
	this := SecurityRuleListResponse{}
	var limit int32 = 200
	this.Limit = &limit
	var offset int32 = 0
	this.Offset = &offset
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SecurityRuleListResponse) GetData() []SecurityRules {
	if o == nil || IsNil(o.Data) {
		var ret []SecurityRules
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRuleListResponse) GetDataOk() ([]SecurityRules, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SecurityRuleListResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []SecurityRules and assigns it to the Data field.
func (o *SecurityRuleListResponse) SetData(v []SecurityRules) {
	o.Data = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *SecurityRuleListResponse) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRuleListResponse) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *SecurityRuleListResponse) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *SecurityRuleListResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *SecurityRuleListResponse) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRuleListResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *SecurityRuleListResponse) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *SecurityRuleListResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *SecurityRuleListResponse) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityRuleListResponse) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *SecurityRuleListResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *SecurityRuleListResponse) SetTotal(v int32) {
	o.Total = &v
}

func (o SecurityRuleListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityRuleListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecurityRuleListResponse) UnmarshalJSON(data []byte) (err error) {
	varSecurityRuleListResponse := _SecurityRuleListResponse{}

	err = json.Unmarshal(data, &varSecurityRuleListResponse)

	if err != nil {
		return err
	}

	*o = SecurityRuleListResponse(varSecurityRuleListResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "offset")
		delete(additionalProperties, "total")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecurityRuleListResponse struct {
	value *SecurityRuleListResponse
	isSet bool
}

func (v NullableSecurityRuleListResponse) Get() *SecurityRuleListResponse {
	return v.value
}

func (v *NullableSecurityRuleListResponse) Set(val *SecurityRuleListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityRuleListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityRuleListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityRuleListResponse(val *SecurityRuleListResponse) *NullableSecurityRuleListResponse {
	return &NullableSecurityRuleListResponse{value: val, isSet: true}
}

func (v NullableSecurityRuleListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityRuleListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
