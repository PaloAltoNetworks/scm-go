/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the AntiSpywareSignaturesSignature type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiSpywareSignaturesSignature{}

// AntiSpywareSignaturesSignature struct for AntiSpywareSignaturesSignature
type AntiSpywareSignaturesSignature struct {
	Combination          *AntiSpywareSignaturesSignatureCombination    `json:"combination,omitempty"`
	Standard             []AntiSpywareSignaturesSignatureStandardInner `json:"standard,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AntiSpywareSignaturesSignature AntiSpywareSignaturesSignature

// NewAntiSpywareSignaturesSignature instantiates a new AntiSpywareSignaturesSignature object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiSpywareSignaturesSignature() *AntiSpywareSignaturesSignature {
	this := AntiSpywareSignaturesSignature{}
	return &this
}

// NewAntiSpywareSignaturesSignatureWithDefaults instantiates a new AntiSpywareSignaturesSignature object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiSpywareSignaturesSignatureWithDefaults() *AntiSpywareSignaturesSignature {
	this := AntiSpywareSignaturesSignature{}
	return &this
}

// GetCombination returns the Combination field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignature) GetCombination() AntiSpywareSignaturesSignatureCombination {
	if o == nil || IsNil(o.Combination) {
		var ret AntiSpywareSignaturesSignatureCombination
		return ret
	}
	return *o.Combination
}

// GetCombinationOk returns a tuple with the Combination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignature) GetCombinationOk() (*AntiSpywareSignaturesSignatureCombination, bool) {
	if o == nil || IsNil(o.Combination) {
		return nil, false
	}
	return o.Combination, true
}

// HasCombination returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignature) HasCombination() bool {
	if o != nil && !IsNil(o.Combination) {
		return true
	}

	return false
}

// SetCombination gets a reference to the given AntiSpywareSignaturesSignatureCombination and assigns it to the Combination field.
func (o *AntiSpywareSignaturesSignature) SetCombination(v AntiSpywareSignaturesSignatureCombination) {
	o.Combination = &v
}

// GetStandard returns the Standard field value if set, zero value otherwise.
func (o *AntiSpywareSignaturesSignature) GetStandard() []AntiSpywareSignaturesSignatureStandardInner {
	if o == nil || IsNil(o.Standard) {
		var ret []AntiSpywareSignaturesSignatureStandardInner
		return ret
	}
	return o.Standard
}

// GetStandardOk returns a tuple with the Standard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareSignaturesSignature) GetStandardOk() ([]AntiSpywareSignaturesSignatureStandardInner, bool) {
	if o == nil || IsNil(o.Standard) {
		return nil, false
	}
	return o.Standard, true
}

// HasStandard returns a boolean if a field has been set.
func (o *AntiSpywareSignaturesSignature) HasStandard() bool {
	if o != nil && !IsNil(o.Standard) {
		return true
	}

	return false
}

// SetStandard gets a reference to the given []AntiSpywareSignaturesSignatureStandardInner and assigns it to the Standard field.
func (o *AntiSpywareSignaturesSignature) SetStandard(v []AntiSpywareSignaturesSignatureStandardInner) {
	o.Standard = v
}

func (o AntiSpywareSignaturesSignature) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiSpywareSignaturesSignature) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Combination) {
		toSerialize["combination"] = o.Combination
	}
	if !IsNil(o.Standard) {
		toSerialize["standard"] = o.Standard
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AntiSpywareSignaturesSignature) UnmarshalJSON(data []byte) (err error) {
	varAntiSpywareSignaturesSignature := _AntiSpywareSignaturesSignature{}

	err = json.Unmarshal(data, &varAntiSpywareSignaturesSignature)

	if err != nil {
		return err
	}

	*o = AntiSpywareSignaturesSignature(varAntiSpywareSignaturesSignature)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "combination")
		delete(additionalProperties, "standard")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAntiSpywareSignaturesSignature struct {
	value *AntiSpywareSignaturesSignature
	isSet bool
}

func (v NullableAntiSpywareSignaturesSignature) Get() *AntiSpywareSignaturesSignature {
	return v.value
}

func (v *NullableAntiSpywareSignaturesSignature) Set(val *AntiSpywareSignaturesSignature) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiSpywareSignaturesSignature) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiSpywareSignaturesSignature) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiSpywareSignaturesSignature(val *AntiSpywareSignaturesSignature) *NullableAntiSpywareSignaturesSignature {
	return &NullableAntiSpywareSignaturesSignature{value: val, isSet: true}
}

func (v NullableAntiSpywareSignaturesSignature) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiSpywareSignaturesSignature) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
