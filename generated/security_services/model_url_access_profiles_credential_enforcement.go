/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the UrlAccessProfilesCredentialEnforcement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrlAccessProfilesCredentialEnforcement{}

// UrlAccessProfilesCredentialEnforcement struct for UrlAccessProfilesCredentialEnforcement
type UrlAccessProfilesCredentialEnforcement struct {
	Alert                []string                                    `json:"alert,omitempty"`
	Allow                []string                                    `json:"allow,omitempty"`
	Block                []string                                    `json:"block,omitempty"`
	Continue             []string                                    `json:"continue,omitempty"`
	LogSeverity          *string                                     `json:"log_severity,omitempty"`
	Mode                 *UrlAccessProfilesCredentialEnforcementMode `json:"mode,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UrlAccessProfilesCredentialEnforcement UrlAccessProfilesCredentialEnforcement

// NewUrlAccessProfilesCredentialEnforcement instantiates a new UrlAccessProfilesCredentialEnforcement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlAccessProfilesCredentialEnforcement() *UrlAccessProfilesCredentialEnforcement {
	this := UrlAccessProfilesCredentialEnforcement{}
	var logSeverity string = "medium"
	this.LogSeverity = &logSeverity
	return &this
}

// NewUrlAccessProfilesCredentialEnforcementWithDefaults instantiates a new UrlAccessProfilesCredentialEnforcement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlAccessProfilesCredentialEnforcementWithDefaults() *UrlAccessProfilesCredentialEnforcement {
	this := UrlAccessProfilesCredentialEnforcement{}
	var logSeverity string = "medium"
	this.LogSeverity = &logSeverity
	return &this
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *UrlAccessProfilesCredentialEnforcement) GetAlert() []string {
	if o == nil || IsNil(o.Alert) {
		var ret []string
		return ret
	}
	return o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlAccessProfilesCredentialEnforcement) GetAlertOk() ([]string, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// HasAlert returns a boolean if a field has been set.
func (o *UrlAccessProfilesCredentialEnforcement) HasAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given []string and assigns it to the Alert field.
func (o *UrlAccessProfilesCredentialEnforcement) SetAlert(v []string) {
	o.Alert = v
}

// GetAllow returns the Allow field value if set, zero value otherwise.
func (o *UrlAccessProfilesCredentialEnforcement) GetAllow() []string {
	if o == nil || IsNil(o.Allow) {
		var ret []string
		return ret
	}
	return o.Allow
}

// GetAllowOk returns a tuple with the Allow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlAccessProfilesCredentialEnforcement) GetAllowOk() ([]string, bool) {
	if o == nil || IsNil(o.Allow) {
		return nil, false
	}
	return o.Allow, true
}

// HasAllow returns a boolean if a field has been set.
func (o *UrlAccessProfilesCredentialEnforcement) HasAllow() bool {
	if o != nil && !IsNil(o.Allow) {
		return true
	}

	return false
}

// SetAllow gets a reference to the given []string and assigns it to the Allow field.
func (o *UrlAccessProfilesCredentialEnforcement) SetAllow(v []string) {
	o.Allow = v
}

// GetBlock returns the Block field value if set, zero value otherwise.
func (o *UrlAccessProfilesCredentialEnforcement) GetBlock() []string {
	if o == nil || IsNil(o.Block) {
		var ret []string
		return ret
	}
	return o.Block
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlAccessProfilesCredentialEnforcement) GetBlockOk() ([]string, bool) {
	if o == nil || IsNil(o.Block) {
		return nil, false
	}
	return o.Block, true
}

// HasBlock returns a boolean if a field has been set.
func (o *UrlAccessProfilesCredentialEnforcement) HasBlock() bool {
	if o != nil && !IsNil(o.Block) {
		return true
	}

	return false
}

// SetBlock gets a reference to the given []string and assigns it to the Block field.
func (o *UrlAccessProfilesCredentialEnforcement) SetBlock(v []string) {
	o.Block = v
}

// GetContinue returns the Continue field value if set, zero value otherwise.
func (o *UrlAccessProfilesCredentialEnforcement) GetContinue() []string {
	if o == nil || IsNil(o.Continue) {
		var ret []string
		return ret
	}
	return o.Continue
}

// GetContinueOk returns a tuple with the Continue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlAccessProfilesCredentialEnforcement) GetContinueOk() ([]string, bool) {
	if o == nil || IsNil(o.Continue) {
		return nil, false
	}
	return o.Continue, true
}

// HasContinue returns a boolean if a field has been set.
func (o *UrlAccessProfilesCredentialEnforcement) HasContinue() bool {
	if o != nil && !IsNil(o.Continue) {
		return true
	}

	return false
}

// SetContinue gets a reference to the given []string and assigns it to the Continue field.
func (o *UrlAccessProfilesCredentialEnforcement) SetContinue(v []string) {
	o.Continue = v
}

// GetLogSeverity returns the LogSeverity field value if set, zero value otherwise.
func (o *UrlAccessProfilesCredentialEnforcement) GetLogSeverity() string {
	if o == nil || IsNil(o.LogSeverity) {
		var ret string
		return ret
	}
	return *o.LogSeverity
}

// GetLogSeverityOk returns a tuple with the LogSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlAccessProfilesCredentialEnforcement) GetLogSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.LogSeverity) {
		return nil, false
	}
	return o.LogSeverity, true
}

// HasLogSeverity returns a boolean if a field has been set.
func (o *UrlAccessProfilesCredentialEnforcement) HasLogSeverity() bool {
	if o != nil && !IsNil(o.LogSeverity) {
		return true
	}

	return false
}

// SetLogSeverity gets a reference to the given string and assigns it to the LogSeverity field.
func (o *UrlAccessProfilesCredentialEnforcement) SetLogSeverity(v string) {
	o.LogSeverity = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *UrlAccessProfilesCredentialEnforcement) GetMode() UrlAccessProfilesCredentialEnforcementMode {
	if o == nil || IsNil(o.Mode) {
		var ret UrlAccessProfilesCredentialEnforcementMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlAccessProfilesCredentialEnforcement) GetModeOk() (*UrlAccessProfilesCredentialEnforcementMode, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *UrlAccessProfilesCredentialEnforcement) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given UrlAccessProfilesCredentialEnforcementMode and assigns it to the Mode field.
func (o *UrlAccessProfilesCredentialEnforcement) SetMode(v UrlAccessProfilesCredentialEnforcementMode) {
	o.Mode = &v
}

func (o UrlAccessProfilesCredentialEnforcement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrlAccessProfilesCredentialEnforcement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	if !IsNil(o.Allow) {
		toSerialize["allow"] = o.Allow
	}
	if !IsNil(o.Block) {
		toSerialize["block"] = o.Block
	}
	if !IsNil(o.Continue) {
		toSerialize["continue"] = o.Continue
	}
	if !IsNil(o.LogSeverity) {
		toSerialize["log_severity"] = o.LogSeverity
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UrlAccessProfilesCredentialEnforcement) UnmarshalJSON(data []byte) (err error) {
	varUrlAccessProfilesCredentialEnforcement := _UrlAccessProfilesCredentialEnforcement{}

	err = json.Unmarshal(data, &varUrlAccessProfilesCredentialEnforcement)

	if err != nil {
		return err
	}

	*o = UrlAccessProfilesCredentialEnforcement(varUrlAccessProfilesCredentialEnforcement)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alert")
		delete(additionalProperties, "allow")
		delete(additionalProperties, "block")
		delete(additionalProperties, "continue")
		delete(additionalProperties, "log_severity")
		delete(additionalProperties, "mode")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUrlAccessProfilesCredentialEnforcement struct {
	value *UrlAccessProfilesCredentialEnforcement
	isSet bool
}

func (v NullableUrlAccessProfilesCredentialEnforcement) Get() *UrlAccessProfilesCredentialEnforcement {
	return v.value
}

func (v *NullableUrlAccessProfilesCredentialEnforcement) Set(val *UrlAccessProfilesCredentialEnforcement) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlAccessProfilesCredentialEnforcement) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlAccessProfilesCredentialEnforcement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlAccessProfilesCredentialEnforcement(val *UrlAccessProfilesCredentialEnforcement) *NullableUrlAccessProfilesCredentialEnforcement {
	return &NullableUrlAccessProfilesCredentialEnforcement{value: val, isSet: true}
}

func (v NullableUrlAccessProfilesCredentialEnforcement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlAccessProfilesCredentialEnforcement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
