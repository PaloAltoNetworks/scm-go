/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess{}

// InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess struct for InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess
type InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess struct {
	Enable               *string  `json:"enable,omitempty"`
	TenantRestrictions   []string `json:"tenant_restrictions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess

// NewInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess instantiates a new InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess() *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess {
	this := InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess{}
	return &this
}

// NewInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccessWithDefaults instantiates a new InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccessWithDefaults() *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess {
	this := InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) GetEnable() string {
	if o == nil || IsNil(o.Enable) {
		var ret string
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) GetEnableOk() (*string, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given string and assigns it to the Enable field.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) SetEnable(v string) {
	o.Enable = &v
}

// GetTenantRestrictions returns the TenantRestrictions field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) GetTenantRestrictions() []string {
	if o == nil || IsNil(o.TenantRestrictions) {
		var ret []string
		return ret
	}
	return o.TenantRestrictions
}

// GetTenantRestrictionsOk returns a tuple with the TenantRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) GetTenantRestrictionsOk() ([]string, bool) {
	if o == nil || IsNil(o.TenantRestrictions) {
		return nil, false
	}
	return o.TenantRestrictions, true
}

// HasTenantRestrictions returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) HasTenantRestrictions() bool {
	if o != nil && !IsNil(o.TenantRestrictions) {
		return true
	}

	return false
}

// SetTenantRestrictions gets a reference to the given []string and assigns it to the TenantRestrictions field.
func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) SetTenantRestrictions(v []string) {
	o.TenantRestrictions = v
}

func (o InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.TenantRestrictions) {
		toSerialize["tenant_restrictions"] = o.TenantRestrictions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) UnmarshalJSON(data []byte) (err error) {
	varInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess := _InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess{}

	err = json.Unmarshal(data, &varInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess)

	if err != nil {
		return err
	}

	*o = InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess(varInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "tenant_restrictions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess struct {
	value *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess
	isSet bool
}

func (v NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) Get() *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess {
	return v.value
}

func (v *NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) Set(val *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess(val *InternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) *NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess {
	return &NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess{value: val, isSet: true}
}

func (v NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetRuleTypeAllowWebApplicationInnerSaasEnterpriseControlEnterpriseAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
