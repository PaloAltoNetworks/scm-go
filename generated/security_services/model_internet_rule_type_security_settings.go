/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the InternetRuleTypeSecuritySettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetRuleTypeSecuritySettings{}

// InternetRuleTypeSecuritySettings struct for InternetRuleTypeSecuritySettings
type InternetRuleTypeSecuritySettings struct {
	AntiSpyware              *string `json:"anti_spyware,omitempty"`
	VirusAndWildfireAnalysis *string `json:"virus_and_wildfire_analysis,omitempty"`
	Vulnerability            *string `json:"vulnerability,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _InternetRuleTypeSecuritySettings InternetRuleTypeSecuritySettings

// NewInternetRuleTypeSecuritySettings instantiates a new InternetRuleTypeSecuritySettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetRuleTypeSecuritySettings() *InternetRuleTypeSecuritySettings {
	this := InternetRuleTypeSecuritySettings{}
	var antiSpyware string = "yes"
	this.AntiSpyware = &antiSpyware
	var virusAndWildfireAnalysis string = "yes"
	this.VirusAndWildfireAnalysis = &virusAndWildfireAnalysis
	var vulnerability string = "yes"
	this.Vulnerability = &vulnerability
	return &this
}

// NewInternetRuleTypeSecuritySettingsWithDefaults instantiates a new InternetRuleTypeSecuritySettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetRuleTypeSecuritySettingsWithDefaults() *InternetRuleTypeSecuritySettings {
	this := InternetRuleTypeSecuritySettings{}
	var antiSpyware string = "yes"
	this.AntiSpyware = &antiSpyware
	var virusAndWildfireAnalysis string = "yes"
	this.VirusAndWildfireAnalysis = &virusAndWildfireAnalysis
	var vulnerability string = "yes"
	this.Vulnerability = &vulnerability
	return &this
}

// GetAntiSpyware returns the AntiSpyware field value if set, zero value otherwise.
func (o *InternetRuleTypeSecuritySettings) GetAntiSpyware() string {
	if o == nil || IsNil(o.AntiSpyware) {
		var ret string
		return ret
	}
	return *o.AntiSpyware
}

// GetAntiSpywareOk returns a tuple with the AntiSpyware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeSecuritySettings) GetAntiSpywareOk() (*string, bool) {
	if o == nil || IsNil(o.AntiSpyware) {
		return nil, false
	}
	return o.AntiSpyware, true
}

// HasAntiSpyware returns a boolean if a field has been set.
func (o *InternetRuleTypeSecuritySettings) HasAntiSpyware() bool {
	if o != nil && !IsNil(o.AntiSpyware) {
		return true
	}

	return false
}

// SetAntiSpyware gets a reference to the given string and assigns it to the AntiSpyware field.
func (o *InternetRuleTypeSecuritySettings) SetAntiSpyware(v string) {
	o.AntiSpyware = &v
}

// GetVirusAndWildfireAnalysis returns the VirusAndWildfireAnalysis field value if set, zero value otherwise.
func (o *InternetRuleTypeSecuritySettings) GetVirusAndWildfireAnalysis() string {
	if o == nil || IsNil(o.VirusAndWildfireAnalysis) {
		var ret string
		return ret
	}
	return *o.VirusAndWildfireAnalysis
}

// GetVirusAndWildfireAnalysisOk returns a tuple with the VirusAndWildfireAnalysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeSecuritySettings) GetVirusAndWildfireAnalysisOk() (*string, bool) {
	if o == nil || IsNil(o.VirusAndWildfireAnalysis) {
		return nil, false
	}
	return o.VirusAndWildfireAnalysis, true
}

// HasVirusAndWildfireAnalysis returns a boolean if a field has been set.
func (o *InternetRuleTypeSecuritySettings) HasVirusAndWildfireAnalysis() bool {
	if o != nil && !IsNil(o.VirusAndWildfireAnalysis) {
		return true
	}

	return false
}

// SetVirusAndWildfireAnalysis gets a reference to the given string and assigns it to the VirusAndWildfireAnalysis field.
func (o *InternetRuleTypeSecuritySettings) SetVirusAndWildfireAnalysis(v string) {
	o.VirusAndWildfireAnalysis = &v
}

// GetVulnerability returns the Vulnerability field value if set, zero value otherwise.
func (o *InternetRuleTypeSecuritySettings) GetVulnerability() string {
	if o == nil || IsNil(o.Vulnerability) {
		var ret string
		return ret
	}
	return *o.Vulnerability
}

// GetVulnerabilityOk returns a tuple with the Vulnerability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeSecuritySettings) GetVulnerabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Vulnerability) {
		return nil, false
	}
	return o.Vulnerability, true
}

// HasVulnerability returns a boolean if a field has been set.
func (o *InternetRuleTypeSecuritySettings) HasVulnerability() bool {
	if o != nil && !IsNil(o.Vulnerability) {
		return true
	}

	return false
}

// SetVulnerability gets a reference to the given string and assigns it to the Vulnerability field.
func (o *InternetRuleTypeSecuritySettings) SetVulnerability(v string) {
	o.Vulnerability = &v
}

func (o InternetRuleTypeSecuritySettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetRuleTypeSecuritySettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiSpyware) {
		toSerialize["anti_spyware"] = o.AntiSpyware
	}
	if !IsNil(o.VirusAndWildfireAnalysis) {
		toSerialize["virus_and_wildfire_analysis"] = o.VirusAndWildfireAnalysis
	}
	if !IsNil(o.Vulnerability) {
		toSerialize["vulnerability"] = o.Vulnerability
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternetRuleTypeSecuritySettings) UnmarshalJSON(data []byte) (err error) {
	varInternetRuleTypeSecuritySettings := _InternetRuleTypeSecuritySettings{}

	err = json.Unmarshal(data, &varInternetRuleTypeSecuritySettings)

	if err != nil {
		return err
	}

	*o = InternetRuleTypeSecuritySettings(varInternetRuleTypeSecuritySettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "anti_spyware")
		delete(additionalProperties, "virus_and_wildfire_analysis")
		delete(additionalProperties, "vulnerability")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternetRuleTypeSecuritySettings struct {
	value *InternetRuleTypeSecuritySettings
	isSet bool
}

func (v NullableInternetRuleTypeSecuritySettings) Get() *InternetRuleTypeSecuritySettings {
	return v.value
}

func (v *NullableInternetRuleTypeSecuritySettings) Set(val *InternetRuleTypeSecuritySettings) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetRuleTypeSecuritySettings) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetRuleTypeSecuritySettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetRuleTypeSecuritySettings(val *InternetRuleTypeSecuritySettings) *NullableInternetRuleTypeSecuritySettings {
	return &NullableInternetRuleTypeSecuritySettings{value: val, isSet: true}
}

func (v NullableInternetRuleTypeSecuritySettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetRuleTypeSecuritySettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
