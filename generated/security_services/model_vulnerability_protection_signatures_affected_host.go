/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the VulnerabilityProtectionSignaturesAffectedHost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityProtectionSignaturesAffectedHost{}

// VulnerabilityProtectionSignaturesAffectedHost struct for VulnerabilityProtectionSignaturesAffectedHost
type VulnerabilityProtectionSignaturesAffectedHost struct {
	Client               *bool `json:"client,omitempty"`
	Server               *bool `json:"server,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilityProtectionSignaturesAffectedHost VulnerabilityProtectionSignaturesAffectedHost

// NewVulnerabilityProtectionSignaturesAffectedHost instantiates a new VulnerabilityProtectionSignaturesAffectedHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityProtectionSignaturesAffectedHost() *VulnerabilityProtectionSignaturesAffectedHost {
	this := VulnerabilityProtectionSignaturesAffectedHost{}
	return &this
}

// NewVulnerabilityProtectionSignaturesAffectedHostWithDefaults instantiates a new VulnerabilityProtectionSignaturesAffectedHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityProtectionSignaturesAffectedHostWithDefaults() *VulnerabilityProtectionSignaturesAffectedHost {
	this := VulnerabilityProtectionSignaturesAffectedHost{}
	return &this
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *VulnerabilityProtectionSignaturesAffectedHost) GetClient() bool {
	if o == nil || IsNil(o.Client) {
		var ret bool
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityProtectionSignaturesAffectedHost) GetClientOk() (*bool, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *VulnerabilityProtectionSignaturesAffectedHost) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given bool and assigns it to the Client field.
func (o *VulnerabilityProtectionSignaturesAffectedHost) SetClient(v bool) {
	o.Client = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *VulnerabilityProtectionSignaturesAffectedHost) GetServer() bool {
	if o == nil || IsNil(o.Server) {
		var ret bool
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityProtectionSignaturesAffectedHost) GetServerOk() (*bool, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *VulnerabilityProtectionSignaturesAffectedHost) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given bool and assigns it to the Server field.
func (o *VulnerabilityProtectionSignaturesAffectedHost) SetServer(v bool) {
	o.Server = &v
}

func (o VulnerabilityProtectionSignaturesAffectedHost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityProtectionSignaturesAffectedHost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VulnerabilityProtectionSignaturesAffectedHost) UnmarshalJSON(data []byte) (err error) {
	varVulnerabilityProtectionSignaturesAffectedHost := _VulnerabilityProtectionSignaturesAffectedHost{}

	err = json.Unmarshal(data, &varVulnerabilityProtectionSignaturesAffectedHost)

	if err != nil {
		return err
	}

	*o = VulnerabilityProtectionSignaturesAffectedHost(varVulnerabilityProtectionSignaturesAffectedHost)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "client")
		delete(additionalProperties, "server")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilityProtectionSignaturesAffectedHost struct {
	value *VulnerabilityProtectionSignaturesAffectedHost
	isSet bool
}

func (v NullableVulnerabilityProtectionSignaturesAffectedHost) Get() *VulnerabilityProtectionSignaturesAffectedHost {
	return v.value
}

func (v *NullableVulnerabilityProtectionSignaturesAffectedHost) Set(val *VulnerabilityProtectionSignaturesAffectedHost) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityProtectionSignaturesAffectedHost) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityProtectionSignaturesAffectedHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityProtectionSignaturesAffectedHost(val *VulnerabilityProtectionSignaturesAffectedHost) *NullableVulnerabilityProtectionSignaturesAffectedHost {
	return &NullableVulnerabilityProtectionSignaturesAffectedHost{value: val, isSet: true}
}

func (v NullableVulnerabilityProtectionSignaturesAffectedHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityProtectionSignaturesAffectedHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
