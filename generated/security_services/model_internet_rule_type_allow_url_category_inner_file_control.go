/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the InternetRuleTypeAllowUrlCategoryInnerFileControl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetRuleTypeAllowUrlCategoryInnerFileControl{}

// InternetRuleTypeAllowUrlCategoryInnerFileControl struct for InternetRuleTypeAllowUrlCategoryInnerFileControl
type InternetRuleTypeAllowUrlCategoryInnerFileControl struct {
	Download             *string `json:"download,omitempty"`
	Upload               *string `json:"upload,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InternetRuleTypeAllowUrlCategoryInnerFileControl InternetRuleTypeAllowUrlCategoryInnerFileControl

// NewInternetRuleTypeAllowUrlCategoryInnerFileControl instantiates a new InternetRuleTypeAllowUrlCategoryInnerFileControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetRuleTypeAllowUrlCategoryInnerFileControl() *InternetRuleTypeAllowUrlCategoryInnerFileControl {
	this := InternetRuleTypeAllowUrlCategoryInnerFileControl{}
	return &this
}

// NewInternetRuleTypeAllowUrlCategoryInnerFileControlWithDefaults instantiates a new InternetRuleTypeAllowUrlCategoryInnerFileControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetRuleTypeAllowUrlCategoryInnerFileControlWithDefaults() *InternetRuleTypeAllowUrlCategoryInnerFileControl {
	this := InternetRuleTypeAllowUrlCategoryInnerFileControl{}
	return &this
}

// GetDownload returns the Download field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) GetDownload() string {
	if o == nil || IsNil(o.Download) {
		var ret string
		return ret
	}
	return *o.Download
}

// GetDownloadOk returns a tuple with the Download field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) GetDownloadOk() (*string, bool) {
	if o == nil || IsNil(o.Download) {
		return nil, false
	}
	return o.Download, true
}

// HasDownload returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) HasDownload() bool {
	if o != nil && !IsNil(o.Download) {
		return true
	}

	return false
}

// SetDownload gets a reference to the given string and assigns it to the Download field.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) SetDownload(v string) {
	o.Download = &v
}

// GetUpload returns the Upload field value if set, zero value otherwise.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) GetUpload() string {
	if o == nil || IsNil(o.Upload) {
		var ret string
		return ret
	}
	return *o.Upload
}

// GetUploadOk returns a tuple with the Upload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) GetUploadOk() (*string, bool) {
	if o == nil || IsNil(o.Upload) {
		return nil, false
	}
	return o.Upload, true
}

// HasUpload returns a boolean if a field has been set.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) HasUpload() bool {
	if o != nil && !IsNil(o.Upload) {
		return true
	}

	return false
}

// SetUpload gets a reference to the given string and assigns it to the Upload field.
func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) SetUpload(v string) {
	o.Upload = &v
}

func (o InternetRuleTypeAllowUrlCategoryInnerFileControl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetRuleTypeAllowUrlCategoryInnerFileControl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Download) {
		toSerialize["download"] = o.Download
	}
	if !IsNil(o.Upload) {
		toSerialize["upload"] = o.Upload
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternetRuleTypeAllowUrlCategoryInnerFileControl) UnmarshalJSON(data []byte) (err error) {
	varInternetRuleTypeAllowUrlCategoryInnerFileControl := _InternetRuleTypeAllowUrlCategoryInnerFileControl{}

	err = json.Unmarshal(data, &varInternetRuleTypeAllowUrlCategoryInnerFileControl)

	if err != nil {
		return err
	}

	*o = InternetRuleTypeAllowUrlCategoryInnerFileControl(varInternetRuleTypeAllowUrlCategoryInnerFileControl)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "download")
		delete(additionalProperties, "upload")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternetRuleTypeAllowUrlCategoryInnerFileControl struct {
	value *InternetRuleTypeAllowUrlCategoryInnerFileControl
	isSet bool
}

func (v NullableInternetRuleTypeAllowUrlCategoryInnerFileControl) Get() *InternetRuleTypeAllowUrlCategoryInnerFileControl {
	return v.value
}

func (v *NullableInternetRuleTypeAllowUrlCategoryInnerFileControl) Set(val *InternetRuleTypeAllowUrlCategoryInnerFileControl) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetRuleTypeAllowUrlCategoryInnerFileControl) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetRuleTypeAllowUrlCategoryInnerFileControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetRuleTypeAllowUrlCategoryInnerFileControl(val *InternetRuleTypeAllowUrlCategoryInnerFileControl) *NullableInternetRuleTypeAllowUrlCategoryInnerFileControl {
	return &NullableInternetRuleTypeAllowUrlCategoryInnerFileControl{value: val, isSet: true}
}

func (v NullableInternetRuleTypeAllowUrlCategoryInnerFileControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetRuleTypeAllowUrlCategoryInnerFileControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
