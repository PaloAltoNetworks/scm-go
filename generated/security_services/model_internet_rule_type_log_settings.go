/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the InternetRuleTypeLogSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetRuleTypeLogSettings{}

// InternetRuleTypeLogSettings struct for InternetRuleTypeLogSettings
type InternetRuleTypeLogSettings struct {
	LogSessions          *bool `json:"log_sessions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InternetRuleTypeLogSettings InternetRuleTypeLogSettings

// NewInternetRuleTypeLogSettings instantiates a new InternetRuleTypeLogSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetRuleTypeLogSettings() *InternetRuleTypeLogSettings {
	this := InternetRuleTypeLogSettings{}
	var logSessions bool = true
	this.LogSessions = &logSessions
	return &this
}

// NewInternetRuleTypeLogSettingsWithDefaults instantiates a new InternetRuleTypeLogSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetRuleTypeLogSettingsWithDefaults() *InternetRuleTypeLogSettings {
	this := InternetRuleTypeLogSettings{}
	var logSessions bool = true
	this.LogSessions = &logSessions
	return &this
}

// GetLogSessions returns the LogSessions field value if set, zero value otherwise.
func (o *InternetRuleTypeLogSettings) GetLogSessions() bool {
	if o == nil || IsNil(o.LogSessions) {
		var ret bool
		return ret
	}
	return *o.LogSessions
}

// GetLogSessionsOk returns a tuple with the LogSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetRuleTypeLogSettings) GetLogSessionsOk() (*bool, bool) {
	if o == nil || IsNil(o.LogSessions) {
		return nil, false
	}
	return o.LogSessions, true
}

// HasLogSessions returns a boolean if a field has been set.
func (o *InternetRuleTypeLogSettings) HasLogSessions() bool {
	if o != nil && !IsNil(o.LogSessions) {
		return true
	}

	return false
}

// SetLogSessions gets a reference to the given bool and assigns it to the LogSessions field.
func (o *InternetRuleTypeLogSettings) SetLogSessions(v bool) {
	o.LogSessions = &v
}

func (o InternetRuleTypeLogSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetRuleTypeLogSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogSessions) {
		toSerialize["log_sessions"] = o.LogSessions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternetRuleTypeLogSettings) UnmarshalJSON(data []byte) (err error) {
	varInternetRuleTypeLogSettings := _InternetRuleTypeLogSettings{}

	err = json.Unmarshal(data, &varInternetRuleTypeLogSettings)

	if err != nil {
		return err
	}

	*o = InternetRuleTypeLogSettings(varInternetRuleTypeLogSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "log_sessions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternetRuleTypeLogSettings struct {
	value *InternetRuleTypeLogSettings
	isSet bool
}

func (v NullableInternetRuleTypeLogSettings) Get() *InternetRuleTypeLogSettings {
	return v.value
}

func (v *NullableInternetRuleTypeLogSettings) Set(val *InternetRuleTypeLogSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetRuleTypeLogSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetRuleTypeLogSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetRuleTypeLogSettings(val *InternetRuleTypeLogSettings) *NullableInternetRuleTypeLogSettings {
	return &NullableInternetRuleTypeLogSettings{value: val, isSet: true}
}

func (v NullableInternetRuleTypeLogSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetRuleTypeLogSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
