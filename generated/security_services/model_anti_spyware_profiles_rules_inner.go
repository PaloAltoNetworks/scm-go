/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
)

// checks if the AntiSpywareProfilesRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiSpywareProfilesRulesInner{}

// AntiSpywareProfilesRulesInner struct for AntiSpywareProfilesRulesInner
type AntiSpywareProfilesRulesInner struct {
	Action               *AntiSpywareProfilesRulesInnerAction `json:"action,omitempty"`
	Category             *string                              `json:"category,omitempty"`
	Name                 *string                              `json:"name,omitempty"`
	PacketCapture        *string                              `json:"packet_capture,omitempty"`
	Severity             []string                             `json:"severity,omitempty"`
	ThreatName           *string                              `json:"threat_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AntiSpywareProfilesRulesInner AntiSpywareProfilesRulesInner

// NewAntiSpywareProfilesRulesInner instantiates a new AntiSpywareProfilesRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiSpywareProfilesRulesInner() *AntiSpywareProfilesRulesInner {
	this := AntiSpywareProfilesRulesInner{}
	var threatName string = "any"
	this.ThreatName = &threatName
	return &this
}

// NewAntiSpywareProfilesRulesInnerWithDefaults instantiates a new AntiSpywareProfilesRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiSpywareProfilesRulesInnerWithDefaults() *AntiSpywareProfilesRulesInner {
	this := AntiSpywareProfilesRulesInner{}
	var threatName string = "any"
	this.ThreatName = &threatName
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AntiSpywareProfilesRulesInner) GetAction() AntiSpywareProfilesRulesInnerAction {
	if o == nil || IsNil(o.Action) {
		var ret AntiSpywareProfilesRulesInnerAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfilesRulesInner) GetActionOk() (*AntiSpywareProfilesRulesInnerAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AntiSpywareProfilesRulesInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given AntiSpywareProfilesRulesInnerAction and assigns it to the Action field.
func (o *AntiSpywareProfilesRulesInner) SetAction(v AntiSpywareProfilesRulesInnerAction) {
	o.Action = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AntiSpywareProfilesRulesInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfilesRulesInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AntiSpywareProfilesRulesInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AntiSpywareProfilesRulesInner) SetCategory(v string) {
	o.Category = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AntiSpywareProfilesRulesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfilesRulesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AntiSpywareProfilesRulesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AntiSpywareProfilesRulesInner) SetName(v string) {
	o.Name = &v
}

// GetPacketCapture returns the PacketCapture field value if set, zero value otherwise.
func (o *AntiSpywareProfilesRulesInner) GetPacketCapture() string {
	if o == nil || IsNil(o.PacketCapture) {
		var ret string
		return ret
	}
	return *o.PacketCapture
}

// GetPacketCaptureOk returns a tuple with the PacketCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfilesRulesInner) GetPacketCaptureOk() (*string, bool) {
	if o == nil || IsNil(o.PacketCapture) {
		return nil, false
	}
	return o.PacketCapture, true
}

// HasPacketCapture returns a boolean if a field has been set.
func (o *AntiSpywareProfilesRulesInner) HasPacketCapture() bool {
	if o != nil && !IsNil(o.PacketCapture) {
		return true
	}

	return false
}

// SetPacketCapture gets a reference to the given string and assigns it to the PacketCapture field.
func (o *AntiSpywareProfilesRulesInner) SetPacketCapture(v string) {
	o.PacketCapture = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AntiSpywareProfilesRulesInner) GetSeverity() []string {
	if o == nil || IsNil(o.Severity) {
		var ret []string
		return ret
	}
	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfilesRulesInner) GetSeverityOk() ([]string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AntiSpywareProfilesRulesInner) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given []string and assigns it to the Severity field.
func (o *AntiSpywareProfilesRulesInner) SetSeverity(v []string) {
	o.Severity = v
}

// GetThreatName returns the ThreatName field value if set, zero value otherwise.
func (o *AntiSpywareProfilesRulesInner) GetThreatName() string {
	if o == nil || IsNil(o.ThreatName) {
		var ret string
		return ret
	}
	return *o.ThreatName
}

// GetThreatNameOk returns a tuple with the ThreatName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiSpywareProfilesRulesInner) GetThreatNameOk() (*string, bool) {
	if o == nil || IsNil(o.ThreatName) {
		return nil, false
	}
	return o.ThreatName, true
}

// HasThreatName returns a boolean if a field has been set.
func (o *AntiSpywareProfilesRulesInner) HasThreatName() bool {
	if o != nil && !IsNil(o.ThreatName) {
		return true
	}

	return false
}

// SetThreatName gets a reference to the given string and assigns it to the ThreatName field.
func (o *AntiSpywareProfilesRulesInner) SetThreatName(v string) {
	o.ThreatName = &v
}

func (o AntiSpywareProfilesRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiSpywareProfilesRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PacketCapture) {
		toSerialize["packet_capture"] = o.PacketCapture
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.ThreatName) {
		toSerialize["threat_name"] = o.ThreatName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AntiSpywareProfilesRulesInner) UnmarshalJSON(data []byte) (err error) {
	varAntiSpywareProfilesRulesInner := _AntiSpywareProfilesRulesInner{}

	err = json.Unmarshal(data, &varAntiSpywareProfilesRulesInner)

	if err != nil {
		return err
	}

	*o = AntiSpywareProfilesRulesInner(varAntiSpywareProfilesRulesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "category")
		delete(additionalProperties, "name")
		delete(additionalProperties, "packet_capture")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "threat_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAntiSpywareProfilesRulesInner struct {
	value *AntiSpywareProfilesRulesInner
	isSet bool
}

func (v NullableAntiSpywareProfilesRulesInner) Get() *AntiSpywareProfilesRulesInner {
	return v.value
}

func (v *NullableAntiSpywareProfilesRulesInner) Set(val *AntiSpywareProfilesRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiSpywareProfilesRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiSpywareProfilesRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiSpywareProfilesRulesInner(val *AntiSpywareProfilesRulesInner) *NullableAntiSpywareProfilesRulesInner {
	return &NullableAntiSpywareProfilesRulesInner{value: val, isSet: true}
}

func (v NullableAntiSpywareProfilesRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiSpywareProfilesRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
