/*
Security Services

These APIs are used for defining and managing security services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security_services

import (
	"encoding/json"
	"fmt"
)

// checks if the HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner{}

// HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner struct for HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner
type HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner struct {
	// A list of DNS domains
	Domains []string                                                          `json:"domains"`
	Headers []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerHeadersInner `json:"headers"`
	// The HTTP header insertion type (_This is a predefined list in the UI_)
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner

// NewHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner instantiates a new HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner(domains []string, headers []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerHeadersInner, name string) *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner {
	this := HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner{}
	this.Domains = domains
	this.Headers = headers
	this.Name = name
	return &this
}

// NewHttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerWithDefaults instantiates a new HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerWithDefaults() *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner {
	this := HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner{}
	return &this
}

// GetDomains returns the Domains field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) GetDomains() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value
// and a boolean to check if the value has been set.
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) GetDomainsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domains, true
}

// SetDomains sets field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) SetDomains(v []string) {
	o.Domains = v
}

// GetHeaders returns the Headers field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) GetHeaders() []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerHeadersInner {
	if o == nil {
		var ret []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerHeadersInner
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) GetHeadersOk() ([]HttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerHeadersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Headers, true
}

// SetHeaders sets field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) SetHeaders(v []HttpHeaderProfilesHttpHeaderInsertionInnerTypeInnerHeadersInner) {
	o.Headers = v
}

// GetName returns the Name field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) SetName(v string) {
	o.Name = v
}

func (o HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domains"] = o.Domains
	toSerialize["headers"] = o.Headers
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domains",
		"headers",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner := _HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner{}

	err = json.Unmarshal(data, &varHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner)

	if err != nil {
		return err
	}

	*o = HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner(varHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "domains")
		delete(additionalProperties, "headers")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner struct {
	value *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner
	isSet bool
}

func (v NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) Get() *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner {
	return v.value
}

func (v *NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) Set(val *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner(val *HttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) *NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner {
	return &NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner{value: val, isSet: true}
}

func (v NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpHeaderProfilesHttpHeaderInsertionInnerTypeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
