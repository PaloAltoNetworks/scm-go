/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the AuthenticationProfilesMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationProfilesMethod{}

// AuthenticationProfilesMethod struct for AuthenticationProfilesMethod
type AuthenticationProfilesMethod struct {
	Cloud                *AuthenticationProfilesMethodCloud    `json:"cloud,omitempty"`
	Kerberos             *AuthenticationProfilesMethodKerberos `json:"kerberos,omitempty"`
	Ldap                 *AuthenticationProfilesMethodLdap     `json:"ldap,omitempty"`
	LocalDatabase        map[string]interface{}                `json:"local_database,omitempty"`
	Radius               *AuthenticationProfilesMethodRadius   `json:"radius,omitempty"`
	SamlIdp              *AuthenticationProfilesMethodSamlIdp  `json:"saml_idp,omitempty"`
	Tacplus              *AuthenticationProfilesMethodRadius   `json:"tacplus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthenticationProfilesMethod AuthenticationProfilesMethod

// NewAuthenticationProfilesMethod instantiates a new AuthenticationProfilesMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationProfilesMethod() *AuthenticationProfilesMethod {
	this := AuthenticationProfilesMethod{}
	return &this
}

// NewAuthenticationProfilesMethodWithDefaults instantiates a new AuthenticationProfilesMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationProfilesMethodWithDefaults() *AuthenticationProfilesMethod {
	this := AuthenticationProfilesMethod{}
	return &this
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetCloud() AuthenticationProfilesMethodCloud {
	if o == nil || IsNil(o.Cloud) {
		var ret AuthenticationProfilesMethodCloud
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetCloudOk() (*AuthenticationProfilesMethodCloud, bool) {
	if o == nil || IsNil(o.Cloud) {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasCloud() bool {
	if o != nil && !IsNil(o.Cloud) {
		return true
	}

	return false
}

// SetCloud gets a reference to the given AuthenticationProfilesMethodCloud and assigns it to the Cloud field.
func (o *AuthenticationProfilesMethod) SetCloud(v AuthenticationProfilesMethodCloud) {
	o.Cloud = &v
}

// GetKerberos returns the Kerberos field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetKerberos() AuthenticationProfilesMethodKerberos {
	if o == nil || IsNil(o.Kerberos) {
		var ret AuthenticationProfilesMethodKerberos
		return ret
	}
	return *o.Kerberos
}

// GetKerberosOk returns a tuple with the Kerberos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetKerberosOk() (*AuthenticationProfilesMethodKerberos, bool) {
	if o == nil || IsNil(o.Kerberos) {
		return nil, false
	}
	return o.Kerberos, true
}

// HasKerberos returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasKerberos() bool {
	if o != nil && !IsNil(o.Kerberos) {
		return true
	}

	return false
}

// SetKerberos gets a reference to the given AuthenticationProfilesMethodKerberos and assigns it to the Kerberos field.
func (o *AuthenticationProfilesMethod) SetKerberos(v AuthenticationProfilesMethodKerberos) {
	o.Kerberos = &v
}

// GetLdap returns the Ldap field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetLdap() AuthenticationProfilesMethodLdap {
	if o == nil || IsNil(o.Ldap) {
		var ret AuthenticationProfilesMethodLdap
		return ret
	}
	return *o.Ldap
}

// GetLdapOk returns a tuple with the Ldap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetLdapOk() (*AuthenticationProfilesMethodLdap, bool) {
	if o == nil || IsNil(o.Ldap) {
		return nil, false
	}
	return o.Ldap, true
}

// HasLdap returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasLdap() bool {
	if o != nil && !IsNil(o.Ldap) {
		return true
	}

	return false
}

// SetLdap gets a reference to the given AuthenticationProfilesMethodLdap and assigns it to the Ldap field.
func (o *AuthenticationProfilesMethod) SetLdap(v AuthenticationProfilesMethodLdap) {
	o.Ldap = &v
}

// GetLocalDatabase returns the LocalDatabase field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetLocalDatabase() map[string]interface{} {
	if o == nil || IsNil(o.LocalDatabase) {
		var ret map[string]interface{}
		return ret
	}
	return o.LocalDatabase
}

// GetLocalDatabaseOk returns a tuple with the LocalDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetLocalDatabaseOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LocalDatabase) {
		return map[string]interface{}{}, false
	}
	return o.LocalDatabase, true
}

// HasLocalDatabase returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasLocalDatabase() bool {
	if o != nil && !IsNil(o.LocalDatabase) {
		return true
	}

	return false
}

// SetLocalDatabase gets a reference to the given map[string]interface{} and assigns it to the LocalDatabase field.
func (o *AuthenticationProfilesMethod) SetLocalDatabase(v map[string]interface{}) {
	o.LocalDatabase = v
}

// GetRadius returns the Radius field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetRadius() AuthenticationProfilesMethodRadius {
	if o == nil || IsNil(o.Radius) {
		var ret AuthenticationProfilesMethodRadius
		return ret
	}
	return *o.Radius
}

// GetRadiusOk returns a tuple with the Radius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetRadiusOk() (*AuthenticationProfilesMethodRadius, bool) {
	if o == nil || IsNil(o.Radius) {
		return nil, false
	}
	return o.Radius, true
}

// HasRadius returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasRadius() bool {
	if o != nil && !IsNil(o.Radius) {
		return true
	}

	return false
}

// SetRadius gets a reference to the given AuthenticationProfilesMethodRadius and assigns it to the Radius field.
func (o *AuthenticationProfilesMethod) SetRadius(v AuthenticationProfilesMethodRadius) {
	o.Radius = &v
}

// GetSamlIdp returns the SamlIdp field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetSamlIdp() AuthenticationProfilesMethodSamlIdp {
	if o == nil || IsNil(o.SamlIdp) {
		var ret AuthenticationProfilesMethodSamlIdp
		return ret
	}
	return *o.SamlIdp
}

// GetSamlIdpOk returns a tuple with the SamlIdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetSamlIdpOk() (*AuthenticationProfilesMethodSamlIdp, bool) {
	if o == nil || IsNil(o.SamlIdp) {
		return nil, false
	}
	return o.SamlIdp, true
}

// HasSamlIdp returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasSamlIdp() bool {
	if o != nil && !IsNil(o.SamlIdp) {
		return true
	}

	return false
}

// SetSamlIdp gets a reference to the given AuthenticationProfilesMethodSamlIdp and assigns it to the SamlIdp field.
func (o *AuthenticationProfilesMethod) SetSamlIdp(v AuthenticationProfilesMethodSamlIdp) {
	o.SamlIdp = &v
}

// GetTacplus returns the Tacplus field value if set, zero value otherwise.
func (o *AuthenticationProfilesMethod) GetTacplus() AuthenticationProfilesMethodRadius {
	if o == nil || IsNil(o.Tacplus) {
		var ret AuthenticationProfilesMethodRadius
		return ret
	}
	return *o.Tacplus
}

// GetTacplusOk returns a tuple with the Tacplus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMethod) GetTacplusOk() (*AuthenticationProfilesMethodRadius, bool) {
	if o == nil || IsNil(o.Tacplus) {
		return nil, false
	}
	return o.Tacplus, true
}

// HasTacplus returns a boolean if a field has been set.
func (o *AuthenticationProfilesMethod) HasTacplus() bool {
	if o != nil && !IsNil(o.Tacplus) {
		return true
	}

	return false
}

// SetTacplus gets a reference to the given AuthenticationProfilesMethodRadius and assigns it to the Tacplus field.
func (o *AuthenticationProfilesMethod) SetTacplus(v AuthenticationProfilesMethodRadius) {
	o.Tacplus = &v
}

func (o AuthenticationProfilesMethod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationProfilesMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cloud) {
		toSerialize["cloud"] = o.Cloud
	}
	if !IsNil(o.Kerberos) {
		toSerialize["kerberos"] = o.Kerberos
	}
	if !IsNil(o.Ldap) {
		toSerialize["ldap"] = o.Ldap
	}
	if !IsNil(o.LocalDatabase) {
		toSerialize["local_database"] = o.LocalDatabase
	}
	if !IsNil(o.Radius) {
		toSerialize["radius"] = o.Radius
	}
	if !IsNil(o.SamlIdp) {
		toSerialize["saml_idp"] = o.SamlIdp
	}
	if !IsNil(o.Tacplus) {
		toSerialize["tacplus"] = o.Tacplus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthenticationProfilesMethod) UnmarshalJSON(data []byte) (err error) {
	varAuthenticationProfilesMethod := _AuthenticationProfilesMethod{}

	err = json.Unmarshal(data, &varAuthenticationProfilesMethod)

	if err != nil {
		return err
	}

	*o = AuthenticationProfilesMethod(varAuthenticationProfilesMethod)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloud")
		delete(additionalProperties, "kerberos")
		delete(additionalProperties, "ldap")
		delete(additionalProperties, "local_database")
		delete(additionalProperties, "radius")
		delete(additionalProperties, "saml_idp")
		delete(additionalProperties, "tacplus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthenticationProfilesMethod struct {
	value *AuthenticationProfilesMethod
	isSet bool
}

func (v NullableAuthenticationProfilesMethod) Get() *AuthenticationProfilesMethod {
	return v.value
}

func (v *NullableAuthenticationProfilesMethod) Set(val *AuthenticationProfilesMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationProfilesMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationProfilesMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationProfilesMethod(val *AuthenticationProfilesMethod) *NullableAuthenticationProfilesMethod {
	return &NullableAuthenticationProfilesMethod{value: val, isSet: true}
}

func (v NullableAuthenticationProfilesMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationProfilesMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
