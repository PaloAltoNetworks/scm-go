/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
	"fmt"
)

// checks if the SamlServerProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlServerProfiles{}

// SamlServerProfiles struct for SamlServerProfiles
type SamlServerProfiles struct {
	// The identity provider certificate
	Certificate string `json:"certificate"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// The identity provider ID
	EntityId string `json:"entity_id"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// The UUID of the SAML server profile
	Id string `json:"id"`
	// Maxiumum clock skew
	MaxClockSkew *int32 `json:"max_clock_skew,omitempty"`
	// The name of the SAML server profile
	Name string `json:"name"`
	// SAML HTTP binding for SLO requests to the identity provider
	SloBindings *string `json:"slo_bindings,omitempty"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// SAML HTTP binding for SSO requests to the identity provider
	SsoBindings string `json:"sso_bindings"`
	// Identity provider SSO URL
	SsoUrl string `json:"sso_url"`
	// Validate the identity provider certificate?
	ValidateIdpCertificate *bool `json:"validate_idp_certificate,omitempty"`
	// Sign SAML message to the identity provider?
	WantAuthRequestsSigned *bool `json:"want_auth_requests_signed,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _SamlServerProfiles SamlServerProfiles

// NewSamlServerProfiles instantiates a new SamlServerProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlServerProfiles(certificate string, entityId string, id string, name string, ssoBindings string, ssoUrl string) *SamlServerProfiles {
	this := SamlServerProfiles{}
	this.Certificate = certificate
	this.EntityId = entityId
	this.Id = id
	this.Name = name
	this.SsoBindings = ssoBindings
	this.SsoUrl = ssoUrl
	return &this
}

// NewSamlServerProfilesWithDefaults instantiates a new SamlServerProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlServerProfilesWithDefaults() *SamlServerProfiles {
	this := SamlServerProfiles{}
	return &this
}

// GetCertificate returns the Certificate field value
func (o *SamlServerProfiles) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *SamlServerProfiles) SetCertificate(v string) {
	o.Certificate = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *SamlServerProfiles) SetDevice(v string) {
	o.Device = &v
}

// GetEntityId returns the EntityId field value
func (o *SamlServerProfiles) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *SamlServerProfiles) SetEntityId(v string) {
	o.EntityId = v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *SamlServerProfiles) SetFolder(v string) {
	o.Folder = &v
}

// GetId returns the Id field value
func (o *SamlServerProfiles) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SamlServerProfiles) SetId(v string) {
	o.Id = v
}

// GetMaxClockSkew returns the MaxClockSkew field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetMaxClockSkew() int32 {
	if o == nil || IsNil(o.MaxClockSkew) {
		var ret int32
		return ret
	}
	return *o.MaxClockSkew
}

// GetMaxClockSkewOk returns a tuple with the MaxClockSkew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetMaxClockSkewOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxClockSkew) {
		return nil, false
	}
	return o.MaxClockSkew, true
}

// HasMaxClockSkew returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasMaxClockSkew() bool {
	if o != nil && !IsNil(o.MaxClockSkew) {
		return true
	}

	return false
}

// SetMaxClockSkew gets a reference to the given int32 and assigns it to the MaxClockSkew field.
func (o *SamlServerProfiles) SetMaxClockSkew(v int32) {
	o.MaxClockSkew = &v
}

// GetName returns the Name field value
func (o *SamlServerProfiles) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SamlServerProfiles) SetName(v string) {
	o.Name = v
}

// GetSloBindings returns the SloBindings field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetSloBindings() string {
	if o == nil || IsNil(o.SloBindings) {
		var ret string
		return ret
	}
	return *o.SloBindings
}

// GetSloBindingsOk returns a tuple with the SloBindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetSloBindingsOk() (*string, bool) {
	if o == nil || IsNil(o.SloBindings) {
		return nil, false
	}
	return o.SloBindings, true
}

// HasSloBindings returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasSloBindings() bool {
	if o != nil && !IsNil(o.SloBindings) {
		return true
	}

	return false
}

// SetSloBindings gets a reference to the given string and assigns it to the SloBindings field.
func (o *SamlServerProfiles) SetSloBindings(v string) {
	o.SloBindings = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *SamlServerProfiles) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSsoBindings returns the SsoBindings field value
func (o *SamlServerProfiles) GetSsoBindings() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoBindings
}

// GetSsoBindingsOk returns a tuple with the SsoBindings field value
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetSsoBindingsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoBindings, true
}

// SetSsoBindings sets field value
func (o *SamlServerProfiles) SetSsoBindings(v string) {
	o.SsoBindings = v
}

// GetSsoUrl returns the SsoUrl field value
func (o *SamlServerProfiles) GetSsoUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoUrl
}

// GetSsoUrlOk returns a tuple with the SsoUrl field value
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetSsoUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoUrl, true
}

// SetSsoUrl sets field value
func (o *SamlServerProfiles) SetSsoUrl(v string) {
	o.SsoUrl = v
}

// GetValidateIdpCertificate returns the ValidateIdpCertificate field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetValidateIdpCertificate() bool {
	if o == nil || IsNil(o.ValidateIdpCertificate) {
		var ret bool
		return ret
	}
	return *o.ValidateIdpCertificate
}

// GetValidateIdpCertificateOk returns a tuple with the ValidateIdpCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetValidateIdpCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateIdpCertificate) {
		return nil, false
	}
	return o.ValidateIdpCertificate, true
}

// HasValidateIdpCertificate returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasValidateIdpCertificate() bool {
	if o != nil && !IsNil(o.ValidateIdpCertificate) {
		return true
	}

	return false
}

// SetValidateIdpCertificate gets a reference to the given bool and assigns it to the ValidateIdpCertificate field.
func (o *SamlServerProfiles) SetValidateIdpCertificate(v bool) {
	o.ValidateIdpCertificate = &v
}

// GetWantAuthRequestsSigned returns the WantAuthRequestsSigned field value if set, zero value otherwise.
func (o *SamlServerProfiles) GetWantAuthRequestsSigned() bool {
	if o == nil || IsNil(o.WantAuthRequestsSigned) {
		var ret bool
		return ret
	}
	return *o.WantAuthRequestsSigned
}

// GetWantAuthRequestsSignedOk returns a tuple with the WantAuthRequestsSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlServerProfiles) GetWantAuthRequestsSignedOk() (*bool, bool) {
	if o == nil || IsNil(o.WantAuthRequestsSigned) {
		return nil, false
	}
	return o.WantAuthRequestsSigned, true
}

// HasWantAuthRequestsSigned returns a boolean if a field has been set.
func (o *SamlServerProfiles) HasWantAuthRequestsSigned() bool {
	if o != nil && !IsNil(o.WantAuthRequestsSigned) {
		return true
	}

	return false
}

// SetWantAuthRequestsSigned gets a reference to the given bool and assigns it to the WantAuthRequestsSigned field.
func (o *SamlServerProfiles) SetWantAuthRequestsSigned(v bool) {
	o.WantAuthRequestsSigned = &v
}

func (o SamlServerProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlServerProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["certificate"] = o.Certificate
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	toSerialize["entity_id"] = o.EntityId
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.MaxClockSkew) {
		toSerialize["max_clock_skew"] = o.MaxClockSkew
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.SloBindings) {
		toSerialize["slo_bindings"] = o.SloBindings
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	toSerialize["sso_bindings"] = o.SsoBindings
	toSerialize["sso_url"] = o.SsoUrl
	if !IsNil(o.ValidateIdpCertificate) {
		toSerialize["validate_idp_certificate"] = o.ValidateIdpCertificate
	}
	if !IsNil(o.WantAuthRequestsSigned) {
		toSerialize["want_auth_requests_signed"] = o.WantAuthRequestsSigned
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SamlServerProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"certificate",
		"entity_id",
		"id",
		"name",
		"sso_bindings",
		"sso_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSamlServerProfiles := _SamlServerProfiles{}

	err = json.Unmarshal(data, &varSamlServerProfiles)

	if err != nil {
		return err
	}

	*o = SamlServerProfiles(varSamlServerProfiles)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "device")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "id")
		delete(additionalProperties, "max_clock_skew")
		delete(additionalProperties, "name")
		delete(additionalProperties, "slo_bindings")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "sso_bindings")
		delete(additionalProperties, "sso_url")
		delete(additionalProperties, "validate_idp_certificate")
		delete(additionalProperties, "want_auth_requests_signed")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSamlServerProfiles struct {
	value *SamlServerProfiles
	isSet bool
}

func (v NullableSamlServerProfiles) Get() *SamlServerProfiles {
	return v.value
}

func (v *NullableSamlServerProfiles) Set(val *SamlServerProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlServerProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlServerProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlServerProfiles(val *SamlServerProfiles) *NullableSamlServerProfiles {
	return &NullableSamlServerProfiles{value: val, isSet: true}
}

func (v NullableSamlServerProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlServerProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
