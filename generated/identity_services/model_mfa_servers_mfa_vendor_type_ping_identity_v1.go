/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
	"fmt"
)

// checks if the MfaServersMfaVendorTypePingIdentityV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MfaServersMfaVendorTypePingIdentityV1{}

// MfaServersMfaVendorTypePingIdentityV1 Integation with [Ping Identity](https://www.pingidentity.com/en/platform.html)
type MfaServersMfaVendorTypePingIdentityV1 struct {
	// Ping Identity API hostname
	PingApiHost string `json:"ping_api_host"`
	// Ping Identity API base URI
	PingBaseuri string `json:"ping_baseuri"`
	// Ping Identity client organization ID
	PingOrgAlias *string `json:"ping_org_alias,omitempty"`
	// Ping Identity timeout (seconds)
	PingTimeout int32 `json:"ping_timeout"`
	// Ping Identity API token
	PingToken string `json:"ping_token"`
	// Ping Identity Base64 key
	PingUseBase64Key     string `json:"ping_use_base64_key"`
	AdditionalProperties map[string]interface{}
}

type _MfaServersMfaVendorTypePingIdentityV1 MfaServersMfaVendorTypePingIdentityV1

// NewMfaServersMfaVendorTypePingIdentityV1 instantiates a new MfaServersMfaVendorTypePingIdentityV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMfaServersMfaVendorTypePingIdentityV1(pingApiHost string, pingBaseuri string, pingTimeout int32, pingToken string, pingUseBase64Key string) *MfaServersMfaVendorTypePingIdentityV1 {
	this := MfaServersMfaVendorTypePingIdentityV1{}
	this.PingApiHost = pingApiHost
	this.PingBaseuri = pingBaseuri
	this.PingTimeout = pingTimeout
	this.PingToken = pingToken
	this.PingUseBase64Key = pingUseBase64Key
	return &this
}

// NewMfaServersMfaVendorTypePingIdentityV1WithDefaults instantiates a new MfaServersMfaVendorTypePingIdentityV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMfaServersMfaVendorTypePingIdentityV1WithDefaults() *MfaServersMfaVendorTypePingIdentityV1 {
	this := MfaServersMfaVendorTypePingIdentityV1{}
	var pingApiHost string = "idpxny3lm.pingidentity.com"
	this.PingApiHost = pingApiHost
	var pingBaseuri string = "/pingid/rest/4"
	this.PingBaseuri = pingBaseuri
	var pingTimeout int32 = 30
	this.PingTimeout = pingTimeout
	return &this
}

// GetPingApiHost returns the PingApiHost field value
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingApiHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingApiHost
}

// GetPingApiHostOk returns a tuple with the PingApiHost field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingApiHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingApiHost, true
}

// SetPingApiHost sets field value
func (o *MfaServersMfaVendorTypePingIdentityV1) SetPingApiHost(v string) {
	o.PingApiHost = v
}

// GetPingBaseuri returns the PingBaseuri field value
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingBaseuri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingBaseuri
}

// GetPingBaseuriOk returns a tuple with the PingBaseuri field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingBaseuriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingBaseuri, true
}

// SetPingBaseuri sets field value
func (o *MfaServersMfaVendorTypePingIdentityV1) SetPingBaseuri(v string) {
	o.PingBaseuri = v
}

// GetPingOrgAlias returns the PingOrgAlias field value if set, zero value otherwise.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingOrgAlias() string {
	if o == nil || IsNil(o.PingOrgAlias) {
		var ret string
		return ret
	}
	return *o.PingOrgAlias
}

// GetPingOrgAliasOk returns a tuple with the PingOrgAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingOrgAliasOk() (*string, bool) {
	if o == nil || IsNil(o.PingOrgAlias) {
		return nil, false
	}
	return o.PingOrgAlias, true
}

// HasPingOrgAlias returns a boolean if a field has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) HasPingOrgAlias() bool {
	if o != nil && !IsNil(o.PingOrgAlias) {
		return true
	}

	return false
}

// SetPingOrgAlias gets a reference to the given string and assigns it to the PingOrgAlias field.
func (o *MfaServersMfaVendorTypePingIdentityV1) SetPingOrgAlias(v string) {
	o.PingOrgAlias = &v
}

// GetPingTimeout returns the PingTimeout field value
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PingTimeout
}

// GetPingTimeoutOk returns a tuple with the PingTimeout field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingTimeout, true
}

// SetPingTimeout sets field value
func (o *MfaServersMfaVendorTypePingIdentityV1) SetPingTimeout(v int32) {
	o.PingTimeout = v
}

// GetPingToken returns the PingToken field value
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingToken
}

// GetPingTokenOk returns a tuple with the PingToken field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingToken, true
}

// SetPingToken sets field value
func (o *MfaServersMfaVendorTypePingIdentityV1) SetPingToken(v string) {
	o.PingToken = v
}

// GetPingUseBase64Key returns the PingUseBase64Key field value
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingUseBase64Key() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingUseBase64Key
}

// GetPingUseBase64KeyOk returns a tuple with the PingUseBase64Key field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypePingIdentityV1) GetPingUseBase64KeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingUseBase64Key, true
}

// SetPingUseBase64Key sets field value
func (o *MfaServersMfaVendorTypePingIdentityV1) SetPingUseBase64Key(v string) {
	o.PingUseBase64Key = v
}

func (o MfaServersMfaVendorTypePingIdentityV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MfaServersMfaVendorTypePingIdentityV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ping_api_host"] = o.PingApiHost
	toSerialize["ping_baseuri"] = o.PingBaseuri
	if !IsNil(o.PingOrgAlias) {
		toSerialize["ping_org_alias"] = o.PingOrgAlias
	}
	toSerialize["ping_timeout"] = o.PingTimeout
	toSerialize["ping_token"] = o.PingToken
	toSerialize["ping_use_base64_key"] = o.PingUseBase64Key

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MfaServersMfaVendorTypePingIdentityV1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ping_api_host",
		"ping_baseuri",
		"ping_timeout",
		"ping_token",
		"ping_use_base64_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMfaServersMfaVendorTypePingIdentityV1 := _MfaServersMfaVendorTypePingIdentityV1{}

	err = json.Unmarshal(data, &varMfaServersMfaVendorTypePingIdentityV1)

	if err != nil {
		return err
	}

	*o = MfaServersMfaVendorTypePingIdentityV1(varMfaServersMfaVendorTypePingIdentityV1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ping_api_host")
		delete(additionalProperties, "ping_baseuri")
		delete(additionalProperties, "ping_org_alias")
		delete(additionalProperties, "ping_timeout")
		delete(additionalProperties, "ping_token")
		delete(additionalProperties, "ping_use_base64_key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMfaServersMfaVendorTypePingIdentityV1 struct {
	value *MfaServersMfaVendorTypePingIdentityV1
	isSet bool
}

func (v NullableMfaServersMfaVendorTypePingIdentityV1) Get() *MfaServersMfaVendorTypePingIdentityV1 {
	return v.value
}

func (v *NullableMfaServersMfaVendorTypePingIdentityV1) Set(val *MfaServersMfaVendorTypePingIdentityV1) {
	v.value = val
	v.isSet = true
}

func (v NullableMfaServersMfaVendorTypePingIdentityV1) IsSet() bool {
	return v.isSet
}

func (v *NullableMfaServersMfaVendorTypePingIdentityV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMfaServersMfaVendorTypePingIdentityV1(val *MfaServersMfaVendorTypePingIdentityV1) *NullableMfaServersMfaVendorTypePingIdentityV1 {
	return &NullableMfaServersMfaVendorTypePingIdentityV1{value: val, isSet: true}
}

func (v NullableMfaServersMfaVendorTypePingIdentityV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMfaServersMfaVendorTypePingIdentityV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
