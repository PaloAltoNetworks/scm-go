/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the ScepProfilesAlgorithmRsa type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScepProfilesAlgorithmRsa{}

// ScepProfilesAlgorithmRsa Key length (bits)
type ScepProfilesAlgorithmRsa struct {
	RsaNbits             *int32 `json:"rsa_nbits,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ScepProfilesAlgorithmRsa ScepProfilesAlgorithmRsa

// NewScepProfilesAlgorithmRsa instantiates a new ScepProfilesAlgorithmRsa object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScepProfilesAlgorithmRsa() *ScepProfilesAlgorithmRsa {
	this := ScepProfilesAlgorithmRsa{}
	return &this
}

// NewScepProfilesAlgorithmRsaWithDefaults instantiates a new ScepProfilesAlgorithmRsa object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScepProfilesAlgorithmRsaWithDefaults() *ScepProfilesAlgorithmRsa {
	this := ScepProfilesAlgorithmRsa{}
	return &this
}

// GetRsaNbits returns the RsaNbits field value if set, zero value otherwise.
func (o *ScepProfilesAlgorithmRsa) GetRsaNbits() int32 {
	if o == nil || IsNil(o.RsaNbits) {
		var ret int32
		return ret
	}
	return *o.RsaNbits
}

// GetRsaNbitsOk returns a tuple with the RsaNbits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScepProfilesAlgorithmRsa) GetRsaNbitsOk() (*int32, bool) {
	if o == nil || IsNil(o.RsaNbits) {
		return nil, false
	}
	return o.RsaNbits, true
}

// HasRsaNbits returns a boolean if a field has been set.
func (o *ScepProfilesAlgorithmRsa) HasRsaNbits() bool {
	if o != nil && !IsNil(o.RsaNbits) {
		return true
	}

	return false
}

// SetRsaNbits gets a reference to the given int32 and assigns it to the RsaNbits field.
func (o *ScepProfilesAlgorithmRsa) SetRsaNbits(v int32) {
	o.RsaNbits = &v
}

func (o ScepProfilesAlgorithmRsa) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScepProfilesAlgorithmRsa) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RsaNbits) {
		toSerialize["rsa_nbits"] = o.RsaNbits
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScepProfilesAlgorithmRsa) UnmarshalJSON(data []byte) (err error) {
	varScepProfilesAlgorithmRsa := _ScepProfilesAlgorithmRsa{}

	err = json.Unmarshal(data, &varScepProfilesAlgorithmRsa)

	if err != nil {
		return err
	}

	*o = ScepProfilesAlgorithmRsa(varScepProfilesAlgorithmRsa)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rsa_nbits")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScepProfilesAlgorithmRsa struct {
	value *ScepProfilesAlgorithmRsa
	isSet bool
}

func (v NullableScepProfilesAlgorithmRsa) Get() *ScepProfilesAlgorithmRsa {
	return v.value
}

func (v *NullableScepProfilesAlgorithmRsa) Set(val *ScepProfilesAlgorithmRsa) {
	v.value = val
	v.isSet = true
}

func (v NullableScepProfilesAlgorithmRsa) IsSet() bool {
	return v.isSet
}

func (v *NullableScepProfilesAlgorithmRsa) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScepProfilesAlgorithmRsa(val *ScepProfilesAlgorithmRsa) *NullableScepProfilesAlgorithmRsa {
	return &NullableScepProfilesAlgorithmRsa{value: val, isSet: true}
}

func (v NullableScepProfilesAlgorithmRsa) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScepProfilesAlgorithmRsa) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
