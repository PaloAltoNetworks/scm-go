/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the TacacsServerProfilesServerInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TacacsServerProfilesServerInner{}

// TacacsServerProfilesServerInner struct for TacacsServerProfilesServerInner
type TacacsServerProfilesServerInner struct {
	// The IP address of the TACACS+ server
	Address *string `json:"address,omitempty"`
	// The name of the TACACS+ server
	Name *string `json:"name,omitempty"`
	// The TACACS+ server port
	Port *int32 `json:"port,omitempty"`
	// The TACACS+ secret
	Secret               *string `json:"secret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TacacsServerProfilesServerInner TacacsServerProfilesServerInner

// NewTacacsServerProfilesServerInner instantiates a new TacacsServerProfilesServerInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTacacsServerProfilesServerInner() *TacacsServerProfilesServerInner {
	this := TacacsServerProfilesServerInner{}
	return &this
}

// NewTacacsServerProfilesServerInnerWithDefaults instantiates a new TacacsServerProfilesServerInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTacacsServerProfilesServerInnerWithDefaults() *TacacsServerProfilesServerInner {
	this := TacacsServerProfilesServerInner{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TacacsServerProfilesServerInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsServerProfilesServerInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TacacsServerProfilesServerInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TacacsServerProfilesServerInner) SetAddress(v string) {
	o.Address = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TacacsServerProfilesServerInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsServerProfilesServerInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TacacsServerProfilesServerInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TacacsServerProfilesServerInner) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *TacacsServerProfilesServerInner) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsServerProfilesServerInner) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *TacacsServerProfilesServerInner) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *TacacsServerProfilesServerInner) SetPort(v int32) {
	o.Port = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *TacacsServerProfilesServerInner) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsServerProfilesServerInner) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *TacacsServerProfilesServerInner) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *TacacsServerProfilesServerInner) SetSecret(v string) {
	o.Secret = &v
}

func (o TacacsServerProfilesServerInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TacacsServerProfilesServerInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TacacsServerProfilesServerInner) UnmarshalJSON(data []byte) (err error) {
	varTacacsServerProfilesServerInner := _TacacsServerProfilesServerInner{}

	err = json.Unmarshal(data, &varTacacsServerProfilesServerInner)

	if err != nil {
		return err
	}

	*o = TacacsServerProfilesServerInner(varTacacsServerProfilesServerInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "name")
		delete(additionalProperties, "port")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTacacsServerProfilesServerInner struct {
	value *TacacsServerProfilesServerInner
	isSet bool
}

func (v NullableTacacsServerProfilesServerInner) Get() *TacacsServerProfilesServerInner {
	return v.value
}

func (v *NullableTacacsServerProfilesServerInner) Set(val *TacacsServerProfilesServerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTacacsServerProfilesServerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTacacsServerProfilesServerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTacacsServerProfilesServerInner(val *TacacsServerProfilesServerInner) *NullableTacacsServerProfilesServerInner {
	return &NullableTacacsServerProfilesServerInner{value: val, isSet: true}
}

func (v NullableTacacsServerProfilesServerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTacacsServerProfilesServerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
