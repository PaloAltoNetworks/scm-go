/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the AuthenticationProfilesSingleSignOn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationProfilesSingleSignOn{}

// AuthenticationProfilesSingleSignOn struct for AuthenticationProfilesSingleSignOn
type AuthenticationProfilesSingleSignOn struct {
	KerberosKeytab       *string `json:"kerberos_keytab,omitempty"`
	Realm                *string `json:"realm,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthenticationProfilesSingleSignOn AuthenticationProfilesSingleSignOn

// NewAuthenticationProfilesSingleSignOn instantiates a new AuthenticationProfilesSingleSignOn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationProfilesSingleSignOn() *AuthenticationProfilesSingleSignOn {
	this := AuthenticationProfilesSingleSignOn{}
	return &this
}

// NewAuthenticationProfilesSingleSignOnWithDefaults instantiates a new AuthenticationProfilesSingleSignOn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationProfilesSingleSignOnWithDefaults() *AuthenticationProfilesSingleSignOn {
	this := AuthenticationProfilesSingleSignOn{}
	return &this
}

// GetKerberosKeytab returns the KerberosKeytab field value if set, zero value otherwise.
func (o *AuthenticationProfilesSingleSignOn) GetKerberosKeytab() string {
	if o == nil || IsNil(o.KerberosKeytab) {
		var ret string
		return ret
	}
	return *o.KerberosKeytab
}

// GetKerberosKeytabOk returns a tuple with the KerberosKeytab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesSingleSignOn) GetKerberosKeytabOk() (*string, bool) {
	if o == nil || IsNil(o.KerberosKeytab) {
		return nil, false
	}
	return o.KerberosKeytab, true
}

// HasKerberosKeytab returns a boolean if a field has been set.
func (o *AuthenticationProfilesSingleSignOn) HasKerberosKeytab() bool {
	if o != nil && !IsNil(o.KerberosKeytab) {
		return true
	}

	return false
}

// SetKerberosKeytab gets a reference to the given string and assigns it to the KerberosKeytab field.
func (o *AuthenticationProfilesSingleSignOn) SetKerberosKeytab(v string) {
	o.KerberosKeytab = &v
}

// GetRealm returns the Realm field value if set, zero value otherwise.
func (o *AuthenticationProfilesSingleSignOn) GetRealm() string {
	if o == nil || IsNil(o.Realm) {
		var ret string
		return ret
	}
	return *o.Realm
}

// GetRealmOk returns a tuple with the Realm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesSingleSignOn) GetRealmOk() (*string, bool) {
	if o == nil || IsNil(o.Realm) {
		return nil, false
	}
	return o.Realm, true
}

// HasRealm returns a boolean if a field has been set.
func (o *AuthenticationProfilesSingleSignOn) HasRealm() bool {
	if o != nil && !IsNil(o.Realm) {
		return true
	}

	return false
}

// SetRealm gets a reference to the given string and assigns it to the Realm field.
func (o *AuthenticationProfilesSingleSignOn) SetRealm(v string) {
	o.Realm = &v
}

func (o AuthenticationProfilesSingleSignOn) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationProfilesSingleSignOn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KerberosKeytab) {
		toSerialize["kerberos_keytab"] = o.KerberosKeytab
	}
	if !IsNil(o.Realm) {
		toSerialize["realm"] = o.Realm
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthenticationProfilesSingleSignOn) UnmarshalJSON(data []byte) (err error) {
	varAuthenticationProfilesSingleSignOn := _AuthenticationProfilesSingleSignOn{}

	err = json.Unmarshal(data, &varAuthenticationProfilesSingleSignOn)

	if err != nil {
		return err
	}

	*o = AuthenticationProfilesSingleSignOn(varAuthenticationProfilesSingleSignOn)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "kerberos_keytab")
		delete(additionalProperties, "realm")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthenticationProfilesSingleSignOn struct {
	value *AuthenticationProfilesSingleSignOn
	isSet bool
}

func (v NullableAuthenticationProfilesSingleSignOn) Get() *AuthenticationProfilesSingleSignOn {
	return v.value
}

func (v *NullableAuthenticationProfilesSingleSignOn) Set(val *AuthenticationProfilesSingleSignOn) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationProfilesSingleSignOn) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationProfilesSingleSignOn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationProfilesSingleSignOn(val *AuthenticationProfilesSingleSignOn) *NullableAuthenticationProfilesSingleSignOn {
	return &NullableAuthenticationProfilesSingleSignOn{value: val, isSet: true}
}

func (v NullableAuthenticationProfilesSingleSignOn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationProfilesSingleSignOn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
