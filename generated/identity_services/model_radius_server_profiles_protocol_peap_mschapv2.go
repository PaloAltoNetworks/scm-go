/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the RadiusServerProfilesProtocolPEAPMSCHAPv2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RadiusServerProfilesProtocolPEAPMSCHAPv2{}

// RadiusServerProfilesProtocolPEAPMSCHAPv2 struct for RadiusServerProfilesProtocolPEAPMSCHAPv2
type RadiusServerProfilesProtocolPEAPMSCHAPv2 struct {
	AllowPwdChange       *bool   `json:"allow_pwd_change,omitempty"`
	AnonOuterId          *bool   `json:"anon_outer_id,omitempty"`
	RadiusCertProfile    *string `json:"radius_cert_profile,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RadiusServerProfilesProtocolPEAPMSCHAPv2 RadiusServerProfilesProtocolPEAPMSCHAPv2

// NewRadiusServerProfilesProtocolPEAPMSCHAPv2 instantiates a new RadiusServerProfilesProtocolPEAPMSCHAPv2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadiusServerProfilesProtocolPEAPMSCHAPv2() *RadiusServerProfilesProtocolPEAPMSCHAPv2 {
	this := RadiusServerProfilesProtocolPEAPMSCHAPv2{}
	return &this
}

// NewRadiusServerProfilesProtocolPEAPMSCHAPv2WithDefaults instantiates a new RadiusServerProfilesProtocolPEAPMSCHAPv2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusServerProfilesProtocolPEAPMSCHAPv2WithDefaults() *RadiusServerProfilesProtocolPEAPMSCHAPv2 {
	this := RadiusServerProfilesProtocolPEAPMSCHAPv2{}
	return &this
}

// GetAllowPwdChange returns the AllowPwdChange field value if set, zero value otherwise.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) GetAllowPwdChange() bool {
	if o == nil || IsNil(o.AllowPwdChange) {
		var ret bool
		return ret
	}
	return *o.AllowPwdChange
}

// GetAllowPwdChangeOk returns a tuple with the AllowPwdChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) GetAllowPwdChangeOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPwdChange) {
		return nil, false
	}
	return o.AllowPwdChange, true
}

// HasAllowPwdChange returns a boolean if a field has been set.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) HasAllowPwdChange() bool {
	if o != nil && !IsNil(o.AllowPwdChange) {
		return true
	}

	return false
}

// SetAllowPwdChange gets a reference to the given bool and assigns it to the AllowPwdChange field.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) SetAllowPwdChange(v bool) {
	o.AllowPwdChange = &v
}

// GetAnonOuterId returns the AnonOuterId field value if set, zero value otherwise.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) GetAnonOuterId() bool {
	if o == nil || IsNil(o.AnonOuterId) {
		var ret bool
		return ret
	}
	return *o.AnonOuterId
}

// GetAnonOuterIdOk returns a tuple with the AnonOuterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) GetAnonOuterIdOk() (*bool, bool) {
	if o == nil || IsNil(o.AnonOuterId) {
		return nil, false
	}
	return o.AnonOuterId, true
}

// HasAnonOuterId returns a boolean if a field has been set.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) HasAnonOuterId() bool {
	if o != nil && !IsNil(o.AnonOuterId) {
		return true
	}

	return false
}

// SetAnonOuterId gets a reference to the given bool and assigns it to the AnonOuterId field.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) SetAnonOuterId(v bool) {
	o.AnonOuterId = &v
}

// GetRadiusCertProfile returns the RadiusCertProfile field value if set, zero value otherwise.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) GetRadiusCertProfile() string {
	if o == nil || IsNil(o.RadiusCertProfile) {
		var ret string
		return ret
	}
	return *o.RadiusCertProfile
}

// GetRadiusCertProfileOk returns a tuple with the RadiusCertProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) GetRadiusCertProfileOk() (*string, bool) {
	if o == nil || IsNil(o.RadiusCertProfile) {
		return nil, false
	}
	return o.RadiusCertProfile, true
}

// HasRadiusCertProfile returns a boolean if a field has been set.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) HasRadiusCertProfile() bool {
	if o != nil && !IsNil(o.RadiusCertProfile) {
		return true
	}

	return false
}

// SetRadiusCertProfile gets a reference to the given string and assigns it to the RadiusCertProfile field.
func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) SetRadiusCertProfile(v string) {
	o.RadiusCertProfile = &v
}

func (o RadiusServerProfilesProtocolPEAPMSCHAPv2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RadiusServerProfilesProtocolPEAPMSCHAPv2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowPwdChange) {
		toSerialize["allow_pwd_change"] = o.AllowPwdChange
	}
	if !IsNil(o.AnonOuterId) {
		toSerialize["anon_outer_id"] = o.AnonOuterId
	}
	if !IsNil(o.RadiusCertProfile) {
		toSerialize["radius_cert_profile"] = o.RadiusCertProfile
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RadiusServerProfilesProtocolPEAPMSCHAPv2) UnmarshalJSON(data []byte) (err error) {
	varRadiusServerProfilesProtocolPEAPMSCHAPv2 := _RadiusServerProfilesProtocolPEAPMSCHAPv2{}

	err = json.Unmarshal(data, &varRadiusServerProfilesProtocolPEAPMSCHAPv2)

	if err != nil {
		return err
	}

	*o = RadiusServerProfilesProtocolPEAPMSCHAPv2(varRadiusServerProfilesProtocolPEAPMSCHAPv2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allow_pwd_change")
		delete(additionalProperties, "anon_outer_id")
		delete(additionalProperties, "radius_cert_profile")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRadiusServerProfilesProtocolPEAPMSCHAPv2 struct {
	value *RadiusServerProfilesProtocolPEAPMSCHAPv2
	isSet bool
}

func (v NullableRadiusServerProfilesProtocolPEAPMSCHAPv2) Get() *RadiusServerProfilesProtocolPEAPMSCHAPv2 {
	return v.value
}

func (v *NullableRadiusServerProfilesProtocolPEAPMSCHAPv2) Set(val *RadiusServerProfilesProtocolPEAPMSCHAPv2) {
	v.value = val
	v.isSet = true
}

func (v NullableRadiusServerProfilesProtocolPEAPMSCHAPv2) IsSet() bool {
	return v.isSet
}

func (v *NullableRadiusServerProfilesProtocolPEAPMSCHAPv2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadiusServerProfilesProtocolPEAPMSCHAPv2(val *RadiusServerProfilesProtocolPEAPMSCHAPv2) *NullableRadiusServerProfilesProtocolPEAPMSCHAPv2 {
	return &NullableRadiusServerProfilesProtocolPEAPMSCHAPv2{value: val, isSet: true}
}

func (v NullableRadiusServerProfilesProtocolPEAPMSCHAPv2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadiusServerProfilesProtocolPEAPMSCHAPv2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
