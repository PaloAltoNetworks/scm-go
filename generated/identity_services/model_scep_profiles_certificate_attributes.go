/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the ScepProfilesCertificateAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScepProfilesCertificateAttributes{}

// ScepProfilesCertificateAttributes Subject Alternative name type
type ScepProfilesCertificateAttributes struct {
	Dnsname                   *string `json:"dnsname,omitempty"`
	Rfc822name                *string `json:"rfc822name,omitempty"`
	UniformResourceIdentifier *string `json:"uniform_resource_identifier,omitempty"`
	AdditionalProperties      map[string]interface{}
}

type _ScepProfilesCertificateAttributes ScepProfilesCertificateAttributes

// NewScepProfilesCertificateAttributes instantiates a new ScepProfilesCertificateAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScepProfilesCertificateAttributes() *ScepProfilesCertificateAttributes {
	this := ScepProfilesCertificateAttributes{}
	return &this
}

// NewScepProfilesCertificateAttributesWithDefaults instantiates a new ScepProfilesCertificateAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScepProfilesCertificateAttributesWithDefaults() *ScepProfilesCertificateAttributes {
	this := ScepProfilesCertificateAttributes{}
	return &this
}

// GetDnsname returns the Dnsname field value if set, zero value otherwise.
func (o *ScepProfilesCertificateAttributes) GetDnsname() string {
	if o == nil || IsNil(o.Dnsname) {
		var ret string
		return ret
	}
	return *o.Dnsname
}

// GetDnsnameOk returns a tuple with the Dnsname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScepProfilesCertificateAttributes) GetDnsnameOk() (*string, bool) {
	if o == nil || IsNil(o.Dnsname) {
		return nil, false
	}
	return o.Dnsname, true
}

// HasDnsname returns a boolean if a field has been set.
func (o *ScepProfilesCertificateAttributes) HasDnsname() bool {
	if o != nil && !IsNil(o.Dnsname) {
		return true
	}

	return false
}

// SetDnsname gets a reference to the given string and assigns it to the Dnsname field.
func (o *ScepProfilesCertificateAttributes) SetDnsname(v string) {
	o.Dnsname = &v
}

// GetRfc822name returns the Rfc822name field value if set, zero value otherwise.
func (o *ScepProfilesCertificateAttributes) GetRfc822name() string {
	if o == nil || IsNil(o.Rfc822name) {
		var ret string
		return ret
	}
	return *o.Rfc822name
}

// GetRfc822nameOk returns a tuple with the Rfc822name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScepProfilesCertificateAttributes) GetRfc822nameOk() (*string, bool) {
	if o == nil || IsNil(o.Rfc822name) {
		return nil, false
	}
	return o.Rfc822name, true
}

// HasRfc822name returns a boolean if a field has been set.
func (o *ScepProfilesCertificateAttributes) HasRfc822name() bool {
	if o != nil && !IsNil(o.Rfc822name) {
		return true
	}

	return false
}

// SetRfc822name gets a reference to the given string and assigns it to the Rfc822name field.
func (o *ScepProfilesCertificateAttributes) SetRfc822name(v string) {
	o.Rfc822name = &v
}

// GetUniformResourceIdentifier returns the UniformResourceIdentifier field value if set, zero value otherwise.
func (o *ScepProfilesCertificateAttributes) GetUniformResourceIdentifier() string {
	if o == nil || IsNil(o.UniformResourceIdentifier) {
		var ret string
		return ret
	}
	return *o.UniformResourceIdentifier
}

// GetUniformResourceIdentifierOk returns a tuple with the UniformResourceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScepProfilesCertificateAttributes) GetUniformResourceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.UniformResourceIdentifier) {
		return nil, false
	}
	return o.UniformResourceIdentifier, true
}

// HasUniformResourceIdentifier returns a boolean if a field has been set.
func (o *ScepProfilesCertificateAttributes) HasUniformResourceIdentifier() bool {
	if o != nil && !IsNil(o.UniformResourceIdentifier) {
		return true
	}

	return false
}

// SetUniformResourceIdentifier gets a reference to the given string and assigns it to the UniformResourceIdentifier field.
func (o *ScepProfilesCertificateAttributes) SetUniformResourceIdentifier(v string) {
	o.UniformResourceIdentifier = &v
}

func (o ScepProfilesCertificateAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScepProfilesCertificateAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dnsname) {
		toSerialize["dnsname"] = o.Dnsname
	}
	if !IsNil(o.Rfc822name) {
		toSerialize["rfc822name"] = o.Rfc822name
	}
	if !IsNil(o.UniformResourceIdentifier) {
		toSerialize["uniform_resource_identifier"] = o.UniformResourceIdentifier
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScepProfilesCertificateAttributes) UnmarshalJSON(data []byte) (err error) {
	varScepProfilesCertificateAttributes := _ScepProfilesCertificateAttributes{}

	err = json.Unmarshal(data, &varScepProfilesCertificateAttributes)

	if err != nil {
		return err
	}

	*o = ScepProfilesCertificateAttributes(varScepProfilesCertificateAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dnsname")
		delete(additionalProperties, "rfc822name")
		delete(additionalProperties, "uniform_resource_identifier")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScepProfilesCertificateAttributes struct {
	value *ScepProfilesCertificateAttributes
	isSet bool
}

func (v NullableScepProfilesCertificateAttributes) Get() *ScepProfilesCertificateAttributes {
	return v.value
}

func (v *NullableScepProfilesCertificateAttributes) Set(val *ScepProfilesCertificateAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableScepProfilesCertificateAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableScepProfilesCertificateAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScepProfilesCertificateAttributes(val *ScepProfilesCertificateAttributes) *NullableScepProfilesCertificateAttributes {
	return &NullableScepProfilesCertificateAttributes{value: val, isSet: true}
}

func (v NullableScepProfilesCertificateAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScepProfilesCertificateAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
