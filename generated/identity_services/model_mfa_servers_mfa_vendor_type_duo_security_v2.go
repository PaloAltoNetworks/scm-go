/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
	"fmt"
)

// checks if the MfaServersMfaVendorTypeDuoSecurityV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MfaServersMfaVendorTypeDuoSecurityV2{}

// MfaServersMfaVendorTypeDuoSecurityV2 Integration with [Duo Security](https://duo.com/product)
type MfaServersMfaVendorTypeDuoSecurityV2 struct {
	// Duo Security API hostname
	DuoApiHost string `json:"duo_api_host"`
	// Duo Security API base URI
	DuoBaseuri string `json:"duo_baseuri"`
	// Duo Security integration key
	DuoIntegrationKey string `json:"duo_integration_key"`
	// Duo Security secret key
	DuoSecretKey string `json:"duo_secret_key"`
	// Duo Security timeout (seconds)
	DuoTimeout           int32 `json:"duo_timeout"`
	AdditionalProperties map[string]interface{}
}

type _MfaServersMfaVendorTypeDuoSecurityV2 MfaServersMfaVendorTypeDuoSecurityV2

// NewMfaServersMfaVendorTypeDuoSecurityV2 instantiates a new MfaServersMfaVendorTypeDuoSecurityV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMfaServersMfaVendorTypeDuoSecurityV2(duoApiHost string, duoBaseuri string, duoIntegrationKey string, duoSecretKey string, duoTimeout int32) *MfaServersMfaVendorTypeDuoSecurityV2 {
	this := MfaServersMfaVendorTypeDuoSecurityV2{}
	this.DuoApiHost = duoApiHost
	this.DuoBaseuri = duoBaseuri
	this.DuoIntegrationKey = duoIntegrationKey
	this.DuoSecretKey = duoSecretKey
	this.DuoTimeout = duoTimeout
	return &this
}

// NewMfaServersMfaVendorTypeDuoSecurityV2WithDefaults instantiates a new MfaServersMfaVendorTypeDuoSecurityV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMfaServersMfaVendorTypeDuoSecurityV2WithDefaults() *MfaServersMfaVendorTypeDuoSecurityV2 {
	this := MfaServersMfaVendorTypeDuoSecurityV2{}
	var duoBaseuri string = "/auth/v2"
	this.DuoBaseuri = duoBaseuri
	var duoTimeout int32 = 30
	this.DuoTimeout = duoTimeout
	return &this
}

// GetDuoApiHost returns the DuoApiHost field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoApiHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DuoApiHost
}

// GetDuoApiHostOk returns a tuple with the DuoApiHost field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoApiHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DuoApiHost, true
}

// SetDuoApiHost sets field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) SetDuoApiHost(v string) {
	o.DuoApiHost = v
}

// GetDuoBaseuri returns the DuoBaseuri field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoBaseuri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DuoBaseuri
}

// GetDuoBaseuriOk returns a tuple with the DuoBaseuri field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoBaseuriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DuoBaseuri, true
}

// SetDuoBaseuri sets field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) SetDuoBaseuri(v string) {
	o.DuoBaseuri = v
}

// GetDuoIntegrationKey returns the DuoIntegrationKey field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoIntegrationKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DuoIntegrationKey
}

// GetDuoIntegrationKeyOk returns a tuple with the DuoIntegrationKey field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoIntegrationKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DuoIntegrationKey, true
}

// SetDuoIntegrationKey sets field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) SetDuoIntegrationKey(v string) {
	o.DuoIntegrationKey = v
}

// GetDuoSecretKey returns the DuoSecretKey field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DuoSecretKey
}

// GetDuoSecretKeyOk returns a tuple with the DuoSecretKey field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DuoSecretKey, true
}

// SetDuoSecretKey sets field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) SetDuoSecretKey(v string) {
	o.DuoSecretKey = v
}

// GetDuoTimeout returns the DuoTimeout field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DuoTimeout
}

// GetDuoTimeoutOk returns a tuple with the DuoTimeout field value
// and a boolean to check if the value has been set.
func (o *MfaServersMfaVendorTypeDuoSecurityV2) GetDuoTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DuoTimeout, true
}

// SetDuoTimeout sets field value
func (o *MfaServersMfaVendorTypeDuoSecurityV2) SetDuoTimeout(v int32) {
	o.DuoTimeout = v
}

func (o MfaServersMfaVendorTypeDuoSecurityV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MfaServersMfaVendorTypeDuoSecurityV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duo_api_host"] = o.DuoApiHost
	toSerialize["duo_baseuri"] = o.DuoBaseuri
	toSerialize["duo_integration_key"] = o.DuoIntegrationKey
	toSerialize["duo_secret_key"] = o.DuoSecretKey
	toSerialize["duo_timeout"] = o.DuoTimeout

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MfaServersMfaVendorTypeDuoSecurityV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duo_api_host",
		"duo_baseuri",
		"duo_integration_key",
		"duo_secret_key",
		"duo_timeout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMfaServersMfaVendorTypeDuoSecurityV2 := _MfaServersMfaVendorTypeDuoSecurityV2{}

	err = json.Unmarshal(data, &varMfaServersMfaVendorTypeDuoSecurityV2)

	if err != nil {
		return err
	}

	*o = MfaServersMfaVendorTypeDuoSecurityV2(varMfaServersMfaVendorTypeDuoSecurityV2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "duo_api_host")
		delete(additionalProperties, "duo_baseuri")
		delete(additionalProperties, "duo_integration_key")
		delete(additionalProperties, "duo_secret_key")
		delete(additionalProperties, "duo_timeout")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMfaServersMfaVendorTypeDuoSecurityV2 struct {
	value *MfaServersMfaVendorTypeDuoSecurityV2
	isSet bool
}

func (v NullableMfaServersMfaVendorTypeDuoSecurityV2) Get() *MfaServersMfaVendorTypeDuoSecurityV2 {
	return v.value
}

func (v *NullableMfaServersMfaVendorTypeDuoSecurityV2) Set(val *MfaServersMfaVendorTypeDuoSecurityV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMfaServersMfaVendorTypeDuoSecurityV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMfaServersMfaVendorTypeDuoSecurityV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMfaServersMfaVendorTypeDuoSecurityV2(val *MfaServersMfaVendorTypeDuoSecurityV2) *NullableMfaServersMfaVendorTypeDuoSecurityV2 {
	return &NullableMfaServersMfaVendorTypeDuoSecurityV2{value: val, isSet: true}
}

func (v NullableMfaServersMfaVendorTypeDuoSecurityV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMfaServersMfaVendorTypeDuoSecurityV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
