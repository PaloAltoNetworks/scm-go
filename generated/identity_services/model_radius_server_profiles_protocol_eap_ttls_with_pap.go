/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the RadiusServerProfilesProtocolEAPTTLSWithPAP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RadiusServerProfilesProtocolEAPTTLSWithPAP{}

// RadiusServerProfilesProtocolEAPTTLSWithPAP struct for RadiusServerProfilesProtocolEAPTTLSWithPAP
type RadiusServerProfilesProtocolEAPTTLSWithPAP struct {
	AnonOuterId          *bool   `json:"anon_outer_id,omitempty"`
	RadiusCertProfile    *string `json:"radius_cert_profile,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RadiusServerProfilesProtocolEAPTTLSWithPAP RadiusServerProfilesProtocolEAPTTLSWithPAP

// NewRadiusServerProfilesProtocolEAPTTLSWithPAP instantiates a new RadiusServerProfilesProtocolEAPTTLSWithPAP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadiusServerProfilesProtocolEAPTTLSWithPAP() *RadiusServerProfilesProtocolEAPTTLSWithPAP {
	this := RadiusServerProfilesProtocolEAPTTLSWithPAP{}
	return &this
}

// NewRadiusServerProfilesProtocolEAPTTLSWithPAPWithDefaults instantiates a new RadiusServerProfilesProtocolEAPTTLSWithPAP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusServerProfilesProtocolEAPTTLSWithPAPWithDefaults() *RadiusServerProfilesProtocolEAPTTLSWithPAP {
	this := RadiusServerProfilesProtocolEAPTTLSWithPAP{}
	return &this
}

// GetAnonOuterId returns the AnonOuterId field value if set, zero value otherwise.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) GetAnonOuterId() bool {
	if o == nil || IsNil(o.AnonOuterId) {
		var ret bool
		return ret
	}
	return *o.AnonOuterId
}

// GetAnonOuterIdOk returns a tuple with the AnonOuterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) GetAnonOuterIdOk() (*bool, bool) {
	if o == nil || IsNil(o.AnonOuterId) {
		return nil, false
	}
	return o.AnonOuterId, true
}

// HasAnonOuterId returns a boolean if a field has been set.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) HasAnonOuterId() bool {
	if o != nil && !IsNil(o.AnonOuterId) {
		return true
	}

	return false
}

// SetAnonOuterId gets a reference to the given bool and assigns it to the AnonOuterId field.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) SetAnonOuterId(v bool) {
	o.AnonOuterId = &v
}

// GetRadiusCertProfile returns the RadiusCertProfile field value if set, zero value otherwise.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) GetRadiusCertProfile() string {
	if o == nil || IsNil(o.RadiusCertProfile) {
		var ret string
		return ret
	}
	return *o.RadiusCertProfile
}

// GetRadiusCertProfileOk returns a tuple with the RadiusCertProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) GetRadiusCertProfileOk() (*string, bool) {
	if o == nil || IsNil(o.RadiusCertProfile) {
		return nil, false
	}
	return o.RadiusCertProfile, true
}

// HasRadiusCertProfile returns a boolean if a field has been set.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) HasRadiusCertProfile() bool {
	if o != nil && !IsNil(o.RadiusCertProfile) {
		return true
	}

	return false
}

// SetRadiusCertProfile gets a reference to the given string and assigns it to the RadiusCertProfile field.
func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) SetRadiusCertProfile(v string) {
	o.RadiusCertProfile = &v
}

func (o RadiusServerProfilesProtocolEAPTTLSWithPAP) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RadiusServerProfilesProtocolEAPTTLSWithPAP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnonOuterId) {
		toSerialize["anon_outer_id"] = o.AnonOuterId
	}
	if !IsNil(o.RadiusCertProfile) {
		toSerialize["radius_cert_profile"] = o.RadiusCertProfile
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RadiusServerProfilesProtocolEAPTTLSWithPAP) UnmarshalJSON(data []byte) (err error) {
	varRadiusServerProfilesProtocolEAPTTLSWithPAP := _RadiusServerProfilesProtocolEAPTTLSWithPAP{}

	err = json.Unmarshal(data, &varRadiusServerProfilesProtocolEAPTTLSWithPAP)

	if err != nil {
		return err
	}

	*o = RadiusServerProfilesProtocolEAPTTLSWithPAP(varRadiusServerProfilesProtocolEAPTTLSWithPAP)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "anon_outer_id")
		delete(additionalProperties, "radius_cert_profile")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRadiusServerProfilesProtocolEAPTTLSWithPAP struct {
	value *RadiusServerProfilesProtocolEAPTTLSWithPAP
	isSet bool
}

func (v NullableRadiusServerProfilesProtocolEAPTTLSWithPAP) Get() *RadiusServerProfilesProtocolEAPTTLSWithPAP {
	return v.value
}

func (v *NullableRadiusServerProfilesProtocolEAPTTLSWithPAP) Set(val *RadiusServerProfilesProtocolEAPTTLSWithPAP) {
	v.value = val
	v.isSet = true
}

func (v NullableRadiusServerProfilesProtocolEAPTTLSWithPAP) IsSet() bool {
	return v.isSet
}

func (v *NullableRadiusServerProfilesProtocolEAPTTLSWithPAP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadiusServerProfilesProtocolEAPTTLSWithPAP(val *RadiusServerProfilesProtocolEAPTTLSWithPAP) *NullableRadiusServerProfilesProtocolEAPTTLSWithPAP {
	return &NullableRadiusServerProfilesProtocolEAPTTLSWithPAP{value: val, isSet: true}
}

func (v NullableRadiusServerProfilesProtocolEAPTTLSWithPAP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadiusServerProfilesProtocolEAPTTLSWithPAP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
