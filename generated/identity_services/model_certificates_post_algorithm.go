/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the CertificatesPostAlgorithm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertificatesPostAlgorithm{}

// CertificatesPostAlgorithm Encryption algorithm
type CertificatesPostAlgorithm struct {
	EcdsaNumberOfBits    *float32 `json:"ecdsa_number_of_bits,omitempty"`
	RsaNumberOfBits      *float32 `json:"rsa_number_of_bits,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CertificatesPostAlgorithm CertificatesPostAlgorithm

// NewCertificatesPostAlgorithm instantiates a new CertificatesPostAlgorithm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificatesPostAlgorithm() *CertificatesPostAlgorithm {
	this := CertificatesPostAlgorithm{}
	return &this
}

// NewCertificatesPostAlgorithmWithDefaults instantiates a new CertificatesPostAlgorithm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesPostAlgorithmWithDefaults() *CertificatesPostAlgorithm {
	this := CertificatesPostAlgorithm{}
	return &this
}

// GetEcdsaNumberOfBits returns the EcdsaNumberOfBits field value if set, zero value otherwise.
func (o *CertificatesPostAlgorithm) GetEcdsaNumberOfBits() float32 {
	if o == nil || IsNil(o.EcdsaNumberOfBits) {
		var ret float32
		return ret
	}
	return *o.EcdsaNumberOfBits
}

// GetEcdsaNumberOfBitsOk returns a tuple with the EcdsaNumberOfBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificatesPostAlgorithm) GetEcdsaNumberOfBitsOk() (*float32, bool) {
	if o == nil || IsNil(o.EcdsaNumberOfBits) {
		return nil, false
	}
	return o.EcdsaNumberOfBits, true
}

// HasEcdsaNumberOfBits returns a boolean if a field has been set.
func (o *CertificatesPostAlgorithm) HasEcdsaNumberOfBits() bool {
	if o != nil && !IsNil(o.EcdsaNumberOfBits) {
		return true
	}

	return false
}

// SetEcdsaNumberOfBits gets a reference to the given float32 and assigns it to the EcdsaNumberOfBits field.
func (o *CertificatesPostAlgorithm) SetEcdsaNumberOfBits(v float32) {
	o.EcdsaNumberOfBits = &v
}

// GetRsaNumberOfBits returns the RsaNumberOfBits field value if set, zero value otherwise.
func (o *CertificatesPostAlgorithm) GetRsaNumberOfBits() float32 {
	if o == nil || IsNil(o.RsaNumberOfBits) {
		var ret float32
		return ret
	}
	return *o.RsaNumberOfBits
}

// GetRsaNumberOfBitsOk returns a tuple with the RsaNumberOfBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificatesPostAlgorithm) GetRsaNumberOfBitsOk() (*float32, bool) {
	if o == nil || IsNil(o.RsaNumberOfBits) {
		return nil, false
	}
	return o.RsaNumberOfBits, true
}

// HasRsaNumberOfBits returns a boolean if a field has been set.
func (o *CertificatesPostAlgorithm) HasRsaNumberOfBits() bool {
	if o != nil && !IsNil(o.RsaNumberOfBits) {
		return true
	}

	return false
}

// SetRsaNumberOfBits gets a reference to the given float32 and assigns it to the RsaNumberOfBits field.
func (o *CertificatesPostAlgorithm) SetRsaNumberOfBits(v float32) {
	o.RsaNumberOfBits = &v
}

func (o CertificatesPostAlgorithm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CertificatesPostAlgorithm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EcdsaNumberOfBits) {
		toSerialize["ecdsa_number_of_bits"] = o.EcdsaNumberOfBits
	}
	if !IsNil(o.RsaNumberOfBits) {
		toSerialize["rsa_number_of_bits"] = o.RsaNumberOfBits
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CertificatesPostAlgorithm) UnmarshalJSON(data []byte) (err error) {
	varCertificatesPostAlgorithm := _CertificatesPostAlgorithm{}

	err = json.Unmarshal(data, &varCertificatesPostAlgorithm)

	if err != nil {
		return err
	}

	*o = CertificatesPostAlgorithm(varCertificatesPostAlgorithm)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ecdsa_number_of_bits")
		delete(additionalProperties, "rsa_number_of_bits")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCertificatesPostAlgorithm struct {
	value *CertificatesPostAlgorithm
	isSet bool
}

func (v NullableCertificatesPostAlgorithm) Get() *CertificatesPostAlgorithm {
	return v.value
}

func (v *NullableCertificatesPostAlgorithm) Set(val *CertificatesPostAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificatesPostAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificatesPostAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificatesPostAlgorithm(val *CertificatesPostAlgorithm) *NullableCertificatesPostAlgorithm {
	return &NullableCertificatesPostAlgorithm{value: val, isSet: true}
}

func (v NullableCertificatesPostAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificatesPostAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
