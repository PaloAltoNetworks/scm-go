/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
)

// checks if the AuthenticationProfilesMultiFactorAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationProfilesMultiFactorAuth{}

// AuthenticationProfilesMultiFactorAuth struct for AuthenticationProfilesMultiFactorAuth
type AuthenticationProfilesMultiFactorAuth struct {
	Factors              []string `json:"factors,omitempty"`
	MfaEnable            *bool    `json:"mfa_enable,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthenticationProfilesMultiFactorAuth AuthenticationProfilesMultiFactorAuth

// NewAuthenticationProfilesMultiFactorAuth instantiates a new AuthenticationProfilesMultiFactorAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationProfilesMultiFactorAuth() *AuthenticationProfilesMultiFactorAuth {
	this := AuthenticationProfilesMultiFactorAuth{}
	return &this
}

// NewAuthenticationProfilesMultiFactorAuthWithDefaults instantiates a new AuthenticationProfilesMultiFactorAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationProfilesMultiFactorAuthWithDefaults() *AuthenticationProfilesMultiFactorAuth {
	this := AuthenticationProfilesMultiFactorAuth{}
	return &this
}

// GetFactors returns the Factors field value if set, zero value otherwise.
func (o *AuthenticationProfilesMultiFactorAuth) GetFactors() []string {
	if o == nil || IsNil(o.Factors) {
		var ret []string
		return ret
	}
	return o.Factors
}

// GetFactorsOk returns a tuple with the Factors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMultiFactorAuth) GetFactorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Factors) {
		return nil, false
	}
	return o.Factors, true
}

// HasFactors returns a boolean if a field has been set.
func (o *AuthenticationProfilesMultiFactorAuth) HasFactors() bool {
	if o != nil && !IsNil(o.Factors) {
		return true
	}

	return false
}

// SetFactors gets a reference to the given []string and assigns it to the Factors field.
func (o *AuthenticationProfilesMultiFactorAuth) SetFactors(v []string) {
	o.Factors = v
}

// GetMfaEnable returns the MfaEnable field value if set, zero value otherwise.
func (o *AuthenticationProfilesMultiFactorAuth) GetMfaEnable() bool {
	if o == nil || IsNil(o.MfaEnable) {
		var ret bool
		return ret
	}
	return *o.MfaEnable
}

// GetMfaEnableOk returns a tuple with the MfaEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProfilesMultiFactorAuth) GetMfaEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.MfaEnable) {
		return nil, false
	}
	return o.MfaEnable, true
}

// HasMfaEnable returns a boolean if a field has been set.
func (o *AuthenticationProfilesMultiFactorAuth) HasMfaEnable() bool {
	if o != nil && !IsNil(o.MfaEnable) {
		return true
	}

	return false
}

// SetMfaEnable gets a reference to the given bool and assigns it to the MfaEnable field.
func (o *AuthenticationProfilesMultiFactorAuth) SetMfaEnable(v bool) {
	o.MfaEnable = &v
}

func (o AuthenticationProfilesMultiFactorAuth) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationProfilesMultiFactorAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Factors) {
		toSerialize["factors"] = o.Factors
	}
	if !IsNil(o.MfaEnable) {
		toSerialize["mfa_enable"] = o.MfaEnable
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthenticationProfilesMultiFactorAuth) UnmarshalJSON(data []byte) (err error) {
	varAuthenticationProfilesMultiFactorAuth := _AuthenticationProfilesMultiFactorAuth{}

	err = json.Unmarshal(data, &varAuthenticationProfilesMultiFactorAuth)

	if err != nil {
		return err
	}

	*o = AuthenticationProfilesMultiFactorAuth(varAuthenticationProfilesMultiFactorAuth)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "factors")
		delete(additionalProperties, "mfa_enable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthenticationProfilesMultiFactorAuth struct {
	value *AuthenticationProfilesMultiFactorAuth
	isSet bool
}

func (v NullableAuthenticationProfilesMultiFactorAuth) Get() *AuthenticationProfilesMultiFactorAuth {
	return v.value
}

func (v *NullableAuthenticationProfilesMultiFactorAuth) Set(val *AuthenticationProfilesMultiFactorAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationProfilesMultiFactorAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationProfilesMultiFactorAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationProfilesMultiFactorAuth(val *AuthenticationProfilesMultiFactorAuth) *NullableAuthenticationProfilesMultiFactorAuth {
	return &NullableAuthenticationProfilesMultiFactorAuth{value: val, isSet: true}
}

func (v NullableAuthenticationProfilesMultiFactorAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationProfilesMultiFactorAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
