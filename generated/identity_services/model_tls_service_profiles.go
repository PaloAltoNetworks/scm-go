/*
Identity Services

These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identity_services

import (
	"encoding/json"
	"fmt"
)

// checks if the TlsServiceProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsServiceProfiles{}

// TlsServiceProfiles struct for TlsServiceProfiles
type TlsServiceProfiles struct {
	// Certificate name
	Certificate string `json:"certificate"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// The UUID of the TLS service profile
	Id string `json:"id"`
	// TLS service profile name. The value is `muCustomDomainSSLProfile` when it is used on mobile-agent infra settings.
	Name             string                             `json:"name" validate:"regexp=^[a-zA-Z0-9._-]+$"`
	ProtocolSettings TlsServiceProfilesProtocolSettings `json:"protocol_settings"`
	// The snippet in which the resource is defined
	Snippet              *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	AdditionalProperties map[string]interface{}
}

type _TlsServiceProfiles TlsServiceProfiles

// NewTlsServiceProfiles instantiates a new TlsServiceProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsServiceProfiles(certificate string, id string, name string, protocolSettings TlsServiceProfilesProtocolSettings) *TlsServiceProfiles {
	this := TlsServiceProfiles{}
	this.Certificate = certificate
	this.Id = id
	this.Name = name
	this.ProtocolSettings = protocolSettings
	return &this
}

// NewTlsServiceProfilesWithDefaults instantiates a new TlsServiceProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsServiceProfilesWithDefaults() *TlsServiceProfiles {
	this := TlsServiceProfiles{}
	return &this
}

// GetCertificate returns the Certificate field value
func (o *TlsServiceProfiles) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *TlsServiceProfiles) SetCertificate(v string) {
	o.Certificate = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *TlsServiceProfiles) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *TlsServiceProfiles) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *TlsServiceProfiles) SetDevice(v string) {
	o.Device = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *TlsServiceProfiles) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *TlsServiceProfiles) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *TlsServiceProfiles) SetFolder(v string) {
	o.Folder = &v
}

// GetId returns the Id field value
func (o *TlsServiceProfiles) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TlsServiceProfiles) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TlsServiceProfiles) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TlsServiceProfiles) SetName(v string) {
	o.Name = v
}

// GetProtocolSettings returns the ProtocolSettings field value
func (o *TlsServiceProfiles) GetProtocolSettings() TlsServiceProfilesProtocolSettings {
	if o == nil {
		var ret TlsServiceProfilesProtocolSettings
		return ret
	}

	return o.ProtocolSettings
}

// GetProtocolSettingsOk returns a tuple with the ProtocolSettings field value
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetProtocolSettingsOk() (*TlsServiceProfilesProtocolSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolSettings, true
}

// SetProtocolSettings sets field value
func (o *TlsServiceProfiles) SetProtocolSettings(v TlsServiceProfilesProtocolSettings) {
	o.ProtocolSettings = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *TlsServiceProfiles) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsServiceProfiles) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *TlsServiceProfiles) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *TlsServiceProfiles) SetSnippet(v string) {
	o.Snippet = &v
}

func (o TlsServiceProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsServiceProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["certificate"] = o.Certificate
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["protocol_settings"] = o.ProtocolSettings
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TlsServiceProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"certificate",
		"id",
		"name",
		"protocol_settings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTlsServiceProfiles := _TlsServiceProfiles{}

	err = json.Unmarshal(data, &varTlsServiceProfiles)

	if err != nil {
		return err
	}

	*o = TlsServiceProfiles(varTlsServiceProfiles)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "device")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "protocol_settings")
		delete(additionalProperties, "snippet")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTlsServiceProfiles struct {
	value *TlsServiceProfiles
	isSet bool
}

func (v NullableTlsServiceProfiles) Get() *TlsServiceProfiles {
	return v.value
}

func (v *NullableTlsServiceProfiles) Set(val *TlsServiceProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsServiceProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsServiceProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsServiceProfiles(val *TlsServiceProfiles) *NullableTlsServiceProfiles {
	return &NullableTlsServiceProfiles{value: val, isSet: true}
}

func (v NullableTlsServiceProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsServiceProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
