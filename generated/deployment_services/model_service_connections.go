/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
	"fmt"
)

// checks if the ServiceConnections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceConnections{}

// ServiceConnections struct for ServiceConnections
type ServiceConnections struct {
	BackupSC *string                    `json:"backup_SC,omitempty"`
	BgpPeer  *ServiceConnectionsBgpPeer `json:"bgp_peer,omitempty"`
	// The UUID of the service connection
	Id          string `json:"id"`
	IpsecTunnel string `json:"ipsec_tunnel"`
	// The name of the service connection
	Name                 string                      `json:"name"`
	NatPool              *string                     `json:"nat_pool,omitempty"`
	NoExportCommunity    *string                     `json:"no_export_community,omitempty"`
	OnboardingType       *string                     `json:"onboarding_type,omitempty"`
	Protocol             *ServiceConnectionsProtocol `json:"protocol,omitempty"`
	Qos                  *ServiceConnectionsQos      `json:"qos,omitempty"`
	Region               string                      `json:"region"`
	SecondaryIpsecTunnel *string                     `json:"secondary_ipsec_tunnel,omitempty"`
	SourceNat            *bool                       `json:"source_nat,omitempty"`
	Subnets              []string                    `json:"subnets,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceConnections ServiceConnections

// NewServiceConnections instantiates a new ServiceConnections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceConnections(id string, ipsecTunnel string, name string, region string) *ServiceConnections {
	this := ServiceConnections{}
	this.Id = id
	this.IpsecTunnel = ipsecTunnel
	this.Name = name
	var onboardingType string = "classic"
	this.OnboardingType = &onboardingType
	this.Region = region
	return &this
}

// NewServiceConnectionsWithDefaults instantiates a new ServiceConnections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceConnectionsWithDefaults() *ServiceConnections {
	this := ServiceConnections{}
	var onboardingType string = "classic"
	this.OnboardingType = &onboardingType
	return &this
}

// GetBackupSC returns the BackupSC field value if set, zero value otherwise.
func (o *ServiceConnections) GetBackupSC() string {
	if o == nil || IsNil(o.BackupSC) {
		var ret string
		return ret
	}
	return *o.BackupSC
}

// GetBackupSCOk returns a tuple with the BackupSC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetBackupSCOk() (*string, bool) {
	if o == nil || IsNil(o.BackupSC) {
		return nil, false
	}
	return o.BackupSC, true
}

// HasBackupSC returns a boolean if a field has been set.
func (o *ServiceConnections) HasBackupSC() bool {
	if o != nil && !IsNil(o.BackupSC) {
		return true
	}

	return false
}

// SetBackupSC gets a reference to the given string and assigns it to the BackupSC field.
func (o *ServiceConnections) SetBackupSC(v string) {
	o.BackupSC = &v
}

// GetBgpPeer returns the BgpPeer field value if set, zero value otherwise.
func (o *ServiceConnections) GetBgpPeer() ServiceConnectionsBgpPeer {
	if o == nil || IsNil(o.BgpPeer) {
		var ret ServiceConnectionsBgpPeer
		return ret
	}
	return *o.BgpPeer
}

// GetBgpPeerOk returns a tuple with the BgpPeer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetBgpPeerOk() (*ServiceConnectionsBgpPeer, bool) {
	if o == nil || IsNil(o.BgpPeer) {
		return nil, false
	}
	return o.BgpPeer, true
}

// HasBgpPeer returns a boolean if a field has been set.
func (o *ServiceConnections) HasBgpPeer() bool {
	if o != nil && !IsNil(o.BgpPeer) {
		return true
	}

	return false
}

// SetBgpPeer gets a reference to the given ServiceConnectionsBgpPeer and assigns it to the BgpPeer field.
func (o *ServiceConnections) SetBgpPeer(v ServiceConnectionsBgpPeer) {
	o.BgpPeer = &v
}

// GetId returns the Id field value
func (o *ServiceConnections) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServiceConnections) SetId(v string) {
	o.Id = v
}

// GetIpsecTunnel returns the IpsecTunnel field value
func (o *ServiceConnections) GetIpsecTunnel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpsecTunnel
}

// GetIpsecTunnelOk returns a tuple with the IpsecTunnel field value
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetIpsecTunnelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpsecTunnel, true
}

// SetIpsecTunnel sets field value
func (o *ServiceConnections) SetIpsecTunnel(v string) {
	o.IpsecTunnel = v
}

// GetName returns the Name field value
func (o *ServiceConnections) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceConnections) SetName(v string) {
	o.Name = v
}

// GetNatPool returns the NatPool field value if set, zero value otherwise.
func (o *ServiceConnections) GetNatPool() string {
	if o == nil || IsNil(o.NatPool) {
		var ret string
		return ret
	}
	return *o.NatPool
}

// GetNatPoolOk returns a tuple with the NatPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetNatPoolOk() (*string, bool) {
	if o == nil || IsNil(o.NatPool) {
		return nil, false
	}
	return o.NatPool, true
}

// HasNatPool returns a boolean if a field has been set.
func (o *ServiceConnections) HasNatPool() bool {
	if o != nil && !IsNil(o.NatPool) {
		return true
	}

	return false
}

// SetNatPool gets a reference to the given string and assigns it to the NatPool field.
func (o *ServiceConnections) SetNatPool(v string) {
	o.NatPool = &v
}

// GetNoExportCommunity returns the NoExportCommunity field value if set, zero value otherwise.
func (o *ServiceConnections) GetNoExportCommunity() string {
	if o == nil || IsNil(o.NoExportCommunity) {
		var ret string
		return ret
	}
	return *o.NoExportCommunity
}

// GetNoExportCommunityOk returns a tuple with the NoExportCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetNoExportCommunityOk() (*string, bool) {
	if o == nil || IsNil(o.NoExportCommunity) {
		return nil, false
	}
	return o.NoExportCommunity, true
}

// HasNoExportCommunity returns a boolean if a field has been set.
func (o *ServiceConnections) HasNoExportCommunity() bool {
	if o != nil && !IsNil(o.NoExportCommunity) {
		return true
	}

	return false
}

// SetNoExportCommunity gets a reference to the given string and assigns it to the NoExportCommunity field.
func (o *ServiceConnections) SetNoExportCommunity(v string) {
	o.NoExportCommunity = &v
}

// GetOnboardingType returns the OnboardingType field value if set, zero value otherwise.
func (o *ServiceConnections) GetOnboardingType() string {
	if o == nil || IsNil(o.OnboardingType) {
		var ret string
		return ret
	}
	return *o.OnboardingType
}

// GetOnboardingTypeOk returns a tuple with the OnboardingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetOnboardingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OnboardingType) {
		return nil, false
	}
	return o.OnboardingType, true
}

// HasOnboardingType returns a boolean if a field has been set.
func (o *ServiceConnections) HasOnboardingType() bool {
	if o != nil && !IsNil(o.OnboardingType) {
		return true
	}

	return false
}

// SetOnboardingType gets a reference to the given string and assigns it to the OnboardingType field.
func (o *ServiceConnections) SetOnboardingType(v string) {
	o.OnboardingType = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ServiceConnections) GetProtocol() ServiceConnectionsProtocol {
	if o == nil || IsNil(o.Protocol) {
		var ret ServiceConnectionsProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetProtocolOk() (*ServiceConnectionsProtocol, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ServiceConnections) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given ServiceConnectionsProtocol and assigns it to the Protocol field.
func (o *ServiceConnections) SetProtocol(v ServiceConnectionsProtocol) {
	o.Protocol = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *ServiceConnections) GetQos() ServiceConnectionsQos {
	if o == nil || IsNil(o.Qos) {
		var ret ServiceConnectionsQos
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetQosOk() (*ServiceConnectionsQos, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *ServiceConnections) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given ServiceConnectionsQos and assigns it to the Qos field.
func (o *ServiceConnections) SetQos(v ServiceConnectionsQos) {
	o.Qos = &v
}

// GetRegion returns the Region field value
func (o *ServiceConnections) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ServiceConnections) SetRegion(v string) {
	o.Region = v
}

// GetSecondaryIpsecTunnel returns the SecondaryIpsecTunnel field value if set, zero value otherwise.
func (o *ServiceConnections) GetSecondaryIpsecTunnel() string {
	if o == nil || IsNil(o.SecondaryIpsecTunnel) {
		var ret string
		return ret
	}
	return *o.SecondaryIpsecTunnel
}

// GetSecondaryIpsecTunnelOk returns a tuple with the SecondaryIpsecTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetSecondaryIpsecTunnelOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryIpsecTunnel) {
		return nil, false
	}
	return o.SecondaryIpsecTunnel, true
}

// HasSecondaryIpsecTunnel returns a boolean if a field has been set.
func (o *ServiceConnections) HasSecondaryIpsecTunnel() bool {
	if o != nil && !IsNil(o.SecondaryIpsecTunnel) {
		return true
	}

	return false
}

// SetSecondaryIpsecTunnel gets a reference to the given string and assigns it to the SecondaryIpsecTunnel field.
func (o *ServiceConnections) SetSecondaryIpsecTunnel(v string) {
	o.SecondaryIpsecTunnel = &v
}

// GetSourceNat returns the SourceNat field value if set, zero value otherwise.
func (o *ServiceConnections) GetSourceNat() bool {
	if o == nil || IsNil(o.SourceNat) {
		var ret bool
		return ret
	}
	return *o.SourceNat
}

// GetSourceNatOk returns a tuple with the SourceNat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetSourceNatOk() (*bool, bool) {
	if o == nil || IsNil(o.SourceNat) {
		return nil, false
	}
	return o.SourceNat, true
}

// HasSourceNat returns a boolean if a field has been set.
func (o *ServiceConnections) HasSourceNat() bool {
	if o != nil && !IsNil(o.SourceNat) {
		return true
	}

	return false
}

// SetSourceNat gets a reference to the given bool and assigns it to the SourceNat field.
func (o *ServiceConnections) SetSourceNat(v bool) {
	o.SourceNat = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *ServiceConnections) GetSubnets() []string {
	if o == nil || IsNil(o.Subnets) {
		var ret []string
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnections) GetSubnetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *ServiceConnections) HasSubnets() bool {
	if o != nil && !IsNil(o.Subnets) {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []string and assigns it to the Subnets field.
func (o *ServiceConnections) SetSubnets(v []string) {
	o.Subnets = v
}

func (o ServiceConnections) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceConnections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupSC) {
		toSerialize["backup_SC"] = o.BackupSC
	}
	if !IsNil(o.BgpPeer) {
		toSerialize["bgp_peer"] = o.BgpPeer
	}
	toSerialize["id"] = o.Id
	toSerialize["ipsec_tunnel"] = o.IpsecTunnel
	toSerialize["name"] = o.Name
	if !IsNil(o.NatPool) {
		toSerialize["nat_pool"] = o.NatPool
	}
	if !IsNil(o.NoExportCommunity) {
		toSerialize["no_export_community"] = o.NoExportCommunity
	}
	if !IsNil(o.OnboardingType) {
		toSerialize["onboarding_type"] = o.OnboardingType
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	toSerialize["region"] = o.Region
	if !IsNil(o.SecondaryIpsecTunnel) {
		toSerialize["secondary_ipsec_tunnel"] = o.SecondaryIpsecTunnel
	}
	if !IsNil(o.SourceNat) {
		toSerialize["source_nat"] = o.SourceNat
	}
	if !IsNil(o.Subnets) {
		toSerialize["subnets"] = o.Subnets
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceConnections) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"ipsec_tunnel",
		"name",
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceConnections := _ServiceConnections{}

	err = json.Unmarshal(data, &varServiceConnections)

	if err != nil {
		return err
	}

	*o = ServiceConnections(varServiceConnections)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "backup_SC")
		delete(additionalProperties, "bgp_peer")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ipsec_tunnel")
		delete(additionalProperties, "name")
		delete(additionalProperties, "nat_pool")
		delete(additionalProperties, "no_export_community")
		delete(additionalProperties, "onboarding_type")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "qos")
		delete(additionalProperties, "region")
		delete(additionalProperties, "secondary_ipsec_tunnel")
		delete(additionalProperties, "source_nat")
		delete(additionalProperties, "subnets")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceConnections struct {
	value *ServiceConnections
	isSet bool
}

func (v NullableServiceConnections) Get() *ServiceConnections {
	return v.value
}

func (v *NullableServiceConnections) Set(val *ServiceConnections) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceConnections) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceConnections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceConnections(val *ServiceConnections) *NullableServiceConnections {
	return &NullableServiceConnections{value: val, isSet: true}
}

func (v NullableServiceConnections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceConnections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
