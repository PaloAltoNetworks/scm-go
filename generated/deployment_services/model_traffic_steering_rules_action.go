/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
)

// checks if the TrafficSteeringRulesAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrafficSteeringRulesAction{}

// TrafficSteeringRulesAction struct for TrafficSteeringRulesAction
type TrafficSteeringRulesAction struct {
	Forward              *TrafficSteeringRulesActionForward `json:"forward,omitempty"`
	NoPbf                map[string]interface{}             `json:"no-pbf,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TrafficSteeringRulesAction TrafficSteeringRulesAction

// NewTrafficSteeringRulesAction instantiates a new TrafficSteeringRulesAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrafficSteeringRulesAction() *TrafficSteeringRulesAction {
	this := TrafficSteeringRulesAction{}
	return &this
}

// NewTrafficSteeringRulesActionWithDefaults instantiates a new TrafficSteeringRulesAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficSteeringRulesActionWithDefaults() *TrafficSteeringRulesAction {
	this := TrafficSteeringRulesAction{}
	return &this
}

// GetForward returns the Forward field value if set, zero value otherwise.
func (o *TrafficSteeringRulesAction) GetForward() TrafficSteeringRulesActionForward {
	if o == nil || IsNil(o.Forward) {
		var ret TrafficSteeringRulesActionForward
		return ret
	}
	return *o.Forward
}

// GetForwardOk returns a tuple with the Forward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficSteeringRulesAction) GetForwardOk() (*TrafficSteeringRulesActionForward, bool) {
	if o == nil || IsNil(o.Forward) {
		return nil, false
	}
	return o.Forward, true
}

// HasForward returns a boolean if a field has been set.
func (o *TrafficSteeringRulesAction) HasForward() bool {
	if o != nil && !IsNil(o.Forward) {
		return true
	}

	return false
}

// SetForward gets a reference to the given TrafficSteeringRulesActionForward and assigns it to the Forward field.
func (o *TrafficSteeringRulesAction) SetForward(v TrafficSteeringRulesActionForward) {
	o.Forward = &v
}

// GetNoPbf returns the NoPbf field value if set, zero value otherwise.
func (o *TrafficSteeringRulesAction) GetNoPbf() map[string]interface{} {
	if o == nil || IsNil(o.NoPbf) {
		var ret map[string]interface{}
		return ret
	}
	return o.NoPbf
}

// GetNoPbfOk returns a tuple with the NoPbf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficSteeringRulesAction) GetNoPbfOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NoPbf) {
		return map[string]interface{}{}, false
	}
	return o.NoPbf, true
}

// HasNoPbf returns a boolean if a field has been set.
func (o *TrafficSteeringRulesAction) HasNoPbf() bool {
	if o != nil && !IsNil(o.NoPbf) {
		return true
	}

	return false
}

// SetNoPbf gets a reference to the given map[string]interface{} and assigns it to the NoPbf field.
func (o *TrafficSteeringRulesAction) SetNoPbf(v map[string]interface{}) {
	o.NoPbf = v
}

func (o TrafficSteeringRulesAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrafficSteeringRulesAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Forward) {
		toSerialize["forward"] = o.Forward
	}
	if !IsNil(o.NoPbf) {
		toSerialize["no-pbf"] = o.NoPbf
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TrafficSteeringRulesAction) UnmarshalJSON(data []byte) (err error) {
	varTrafficSteeringRulesAction := _TrafficSteeringRulesAction{}

	err = json.Unmarshal(data, &varTrafficSteeringRulesAction)

	if err != nil {
		return err
	}

	*o = TrafficSteeringRulesAction(varTrafficSteeringRulesAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "forward")
		delete(additionalProperties, "no-pbf")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTrafficSteeringRulesAction struct {
	value *TrafficSteeringRulesAction
	isSet bool
}

func (v NullableTrafficSteeringRulesAction) Get() *TrafficSteeringRulesAction {
	return v.value
}

func (v *NullableTrafficSteeringRulesAction) Set(val *TrafficSteeringRulesAction) {
	v.value = val
	v.isSet = true
}

func (v NullableTrafficSteeringRulesAction) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficSteeringRulesAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficSteeringRulesAction(val *TrafficSteeringRulesAction) *NullableTrafficSteeringRulesAction {
	return &NullableTrafficSteeringRulesAction{value: val, isSet: true}
}

func (v NullableTrafficSteeringRulesAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficSteeringRulesAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
