/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
)

// checks if the EditSharedInfrastructureSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditSharedInfrastructureSettings{}

// EditSharedInfrastructureSettings struct for EditSharedInfrastructureSettings
type EditSharedInfrastructureSettings struct {
	ConnectorApplicationBlocks *EditSharedInfrastructureSettingsConnectorApplicationBlocks `json:"connector-application-blocks,omitempty"`
	ConnectorConnectorBlocks   *EditSharedInfrastructureSettingsConnectorConnectorBlocks   `json:"connector-connector-blocks,omitempty"`
	EgressIpNotificationUrl    *string                                                     `json:"egress_ip_notification_url,omitempty"`
	InfraBgpAs                 *string                                                     `json:"infra_bgp_as,omitempty"`
	InfrastructureSubnet       *string                                                     `json:"infrastructure_subnet,omitempty"`
	InfrastructureSubnetIpv6   *string                                                     `json:"infrastructure_subnet_ipv6,omitempty"`
	AdditionalProperties       map[string]interface{}
}

type _EditSharedInfrastructureSettings EditSharedInfrastructureSettings

// NewEditSharedInfrastructureSettings instantiates a new EditSharedInfrastructureSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditSharedInfrastructureSettings() *EditSharedInfrastructureSettings {
	this := EditSharedInfrastructureSettings{}
	return &this
}

// NewEditSharedInfrastructureSettingsWithDefaults instantiates a new EditSharedInfrastructureSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditSharedInfrastructureSettingsWithDefaults() *EditSharedInfrastructureSettings {
	this := EditSharedInfrastructureSettings{}
	return &this
}

// GetConnectorApplicationBlocks returns the ConnectorApplicationBlocks field value if set, zero value otherwise.
func (o *EditSharedInfrastructureSettings) GetConnectorApplicationBlocks() EditSharedInfrastructureSettingsConnectorApplicationBlocks {
	if o == nil || IsNil(o.ConnectorApplicationBlocks) {
		var ret EditSharedInfrastructureSettingsConnectorApplicationBlocks
		return ret
	}
	return *o.ConnectorApplicationBlocks
}

// GetConnectorApplicationBlocksOk returns a tuple with the ConnectorApplicationBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSharedInfrastructureSettings) GetConnectorApplicationBlocksOk() (*EditSharedInfrastructureSettingsConnectorApplicationBlocks, bool) {
	if o == nil || IsNil(o.ConnectorApplicationBlocks) {
		return nil, false
	}
	return o.ConnectorApplicationBlocks, true
}

// HasConnectorApplicationBlocks returns a boolean if a field has been set.
func (o *EditSharedInfrastructureSettings) HasConnectorApplicationBlocks() bool {
	if o != nil && !IsNil(o.ConnectorApplicationBlocks) {
		return true
	}

	return false
}

// SetConnectorApplicationBlocks gets a reference to the given EditSharedInfrastructureSettingsConnectorApplicationBlocks and assigns it to the ConnectorApplicationBlocks field.
func (o *EditSharedInfrastructureSettings) SetConnectorApplicationBlocks(v EditSharedInfrastructureSettingsConnectorApplicationBlocks) {
	o.ConnectorApplicationBlocks = &v
}

// GetConnectorConnectorBlocks returns the ConnectorConnectorBlocks field value if set, zero value otherwise.
func (o *EditSharedInfrastructureSettings) GetConnectorConnectorBlocks() EditSharedInfrastructureSettingsConnectorConnectorBlocks {
	if o == nil || IsNil(o.ConnectorConnectorBlocks) {
		var ret EditSharedInfrastructureSettingsConnectorConnectorBlocks
		return ret
	}
	return *o.ConnectorConnectorBlocks
}

// GetConnectorConnectorBlocksOk returns a tuple with the ConnectorConnectorBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSharedInfrastructureSettings) GetConnectorConnectorBlocksOk() (*EditSharedInfrastructureSettingsConnectorConnectorBlocks, bool) {
	if o == nil || IsNil(o.ConnectorConnectorBlocks) {
		return nil, false
	}
	return o.ConnectorConnectorBlocks, true
}

// HasConnectorConnectorBlocks returns a boolean if a field has been set.
func (o *EditSharedInfrastructureSettings) HasConnectorConnectorBlocks() bool {
	if o != nil && !IsNil(o.ConnectorConnectorBlocks) {
		return true
	}

	return false
}

// SetConnectorConnectorBlocks gets a reference to the given EditSharedInfrastructureSettingsConnectorConnectorBlocks and assigns it to the ConnectorConnectorBlocks field.
func (o *EditSharedInfrastructureSettings) SetConnectorConnectorBlocks(v EditSharedInfrastructureSettingsConnectorConnectorBlocks) {
	o.ConnectorConnectorBlocks = &v
}

// GetEgressIpNotificationUrl returns the EgressIpNotificationUrl field value if set, zero value otherwise.
func (o *EditSharedInfrastructureSettings) GetEgressIpNotificationUrl() string {
	if o == nil || IsNil(o.EgressIpNotificationUrl) {
		var ret string
		return ret
	}
	return *o.EgressIpNotificationUrl
}

// GetEgressIpNotificationUrlOk returns a tuple with the EgressIpNotificationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSharedInfrastructureSettings) GetEgressIpNotificationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EgressIpNotificationUrl) {
		return nil, false
	}
	return o.EgressIpNotificationUrl, true
}

// HasEgressIpNotificationUrl returns a boolean if a field has been set.
func (o *EditSharedInfrastructureSettings) HasEgressIpNotificationUrl() bool {
	if o != nil && !IsNil(o.EgressIpNotificationUrl) {
		return true
	}

	return false
}

// SetEgressIpNotificationUrl gets a reference to the given string and assigns it to the EgressIpNotificationUrl field.
func (o *EditSharedInfrastructureSettings) SetEgressIpNotificationUrl(v string) {
	o.EgressIpNotificationUrl = &v
}

// GetInfraBgpAs returns the InfraBgpAs field value if set, zero value otherwise.
func (o *EditSharedInfrastructureSettings) GetInfraBgpAs() string {
	if o == nil || IsNil(o.InfraBgpAs) {
		var ret string
		return ret
	}
	return *o.InfraBgpAs
}

// GetInfraBgpAsOk returns a tuple with the InfraBgpAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSharedInfrastructureSettings) GetInfraBgpAsOk() (*string, bool) {
	if o == nil || IsNil(o.InfraBgpAs) {
		return nil, false
	}
	return o.InfraBgpAs, true
}

// HasInfraBgpAs returns a boolean if a field has been set.
func (o *EditSharedInfrastructureSettings) HasInfraBgpAs() bool {
	if o != nil && !IsNil(o.InfraBgpAs) {
		return true
	}

	return false
}

// SetInfraBgpAs gets a reference to the given string and assigns it to the InfraBgpAs field.
func (o *EditSharedInfrastructureSettings) SetInfraBgpAs(v string) {
	o.InfraBgpAs = &v
}

// GetInfrastructureSubnet returns the InfrastructureSubnet field value if set, zero value otherwise.
func (o *EditSharedInfrastructureSettings) GetInfrastructureSubnet() string {
	if o == nil || IsNil(o.InfrastructureSubnet) {
		var ret string
		return ret
	}
	return *o.InfrastructureSubnet
}

// GetInfrastructureSubnetOk returns a tuple with the InfrastructureSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSharedInfrastructureSettings) GetInfrastructureSubnetOk() (*string, bool) {
	if o == nil || IsNil(o.InfrastructureSubnet) {
		return nil, false
	}
	return o.InfrastructureSubnet, true
}

// HasInfrastructureSubnet returns a boolean if a field has been set.
func (o *EditSharedInfrastructureSettings) HasInfrastructureSubnet() bool {
	if o != nil && !IsNil(o.InfrastructureSubnet) {
		return true
	}

	return false
}

// SetInfrastructureSubnet gets a reference to the given string and assigns it to the InfrastructureSubnet field.
func (o *EditSharedInfrastructureSettings) SetInfrastructureSubnet(v string) {
	o.InfrastructureSubnet = &v
}

// GetInfrastructureSubnetIpv6 returns the InfrastructureSubnetIpv6 field value if set, zero value otherwise.
func (o *EditSharedInfrastructureSettings) GetInfrastructureSubnetIpv6() string {
	if o == nil || IsNil(o.InfrastructureSubnetIpv6) {
		var ret string
		return ret
	}
	return *o.InfrastructureSubnetIpv6
}

// GetInfrastructureSubnetIpv6Ok returns a tuple with the InfrastructureSubnetIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSharedInfrastructureSettings) GetInfrastructureSubnetIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.InfrastructureSubnetIpv6) {
		return nil, false
	}
	return o.InfrastructureSubnetIpv6, true
}

// HasInfrastructureSubnetIpv6 returns a boolean if a field has been set.
func (o *EditSharedInfrastructureSettings) HasInfrastructureSubnetIpv6() bool {
	if o != nil && !IsNil(o.InfrastructureSubnetIpv6) {
		return true
	}

	return false
}

// SetInfrastructureSubnetIpv6 gets a reference to the given string and assigns it to the InfrastructureSubnetIpv6 field.
func (o *EditSharedInfrastructureSettings) SetInfrastructureSubnetIpv6(v string) {
	o.InfrastructureSubnetIpv6 = &v
}

func (o EditSharedInfrastructureSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditSharedInfrastructureSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectorApplicationBlocks) {
		toSerialize["connector-application-blocks"] = o.ConnectorApplicationBlocks
	}
	if !IsNil(o.ConnectorConnectorBlocks) {
		toSerialize["connector-connector-blocks"] = o.ConnectorConnectorBlocks
	}
	if !IsNil(o.EgressIpNotificationUrl) {
		toSerialize["egress_ip_notification_url"] = o.EgressIpNotificationUrl
	}
	if !IsNil(o.InfraBgpAs) {
		toSerialize["infra_bgp_as"] = o.InfraBgpAs
	}
	if !IsNil(o.InfrastructureSubnet) {
		toSerialize["infrastructure_subnet"] = o.InfrastructureSubnet
	}
	if !IsNil(o.InfrastructureSubnetIpv6) {
		toSerialize["infrastructure_subnet_ipv6"] = o.InfrastructureSubnetIpv6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EditSharedInfrastructureSettings) UnmarshalJSON(data []byte) (err error) {
	varEditSharedInfrastructureSettings := _EditSharedInfrastructureSettings{}

	err = json.Unmarshal(data, &varEditSharedInfrastructureSettings)

	if err != nil {
		return err
	}

	*o = EditSharedInfrastructureSettings(varEditSharedInfrastructureSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "connector-application-blocks")
		delete(additionalProperties, "connector-connector-blocks")
		delete(additionalProperties, "egress_ip_notification_url")
		delete(additionalProperties, "infra_bgp_as")
		delete(additionalProperties, "infrastructure_subnet")
		delete(additionalProperties, "infrastructure_subnet_ipv6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEditSharedInfrastructureSettings struct {
	value *EditSharedInfrastructureSettings
	isSet bool
}

func (v NullableEditSharedInfrastructureSettings) Get() *EditSharedInfrastructureSettings {
	return v.value
}

func (v *NullableEditSharedInfrastructureSettings) Set(val *EditSharedInfrastructureSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableEditSharedInfrastructureSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableEditSharedInfrastructureSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditSharedInfrastructureSettings(val *EditSharedInfrastructureSettings) *NullableEditSharedInfrastructureSettings {
	return &NullableEditSharedInfrastructureSettings{value: val, isSet: true}
}

func (v NullableEditSharedInfrastructureSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditSharedInfrastructureSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
