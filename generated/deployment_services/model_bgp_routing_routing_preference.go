/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
)

// checks if the BgpRoutingRoutingPreference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpRoutingRoutingPreference{}

// BgpRoutingRoutingPreference struct for BgpRoutingRoutingPreference
type BgpRoutingRoutingPreference struct {
	Default              map[string]interface{} `json:"default,omitempty"`
	HotPotatoRouting     map[string]interface{} `json:"hot_potato_routing,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpRoutingRoutingPreference BgpRoutingRoutingPreference

// NewBgpRoutingRoutingPreference instantiates a new BgpRoutingRoutingPreference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpRoutingRoutingPreference() *BgpRoutingRoutingPreference {
	this := BgpRoutingRoutingPreference{}
	return &this
}

// NewBgpRoutingRoutingPreferenceWithDefaults instantiates a new BgpRoutingRoutingPreference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpRoutingRoutingPreferenceWithDefaults() *BgpRoutingRoutingPreference {
	this := BgpRoutingRoutingPreference{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *BgpRoutingRoutingPreference) GetDefault() map[string]interface{} {
	if o == nil || IsNil(o.Default) {
		var ret map[string]interface{}
		return ret
	}
	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingRoutingPreference) GetDefaultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Default) {
		return map[string]interface{}{}, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *BgpRoutingRoutingPreference) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given map[string]interface{} and assigns it to the Default field.
func (o *BgpRoutingRoutingPreference) SetDefault(v map[string]interface{}) {
	o.Default = v
}

// GetHotPotatoRouting returns the HotPotatoRouting field value if set, zero value otherwise.
func (o *BgpRoutingRoutingPreference) GetHotPotatoRouting() map[string]interface{} {
	if o == nil || IsNil(o.HotPotatoRouting) {
		var ret map[string]interface{}
		return ret
	}
	return o.HotPotatoRouting
}

// GetHotPotatoRoutingOk returns a tuple with the HotPotatoRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingRoutingPreference) GetHotPotatoRoutingOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.HotPotatoRouting) {
		return map[string]interface{}{}, false
	}
	return o.HotPotatoRouting, true
}

// HasHotPotatoRouting returns a boolean if a field has been set.
func (o *BgpRoutingRoutingPreference) HasHotPotatoRouting() bool {
	if o != nil && !IsNil(o.HotPotatoRouting) {
		return true
	}

	return false
}

// SetHotPotatoRouting gets a reference to the given map[string]interface{} and assigns it to the HotPotatoRouting field.
func (o *BgpRoutingRoutingPreference) SetHotPotatoRouting(v map[string]interface{}) {
	o.HotPotatoRouting = v
}

func (o BgpRoutingRoutingPreference) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpRoutingRoutingPreference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.HotPotatoRouting) {
		toSerialize["hot_potato_routing"] = o.HotPotatoRouting
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpRoutingRoutingPreference) UnmarshalJSON(data []byte) (err error) {
	varBgpRoutingRoutingPreference := _BgpRoutingRoutingPreference{}

	err = json.Unmarshal(data, &varBgpRoutingRoutingPreference)

	if err != nil {
		return err
	}

	*o = BgpRoutingRoutingPreference(varBgpRoutingRoutingPreference)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "default")
		delete(additionalProperties, "hot_potato_routing")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpRoutingRoutingPreference struct {
	value *BgpRoutingRoutingPreference
	isSet bool
}

func (v NullableBgpRoutingRoutingPreference) Get() *BgpRoutingRoutingPreference {
	return v.value
}

func (v *NullableBgpRoutingRoutingPreference) Set(val *BgpRoutingRoutingPreference) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRoutingRoutingPreference) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRoutingRoutingPreference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRoutingRoutingPreference(val *BgpRoutingRoutingPreference) *NullableBgpRoutingRoutingPreference {
	return &NullableBgpRoutingRoutingPreference{value: val, isSet: true}
}

func (v NullableBgpRoutingRoutingPreference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRoutingRoutingPreference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
