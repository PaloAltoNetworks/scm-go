/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
)

// checks if the RemoteNetworksProtocolBgpPeer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteNetworksProtocolBgpPeer{}

// RemoteNetworksProtocolBgpPeer secondary bgp routing as bgp_peer
type RemoteNetworksProtocolBgpPeer struct {
	// Local peer IP address (secondary WAN)
	LocalIpAddress *string `json:"local_ip_address,omitempty"`
	// Remote peer IP address (secondary WAN)
	PeerIpAddress *string `json:"peer_ip_address,omitempty"`
	// BGP peering secret (secondary WAN)
	Secret               *string `json:"secret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RemoteNetworksProtocolBgpPeer RemoteNetworksProtocolBgpPeer

// NewRemoteNetworksProtocolBgpPeer instantiates a new RemoteNetworksProtocolBgpPeer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteNetworksProtocolBgpPeer() *RemoteNetworksProtocolBgpPeer {
	this := RemoteNetworksProtocolBgpPeer{}
	return &this
}

// NewRemoteNetworksProtocolBgpPeerWithDefaults instantiates a new RemoteNetworksProtocolBgpPeer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteNetworksProtocolBgpPeerWithDefaults() *RemoteNetworksProtocolBgpPeer {
	this := RemoteNetworksProtocolBgpPeer{}
	return &this
}

// GetLocalIpAddress returns the LocalIpAddress field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgpPeer) GetLocalIpAddress() string {
	if o == nil || IsNil(o.LocalIpAddress) {
		var ret string
		return ret
	}
	return *o.LocalIpAddress
}

// GetLocalIpAddressOk returns a tuple with the LocalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgpPeer) GetLocalIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIpAddress) {
		return nil, false
	}
	return o.LocalIpAddress, true
}

// HasLocalIpAddress returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgpPeer) HasLocalIpAddress() bool {
	if o != nil && !IsNil(o.LocalIpAddress) {
		return true
	}

	return false
}

// SetLocalIpAddress gets a reference to the given string and assigns it to the LocalIpAddress field.
func (o *RemoteNetworksProtocolBgpPeer) SetLocalIpAddress(v string) {
	o.LocalIpAddress = &v
}

// GetPeerIpAddress returns the PeerIpAddress field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgpPeer) GetPeerIpAddress() string {
	if o == nil || IsNil(o.PeerIpAddress) {
		var ret string
		return ret
	}
	return *o.PeerIpAddress
}

// GetPeerIpAddressOk returns a tuple with the PeerIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgpPeer) GetPeerIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PeerIpAddress) {
		return nil, false
	}
	return o.PeerIpAddress, true
}

// HasPeerIpAddress returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgpPeer) HasPeerIpAddress() bool {
	if o != nil && !IsNil(o.PeerIpAddress) {
		return true
	}

	return false
}

// SetPeerIpAddress gets a reference to the given string and assigns it to the PeerIpAddress field.
func (o *RemoteNetworksProtocolBgpPeer) SetPeerIpAddress(v string) {
	o.PeerIpAddress = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgpPeer) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgpPeer) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgpPeer) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *RemoteNetworksProtocolBgpPeer) SetSecret(v string) {
	o.Secret = &v
}

func (o RemoteNetworksProtocolBgpPeer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteNetworksProtocolBgpPeer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocalIpAddress) {
		toSerialize["local_ip_address"] = o.LocalIpAddress
	}
	if !IsNil(o.PeerIpAddress) {
		toSerialize["peer_ip_address"] = o.PeerIpAddress
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RemoteNetworksProtocolBgpPeer) UnmarshalJSON(data []byte) (err error) {
	varRemoteNetworksProtocolBgpPeer := _RemoteNetworksProtocolBgpPeer{}

	err = json.Unmarshal(data, &varRemoteNetworksProtocolBgpPeer)

	if err != nil {
		return err
	}

	*o = RemoteNetworksProtocolBgpPeer(varRemoteNetworksProtocolBgpPeer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "local_ip_address")
		delete(additionalProperties, "peer_ip_address")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRemoteNetworksProtocolBgpPeer struct {
	value *RemoteNetworksProtocolBgpPeer
	isSet bool
}

func (v NullableRemoteNetworksProtocolBgpPeer) Get() *RemoteNetworksProtocolBgpPeer {
	return v.value
}

func (v *NullableRemoteNetworksProtocolBgpPeer) Set(val *RemoteNetworksProtocolBgpPeer) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteNetworksProtocolBgpPeer) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteNetworksProtocolBgpPeer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteNetworksProtocolBgpPeer(val *RemoteNetworksProtocolBgpPeer) *NullableRemoteNetworksProtocolBgpPeer {
	return &NullableRemoteNetworksProtocolBgpPeer{value: val, isSet: true}
}

func (v NullableRemoteNetworksProtocolBgpPeer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteNetworksProtocolBgpPeer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
