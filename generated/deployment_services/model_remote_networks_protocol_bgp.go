/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
)

// checks if the RemoteNetworksProtocolBgp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteNetworksProtocolBgp{}

// RemoteNetworksProtocolBgp struct for RemoteNetworksProtocolBgp
type RemoteNetworksProtocolBgp struct {
	// Do not export routes?
	DoNotExportRoutes *bool `json:"do_not_export_routes,omitempty"`
	// Enable BGP peering?
	Enable *bool `json:"enable,omitempty"`
	// Local peer IP address
	LocalIpAddress *string `json:"local_ip_address,omitempty"`
	// Originate default route?
	OriginateDefaultRoute *bool `json:"originate_default_route,omitempty"`
	// BGP peer ASN
	PeerAs *string `json:"peer_as,omitempty"`
	// Remote peer IP address
	PeerIpAddress *string `json:"peer_ip_address,omitempty"`
	// Route exchange types
	PeeringType *string `json:"peering_type,omitempty"`
	// BGP peering secret
	Secret *string `json:"secret,omitempty"`
	// Summarize mobile user routes?
	SummarizeMobileUserRoutes *bool `json:"summarize_mobile_user_routes,omitempty"`
	AdditionalProperties      map[string]interface{}
}

type _RemoteNetworksProtocolBgp RemoteNetworksProtocolBgp

// NewRemoteNetworksProtocolBgp instantiates a new RemoteNetworksProtocolBgp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteNetworksProtocolBgp() *RemoteNetworksProtocolBgp {
	this := RemoteNetworksProtocolBgp{}
	return &this
}

// NewRemoteNetworksProtocolBgpWithDefaults instantiates a new RemoteNetworksProtocolBgp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteNetworksProtocolBgpWithDefaults() *RemoteNetworksProtocolBgp {
	this := RemoteNetworksProtocolBgp{}
	return &this
}

// GetDoNotExportRoutes returns the DoNotExportRoutes field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetDoNotExportRoutes() bool {
	if o == nil || IsNil(o.DoNotExportRoutes) {
		var ret bool
		return ret
	}
	return *o.DoNotExportRoutes
}

// GetDoNotExportRoutesOk returns a tuple with the DoNotExportRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetDoNotExportRoutesOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotExportRoutes) {
		return nil, false
	}
	return o.DoNotExportRoutes, true
}

// HasDoNotExportRoutes returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasDoNotExportRoutes() bool {
	if o != nil && !IsNil(o.DoNotExportRoutes) {
		return true
	}

	return false
}

// SetDoNotExportRoutes gets a reference to the given bool and assigns it to the DoNotExportRoutes field.
func (o *RemoteNetworksProtocolBgp) SetDoNotExportRoutes(v bool) {
	o.DoNotExportRoutes = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *RemoteNetworksProtocolBgp) SetEnable(v bool) {
	o.Enable = &v
}

// GetLocalIpAddress returns the LocalIpAddress field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetLocalIpAddress() string {
	if o == nil || IsNil(o.LocalIpAddress) {
		var ret string
		return ret
	}
	return *o.LocalIpAddress
}

// GetLocalIpAddressOk returns a tuple with the LocalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetLocalIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIpAddress) {
		return nil, false
	}
	return o.LocalIpAddress, true
}

// HasLocalIpAddress returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasLocalIpAddress() bool {
	if o != nil && !IsNil(o.LocalIpAddress) {
		return true
	}

	return false
}

// SetLocalIpAddress gets a reference to the given string and assigns it to the LocalIpAddress field.
func (o *RemoteNetworksProtocolBgp) SetLocalIpAddress(v string) {
	o.LocalIpAddress = &v
}

// GetOriginateDefaultRoute returns the OriginateDefaultRoute field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetOriginateDefaultRoute() bool {
	if o == nil || IsNil(o.OriginateDefaultRoute) {
		var ret bool
		return ret
	}
	return *o.OriginateDefaultRoute
}

// GetOriginateDefaultRouteOk returns a tuple with the OriginateDefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetOriginateDefaultRouteOk() (*bool, bool) {
	if o == nil || IsNil(o.OriginateDefaultRoute) {
		return nil, false
	}
	return o.OriginateDefaultRoute, true
}

// HasOriginateDefaultRoute returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasOriginateDefaultRoute() bool {
	if o != nil && !IsNil(o.OriginateDefaultRoute) {
		return true
	}

	return false
}

// SetOriginateDefaultRoute gets a reference to the given bool and assigns it to the OriginateDefaultRoute field.
func (o *RemoteNetworksProtocolBgp) SetOriginateDefaultRoute(v bool) {
	o.OriginateDefaultRoute = &v
}

// GetPeerAs returns the PeerAs field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetPeerAs() string {
	if o == nil || IsNil(o.PeerAs) {
		var ret string
		return ret
	}
	return *o.PeerAs
}

// GetPeerAsOk returns a tuple with the PeerAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetPeerAsOk() (*string, bool) {
	if o == nil || IsNil(o.PeerAs) {
		return nil, false
	}
	return o.PeerAs, true
}

// HasPeerAs returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasPeerAs() bool {
	if o != nil && !IsNil(o.PeerAs) {
		return true
	}

	return false
}

// SetPeerAs gets a reference to the given string and assigns it to the PeerAs field.
func (o *RemoteNetworksProtocolBgp) SetPeerAs(v string) {
	o.PeerAs = &v
}

// GetPeerIpAddress returns the PeerIpAddress field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetPeerIpAddress() string {
	if o == nil || IsNil(o.PeerIpAddress) {
		var ret string
		return ret
	}
	return *o.PeerIpAddress
}

// GetPeerIpAddressOk returns a tuple with the PeerIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetPeerIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PeerIpAddress) {
		return nil, false
	}
	return o.PeerIpAddress, true
}

// HasPeerIpAddress returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasPeerIpAddress() bool {
	if o != nil && !IsNil(o.PeerIpAddress) {
		return true
	}

	return false
}

// SetPeerIpAddress gets a reference to the given string and assigns it to the PeerIpAddress field.
func (o *RemoteNetworksProtocolBgp) SetPeerIpAddress(v string) {
	o.PeerIpAddress = &v
}

// GetPeeringType returns the PeeringType field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetPeeringType() string {
	if o == nil || IsNil(o.PeeringType) {
		var ret string
		return ret
	}
	return *o.PeeringType
}

// GetPeeringTypeOk returns a tuple with the PeeringType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetPeeringTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PeeringType) {
		return nil, false
	}
	return o.PeeringType, true
}

// HasPeeringType returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasPeeringType() bool {
	if o != nil && !IsNil(o.PeeringType) {
		return true
	}

	return false
}

// SetPeeringType gets a reference to the given string and assigns it to the PeeringType field.
func (o *RemoteNetworksProtocolBgp) SetPeeringType(v string) {
	o.PeeringType = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *RemoteNetworksProtocolBgp) SetSecret(v string) {
	o.Secret = &v
}

// GetSummarizeMobileUserRoutes returns the SummarizeMobileUserRoutes field value if set, zero value otherwise.
func (o *RemoteNetworksProtocolBgp) GetSummarizeMobileUserRoutes() bool {
	if o == nil || IsNil(o.SummarizeMobileUserRoutes) {
		var ret bool
		return ret
	}
	return *o.SummarizeMobileUserRoutes
}

// GetSummarizeMobileUserRoutesOk returns a tuple with the SummarizeMobileUserRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteNetworksProtocolBgp) GetSummarizeMobileUserRoutesOk() (*bool, bool) {
	if o == nil || IsNil(o.SummarizeMobileUserRoutes) {
		return nil, false
	}
	return o.SummarizeMobileUserRoutes, true
}

// HasSummarizeMobileUserRoutes returns a boolean if a field has been set.
func (o *RemoteNetworksProtocolBgp) HasSummarizeMobileUserRoutes() bool {
	if o != nil && !IsNil(o.SummarizeMobileUserRoutes) {
		return true
	}

	return false
}

// SetSummarizeMobileUserRoutes gets a reference to the given bool and assigns it to the SummarizeMobileUserRoutes field.
func (o *RemoteNetworksProtocolBgp) SetSummarizeMobileUserRoutes(v bool) {
	o.SummarizeMobileUserRoutes = &v
}

func (o RemoteNetworksProtocolBgp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteNetworksProtocolBgp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DoNotExportRoutes) {
		toSerialize["do_not_export_routes"] = o.DoNotExportRoutes
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.LocalIpAddress) {
		toSerialize["local_ip_address"] = o.LocalIpAddress
	}
	if !IsNil(o.OriginateDefaultRoute) {
		toSerialize["originate_default_route"] = o.OriginateDefaultRoute
	}
	if !IsNil(o.PeerAs) {
		toSerialize["peer_as"] = o.PeerAs
	}
	if !IsNil(o.PeerIpAddress) {
		toSerialize["peer_ip_address"] = o.PeerIpAddress
	}
	if !IsNil(o.PeeringType) {
		toSerialize["peering_type"] = o.PeeringType
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.SummarizeMobileUserRoutes) {
		toSerialize["summarize_mobile_user_routes"] = o.SummarizeMobileUserRoutes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RemoteNetworksProtocolBgp) UnmarshalJSON(data []byte) (err error) {
	varRemoteNetworksProtocolBgp := _RemoteNetworksProtocolBgp{}

	err = json.Unmarshal(data, &varRemoteNetworksProtocolBgp)

	if err != nil {
		return err
	}

	*o = RemoteNetworksProtocolBgp(varRemoteNetworksProtocolBgp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "do_not_export_routes")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "local_ip_address")
		delete(additionalProperties, "originate_default_route")
		delete(additionalProperties, "peer_as")
		delete(additionalProperties, "peer_ip_address")
		delete(additionalProperties, "peering_type")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "summarize_mobile_user_routes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRemoteNetworksProtocolBgp struct {
	value *RemoteNetworksProtocolBgp
	isSet bool
}

func (v NullableRemoteNetworksProtocolBgp) Get() *RemoteNetworksProtocolBgp {
	return v.value
}

func (v *NullableRemoteNetworksProtocolBgp) Set(val *RemoteNetworksProtocolBgp) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteNetworksProtocolBgp) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteNetworksProtocolBgp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteNetworksProtocolBgp(val *RemoteNetworksProtocolBgp) *NullableRemoteNetworksProtocolBgp {
	return &NullableRemoteNetworksProtocolBgp{value: val, isSet: true}
}

func (v NullableRemoteNetworksProtocolBgp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteNetworksProtocolBgp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
