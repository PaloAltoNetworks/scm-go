/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
)

// checks if the ServiceConnectionsQos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceConnectionsQos{}

// ServiceConnectionsQos struct for ServiceConnectionsQos
type ServiceConnectionsQos struct {
	Enable               *bool   `json:"enable,omitempty"`
	QosProfile           *string `json:"qos_profile,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceConnectionsQos ServiceConnectionsQos

// NewServiceConnectionsQos instantiates a new ServiceConnectionsQos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceConnectionsQos() *ServiceConnectionsQos {
	this := ServiceConnectionsQos{}
	return &this
}

// NewServiceConnectionsQosWithDefaults instantiates a new ServiceConnectionsQos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceConnectionsQosWithDefaults() *ServiceConnectionsQos {
	this := ServiceConnectionsQos{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ServiceConnectionsQos) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnectionsQos) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ServiceConnectionsQos) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ServiceConnectionsQos) SetEnable(v bool) {
	o.Enable = &v
}

// GetQosProfile returns the QosProfile field value if set, zero value otherwise.
func (o *ServiceConnectionsQos) GetQosProfile() string {
	if o == nil || IsNil(o.QosProfile) {
		var ret string
		return ret
	}
	return *o.QosProfile
}

// GetQosProfileOk returns a tuple with the QosProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConnectionsQos) GetQosProfileOk() (*string, bool) {
	if o == nil || IsNil(o.QosProfile) {
		return nil, false
	}
	return o.QosProfile, true
}

// HasQosProfile returns a boolean if a field has been set.
func (o *ServiceConnectionsQos) HasQosProfile() bool {
	if o != nil && !IsNil(o.QosProfile) {
		return true
	}

	return false
}

// SetQosProfile gets a reference to the given string and assigns it to the QosProfile field.
func (o *ServiceConnectionsQos) SetQosProfile(v string) {
	o.QosProfile = &v
}

func (o ServiceConnectionsQos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceConnectionsQos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.QosProfile) {
		toSerialize["qos_profile"] = o.QosProfile
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceConnectionsQos) UnmarshalJSON(data []byte) (err error) {
	varServiceConnectionsQos := _ServiceConnectionsQos{}

	err = json.Unmarshal(data, &varServiceConnectionsQos)

	if err != nil {
		return err
	}

	*o = ServiceConnectionsQos(varServiceConnectionsQos)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "qos_profile")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceConnectionsQos struct {
	value *ServiceConnectionsQos
	isSet bool
}

func (v NullableServiceConnectionsQos) Get() *ServiceConnectionsQos {
	return v.value
}

func (v *NullableServiceConnectionsQos) Set(val *ServiceConnectionsQos) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceConnectionsQos) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceConnectionsQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceConnectionsQos(val *ServiceConnectionsQos) *NullableServiceConnectionsQos {
	return &NullableServiceConnectionsQos{value: val, isSet: true}
}

func (v NullableServiceConnectionsQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceConnectionsQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
