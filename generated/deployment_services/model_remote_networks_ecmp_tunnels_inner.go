/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
	"fmt"
)

// checks if the RemoteNetworksEcmpTunnelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteNetworksEcmpTunnelsInner{}

// RemoteNetworksEcmpTunnelsInner struct for RemoteNetworksEcmpTunnelsInner
type RemoteNetworksEcmpTunnelsInner struct {
	IpsecTunnel          string                                 `json:"ipsec_tunnel"`
	Name                 string                                 `json:"name"`
	Protocol             RemoteNetworksEcmpTunnelsInnerProtocol `json:"protocol"`
	AdditionalProperties map[string]interface{}
}

type _RemoteNetworksEcmpTunnelsInner RemoteNetworksEcmpTunnelsInner

// NewRemoteNetworksEcmpTunnelsInner instantiates a new RemoteNetworksEcmpTunnelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteNetworksEcmpTunnelsInner(ipsecTunnel string, name string, protocol RemoteNetworksEcmpTunnelsInnerProtocol) *RemoteNetworksEcmpTunnelsInner {
	this := RemoteNetworksEcmpTunnelsInner{}
	this.IpsecTunnel = ipsecTunnel
	this.Name = name
	this.Protocol = protocol
	return &this
}

// NewRemoteNetworksEcmpTunnelsInnerWithDefaults instantiates a new RemoteNetworksEcmpTunnelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteNetworksEcmpTunnelsInnerWithDefaults() *RemoteNetworksEcmpTunnelsInner {
	this := RemoteNetworksEcmpTunnelsInner{}
	return &this
}

// GetIpsecTunnel returns the IpsecTunnel field value
func (o *RemoteNetworksEcmpTunnelsInner) GetIpsecTunnel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpsecTunnel
}

// GetIpsecTunnelOk returns a tuple with the IpsecTunnel field value
// and a boolean to check if the value has been set.
func (o *RemoteNetworksEcmpTunnelsInner) GetIpsecTunnelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpsecTunnel, true
}

// SetIpsecTunnel sets field value
func (o *RemoteNetworksEcmpTunnelsInner) SetIpsecTunnel(v string) {
	o.IpsecTunnel = v
}

// GetName returns the Name field value
func (o *RemoteNetworksEcmpTunnelsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RemoteNetworksEcmpTunnelsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RemoteNetworksEcmpTunnelsInner) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *RemoteNetworksEcmpTunnelsInner) GetProtocol() RemoteNetworksEcmpTunnelsInnerProtocol {
	if o == nil {
		var ret RemoteNetworksEcmpTunnelsInnerProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *RemoteNetworksEcmpTunnelsInner) GetProtocolOk() (*RemoteNetworksEcmpTunnelsInnerProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *RemoteNetworksEcmpTunnelsInner) SetProtocol(v RemoteNetworksEcmpTunnelsInnerProtocol) {
	o.Protocol = v
}

func (o RemoteNetworksEcmpTunnelsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteNetworksEcmpTunnelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ipsec_tunnel"] = o.IpsecTunnel
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RemoteNetworksEcmpTunnelsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ipsec_tunnel",
		"name",
		"protocol",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRemoteNetworksEcmpTunnelsInner := _RemoteNetworksEcmpTunnelsInner{}

	err = json.Unmarshal(data, &varRemoteNetworksEcmpTunnelsInner)

	if err != nil {
		return err
	}

	*o = RemoteNetworksEcmpTunnelsInner(varRemoteNetworksEcmpTunnelsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ipsec_tunnel")
		delete(additionalProperties, "name")
		delete(additionalProperties, "protocol")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRemoteNetworksEcmpTunnelsInner struct {
	value *RemoteNetworksEcmpTunnelsInner
	isSet bool
}

func (v NullableRemoteNetworksEcmpTunnelsInner) Get() *RemoteNetworksEcmpTunnelsInner {
	return v.value
}

func (v *NullableRemoteNetworksEcmpTunnelsInner) Set(val *RemoteNetworksEcmpTunnelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteNetworksEcmpTunnelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteNetworksEcmpTunnelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteNetworksEcmpTunnelsInner(val *RemoteNetworksEcmpTunnelsInner) *NullableRemoteNetworksEcmpTunnelsInner {
	return &NullableRemoteNetworksEcmpTunnelsInner{value: val, isSet: true}
}

func (v NullableRemoteNetworksEcmpTunnelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteNetworksEcmpTunnelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
