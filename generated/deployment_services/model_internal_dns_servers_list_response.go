/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
	"fmt"
)

// checks if the InternalDNSServersListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternalDNSServersListResponse{}

// InternalDNSServersListResponse struct for InternalDNSServersListResponse
type InternalDNSServersListResponse struct {
	Data []InternalDnsServers `json:"data"`
	// The maximum number of results per page
	Limit int32 `json:"limit"`
	// The offset into the list of results returned
	Offset int32 `json:"offset"`
	// The total count of results
	Total                int32 `json:"total"`
	AdditionalProperties map[string]interface{}
}

type _InternalDNSServersListResponse InternalDNSServersListResponse

// NewInternalDNSServersListResponse instantiates a new InternalDNSServersListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalDNSServersListResponse(data []InternalDnsServers, limit int32, offset int32, total int32) *InternalDNSServersListResponse {
	this := InternalDNSServersListResponse{}
	this.Data = data
	this.Limit = limit
	this.Offset = offset
	this.Total = total
	return &this
}

// NewInternalDNSServersListResponseWithDefaults instantiates a new InternalDNSServersListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalDNSServersListResponseWithDefaults() *InternalDNSServersListResponse {
	this := InternalDNSServersListResponse{}
	var limit int32 = 200
	this.Limit = limit
	var offset int32 = 0
	this.Offset = offset
	return &this
}

// GetData returns the Data field value
func (o *InternalDNSServersListResponse) GetData() []InternalDnsServers {
	if o == nil {
		var ret []InternalDnsServers
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *InternalDNSServersListResponse) GetDataOk() ([]InternalDnsServers, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *InternalDNSServersListResponse) SetData(v []InternalDnsServers) {
	o.Data = v
}

// GetLimit returns the Limit field value
func (o *InternalDNSServersListResponse) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *InternalDNSServersListResponse) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *InternalDNSServersListResponse) SetLimit(v int32) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *InternalDNSServersListResponse) GetOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *InternalDNSServersListResponse) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *InternalDNSServersListResponse) SetOffset(v int32) {
	o.Offset = v
}

// GetTotal returns the Total field value
func (o *InternalDNSServersListResponse) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *InternalDNSServersListResponse) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *InternalDNSServersListResponse) SetTotal(v int32) {
	o.Total = v
}

func (o InternalDNSServersListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalDNSServersListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["limit"] = o.Limit
	toSerialize["offset"] = o.Offset
	toSerialize["total"] = o.Total

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternalDNSServersListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"limit",
		"offset",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInternalDNSServersListResponse := _InternalDNSServersListResponse{}

	err = json.Unmarshal(data, &varInternalDNSServersListResponse)

	if err != nil {
		return err
	}

	*o = InternalDNSServersListResponse(varInternalDNSServersListResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "offset")
		delete(additionalProperties, "total")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternalDNSServersListResponse struct {
	value *InternalDNSServersListResponse
	isSet bool
}

func (v NullableInternalDNSServersListResponse) Get() *InternalDNSServersListResponse {
	return v.value
}

func (v *NullableInternalDNSServersListResponse) Set(val *InternalDNSServersListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalDNSServersListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalDNSServersListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalDNSServersListResponse(val *InternalDNSServersListResponse) *NullableInternalDNSServersListResponse {
	return &NullableInternalDNSServersListResponse{value: val, isSet: true}
}

func (v NullableInternalDNSServersListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalDNSServersListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
