/*
Network Deployment

These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deployment_services

import (
	"encoding/json"
	"fmt"
)

// checks if the SitesMembersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SitesMembersInner{}

// SitesMembersInner struct for SitesMembersInner
type SitesMembersInner struct {
	// UUID of the remote network
	Id *string `json:"id,omitempty"`
	// The mode of the remote network
	Mode string `json:"mode"`
	// The member name
	Name string `json:"name"`
	// The remote network name
	RemoteNetwork        *string `json:"remote_network,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SitesMembersInner SitesMembersInner

// NewSitesMembersInner instantiates a new SitesMembersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSitesMembersInner(mode string, name string) *SitesMembersInner {
	this := SitesMembersInner{}
	this.Mode = mode
	this.Name = name
	return &this
}

// NewSitesMembersInnerWithDefaults instantiates a new SitesMembersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSitesMembersInnerWithDefaults() *SitesMembersInner {
	this := SitesMembersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SitesMembersInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesMembersInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SitesMembersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SitesMembersInner) SetId(v string) {
	o.Id = &v
}

// GetMode returns the Mode field value
func (o *SitesMembersInner) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *SitesMembersInner) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *SitesMembersInner) SetMode(v string) {
	o.Mode = v
}

// GetName returns the Name field value
func (o *SitesMembersInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SitesMembersInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SitesMembersInner) SetName(v string) {
	o.Name = v
}

// GetRemoteNetwork returns the RemoteNetwork field value if set, zero value otherwise.
func (o *SitesMembersInner) GetRemoteNetwork() string {
	if o == nil || IsNil(o.RemoteNetwork) {
		var ret string
		return ret
	}
	return *o.RemoteNetwork
}

// GetRemoteNetworkOk returns a tuple with the RemoteNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesMembersInner) GetRemoteNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteNetwork) {
		return nil, false
	}
	return o.RemoteNetwork, true
}

// HasRemoteNetwork returns a boolean if a field has been set.
func (o *SitesMembersInner) HasRemoteNetwork() bool {
	if o != nil && !IsNil(o.RemoteNetwork) {
		return true
	}

	return false
}

// SetRemoteNetwork gets a reference to the given string and assigns it to the RemoteNetwork field.
func (o *SitesMembersInner) SetRemoteNetwork(v string) {
	o.RemoteNetwork = &v
}

func (o SitesMembersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SitesMembersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["mode"] = o.Mode
	toSerialize["name"] = o.Name
	if !IsNil(o.RemoteNetwork) {
		toSerialize["remote_network"] = o.RemoteNetwork
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SitesMembersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mode",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSitesMembersInner := _SitesMembersInner{}

	err = json.Unmarshal(data, &varSitesMembersInner)

	if err != nil {
		return err
	}

	*o = SitesMembersInner(varSitesMembersInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "mode")
		delete(additionalProperties, "name")
		delete(additionalProperties, "remote_network")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSitesMembersInner struct {
	value *SitesMembersInner
	isSet bool
}

func (v NullableSitesMembersInner) Get() *SitesMembersInner {
	return v.value
}

func (v *NullableSitesMembersInner) Set(val *SitesMembersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSitesMembersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSitesMembersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSitesMembersInner(val *SitesMembersInner) *NullableSitesMembersInner {
	return &NullableSitesMembersInner{value: val, isSet: true}
}

func (v NullableSitesMembersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSitesMembersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
