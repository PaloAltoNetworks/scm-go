/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
	"fmt"
)

// checks if the SnippetShareLoadPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnippetShareLoadPayload{}

// SnippetShareLoadPayload struct for SnippetShareLoadPayload
type SnippetShareLoadPayload struct {
	Id                   string       `json:"id"`
	Validation           NullableBool `json:"validation,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnippetShareLoadPayload SnippetShareLoadPayload

// NewSnippetShareLoadPayload instantiates a new SnippetShareLoadPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnippetShareLoadPayload(id string) *SnippetShareLoadPayload {
	this := SnippetShareLoadPayload{}
	this.Id = id
	return &this
}

// NewSnippetShareLoadPayloadWithDefaults instantiates a new SnippetShareLoadPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnippetShareLoadPayloadWithDefaults() *SnippetShareLoadPayload {
	this := SnippetShareLoadPayload{}
	return &this
}

// GetId returns the Id field value
func (o *SnippetShareLoadPayload) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SnippetShareLoadPayload) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SnippetShareLoadPayload) SetId(v string) {
	o.Id = v
}

// GetValidation returns the Validation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnippetShareLoadPayload) GetValidation() bool {
	if o == nil || IsNil(o.Validation.Get()) {
		var ret bool
		return ret
	}
	return *o.Validation.Get()
}

// GetValidationOk returns a tuple with the Validation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnippetShareLoadPayload) GetValidationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Validation.Get(), o.Validation.IsSet()
}

// HasValidation returns a boolean if a field has been set.
func (o *SnippetShareLoadPayload) HasValidation() bool {
	if o != nil && o.Validation.IsSet() {
		return true
	}

	return false
}

// SetValidation gets a reference to the given NullableBool and assigns it to the Validation field.
func (o *SnippetShareLoadPayload) SetValidation(v bool) {
	o.Validation.Set(&v)
}

// SetValidationNil sets the value for Validation to be an explicit nil
func (o *SnippetShareLoadPayload) SetValidationNil() {
	o.Validation.Set(nil)
}

// UnsetValidation ensures that no value is present for Validation, not even an explicit nil
func (o *SnippetShareLoadPayload) UnsetValidation() {
	o.Validation.Unset()
}

func (o SnippetShareLoadPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnippetShareLoadPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Validation.IsSet() {
		toSerialize["validation"] = o.Validation.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnippetShareLoadPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnippetShareLoadPayload := _SnippetShareLoadPayload{}

	err = json.Unmarshal(data, &varSnippetShareLoadPayload)

	if err != nil {
		return err
	}

	*o = SnippetShareLoadPayload(varSnippetShareLoadPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "validation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnippetShareLoadPayload struct {
	value *SnippetShareLoadPayload
	isSet bool
}

func (v NullableSnippetShareLoadPayload) Get() *SnippetShareLoadPayload {
	return v.value
}

func (v *NullableSnippetShareLoadPayload) Set(val *SnippetShareLoadPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSnippetShareLoadPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSnippetShareLoadPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnippetShareLoadPayload(val *SnippetShareLoadPayload) *NullableSnippetShareLoadPayload {
	return &NullableSnippetShareLoadPayload{value: val, isSet: true}
}

func (v NullableSnippetShareLoadPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnippetShareLoadPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
