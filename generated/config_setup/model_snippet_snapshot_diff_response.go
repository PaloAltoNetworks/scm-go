/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
)

// checks if the SnippetSnapshotDiffResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnippetSnapshotDiffResponse{}

// SnippetSnapshotDiffResponse struct for SnippetSnapshotDiffResponse
type SnippetSnapshotDiffResponse struct {
	After                *SnippetSnapshotDiffResponseAfter  `json:"after,omitempty"`
	Before               *SnippetSnapshotDiffResponseBefore `json:"before,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnippetSnapshotDiffResponse SnippetSnapshotDiffResponse

// NewSnippetSnapshotDiffResponse instantiates a new SnippetSnapshotDiffResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnippetSnapshotDiffResponse() *SnippetSnapshotDiffResponse {
	this := SnippetSnapshotDiffResponse{}
	return &this
}

// NewSnippetSnapshotDiffResponseWithDefaults instantiates a new SnippetSnapshotDiffResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnippetSnapshotDiffResponseWithDefaults() *SnippetSnapshotDiffResponse {
	this := SnippetSnapshotDiffResponse{}
	return &this
}

// GetAfter returns the After field value if set, zero value otherwise.
func (o *SnippetSnapshotDiffResponse) GetAfter() SnippetSnapshotDiffResponseAfter {
	if o == nil || IsNil(o.After) {
		var ret SnippetSnapshotDiffResponseAfter
		return ret
	}
	return *o.After
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetSnapshotDiffResponse) GetAfterOk() (*SnippetSnapshotDiffResponseAfter, bool) {
	if o == nil || IsNil(o.After) {
		return nil, false
	}
	return o.After, true
}

// HasAfter returns a boolean if a field has been set.
func (o *SnippetSnapshotDiffResponse) HasAfter() bool {
	if o != nil && !IsNil(o.After) {
		return true
	}

	return false
}

// SetAfter gets a reference to the given SnippetSnapshotDiffResponseAfter and assigns it to the After field.
func (o *SnippetSnapshotDiffResponse) SetAfter(v SnippetSnapshotDiffResponseAfter) {
	o.After = &v
}

// GetBefore returns the Before field value if set, zero value otherwise.
func (o *SnippetSnapshotDiffResponse) GetBefore() SnippetSnapshotDiffResponseBefore {
	if o == nil || IsNil(o.Before) {
		var ret SnippetSnapshotDiffResponseBefore
		return ret
	}
	return *o.Before
}

// GetBeforeOk returns a tuple with the Before field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetSnapshotDiffResponse) GetBeforeOk() (*SnippetSnapshotDiffResponseBefore, bool) {
	if o == nil || IsNil(o.Before) {
		return nil, false
	}
	return o.Before, true
}

// HasBefore returns a boolean if a field has been set.
func (o *SnippetSnapshotDiffResponse) HasBefore() bool {
	if o != nil && !IsNil(o.Before) {
		return true
	}

	return false
}

// SetBefore gets a reference to the given SnippetSnapshotDiffResponseBefore and assigns it to the Before field.
func (o *SnippetSnapshotDiffResponse) SetBefore(v SnippetSnapshotDiffResponseBefore) {
	o.Before = &v
}

func (o SnippetSnapshotDiffResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnippetSnapshotDiffResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.After) {
		toSerialize["after"] = o.After
	}
	if !IsNil(o.Before) {
		toSerialize["before"] = o.Before
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnippetSnapshotDiffResponse) UnmarshalJSON(data []byte) (err error) {
	varSnippetSnapshotDiffResponse := _SnippetSnapshotDiffResponse{}

	err = json.Unmarshal(data, &varSnippetSnapshotDiffResponse)

	if err != nil {
		return err
	}

	*o = SnippetSnapshotDiffResponse(varSnippetSnapshotDiffResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "after")
		delete(additionalProperties, "before")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnippetSnapshotDiffResponse struct {
	value *SnippetSnapshotDiffResponse
	isSet bool
}

func (v NullableSnippetSnapshotDiffResponse) Get() *SnippetSnapshotDiffResponse {
	return v.value
}

func (v *NullableSnippetSnapshotDiffResponse) Set(val *SnippetSnapshotDiffResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSnippetSnapshotDiffResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSnippetSnapshotDiffResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnippetSnapshotDiffResponse(val *SnippetSnapshotDiffResponse) *NullableSnippetSnapshotDiffResponse {
	return &NullableSnippetSnapshotDiffResponse{value: val, isSet: true}
}

func (v NullableSnippetSnapshotDiffResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnippetSnapshotDiffResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
