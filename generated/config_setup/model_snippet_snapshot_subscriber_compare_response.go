/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
)

// checks if the SnippetSnapshotSubscriberCompareResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnippetSnapshotSubscriberCompareResponse{}

// SnippetSnapshotSubscriberCompareResponse struct for SnippetSnapshotSubscriberCompareResponse
type SnippetSnapshotSubscriberCompareResponse struct {
	Publisher            *SnippetSnapshotSubscriberCompareResponsePublisher `json:"publisher,omitempty"`
	Subscriber           *SnippetSnapshotSubscriberCompareResponsePublisher `json:"subscriber,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnippetSnapshotSubscriberCompareResponse SnippetSnapshotSubscriberCompareResponse

// NewSnippetSnapshotSubscriberCompareResponse instantiates a new SnippetSnapshotSubscriberCompareResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnippetSnapshotSubscriberCompareResponse() *SnippetSnapshotSubscriberCompareResponse {
	this := SnippetSnapshotSubscriberCompareResponse{}
	return &this
}

// NewSnippetSnapshotSubscriberCompareResponseWithDefaults instantiates a new SnippetSnapshotSubscriberCompareResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnippetSnapshotSubscriberCompareResponseWithDefaults() *SnippetSnapshotSubscriberCompareResponse {
	this := SnippetSnapshotSubscriberCompareResponse{}
	return &this
}

// GetPublisher returns the Publisher field value if set, zero value otherwise.
func (o *SnippetSnapshotSubscriberCompareResponse) GetPublisher() SnippetSnapshotSubscriberCompareResponsePublisher {
	if o == nil || IsNil(o.Publisher) {
		var ret SnippetSnapshotSubscriberCompareResponsePublisher
		return ret
	}
	return *o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetSnapshotSubscriberCompareResponse) GetPublisherOk() (*SnippetSnapshotSubscriberCompareResponsePublisher, bool) {
	if o == nil || IsNil(o.Publisher) {
		return nil, false
	}
	return o.Publisher, true
}

// HasPublisher returns a boolean if a field has been set.
func (o *SnippetSnapshotSubscriberCompareResponse) HasPublisher() bool {
	if o != nil && !IsNil(o.Publisher) {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given SnippetSnapshotSubscriberCompareResponsePublisher and assigns it to the Publisher field.
func (o *SnippetSnapshotSubscriberCompareResponse) SetPublisher(v SnippetSnapshotSubscriberCompareResponsePublisher) {
	o.Publisher = &v
}

// GetSubscriber returns the Subscriber field value if set, zero value otherwise.
func (o *SnippetSnapshotSubscriberCompareResponse) GetSubscriber() SnippetSnapshotSubscriberCompareResponsePublisher {
	if o == nil || IsNil(o.Subscriber) {
		var ret SnippetSnapshotSubscriberCompareResponsePublisher
		return ret
	}
	return *o.Subscriber
}

// GetSubscriberOk returns a tuple with the Subscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetSnapshotSubscriberCompareResponse) GetSubscriberOk() (*SnippetSnapshotSubscriberCompareResponsePublisher, bool) {
	if o == nil || IsNil(o.Subscriber) {
		return nil, false
	}
	return o.Subscriber, true
}

// HasSubscriber returns a boolean if a field has been set.
func (o *SnippetSnapshotSubscriberCompareResponse) HasSubscriber() bool {
	if o != nil && !IsNil(o.Subscriber) {
		return true
	}

	return false
}

// SetSubscriber gets a reference to the given SnippetSnapshotSubscriberCompareResponsePublisher and assigns it to the Subscriber field.
func (o *SnippetSnapshotSubscriberCompareResponse) SetSubscriber(v SnippetSnapshotSubscriberCompareResponsePublisher) {
	o.Subscriber = &v
}

func (o SnippetSnapshotSubscriberCompareResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnippetSnapshotSubscriberCompareResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Publisher) {
		toSerialize["publisher"] = o.Publisher
	}
	if !IsNil(o.Subscriber) {
		toSerialize["subscriber"] = o.Subscriber
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnippetSnapshotSubscriberCompareResponse) UnmarshalJSON(data []byte) (err error) {
	varSnippetSnapshotSubscriberCompareResponse := _SnippetSnapshotSubscriberCompareResponse{}

	err = json.Unmarshal(data, &varSnippetSnapshotSubscriberCompareResponse)

	if err != nil {
		return err
	}

	*o = SnippetSnapshotSubscriberCompareResponse(varSnippetSnapshotSubscriberCompareResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "publisher")
		delete(additionalProperties, "subscriber")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnippetSnapshotSubscriberCompareResponse struct {
	value *SnippetSnapshotSubscriberCompareResponse
	isSet bool
}

func (v NullableSnippetSnapshotSubscriberCompareResponse) Get() *SnippetSnapshotSubscriberCompareResponse {
	return v.value
}

func (v *NullableSnippetSnapshotSubscriberCompareResponse) Set(val *SnippetSnapshotSubscriberCompareResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSnippetSnapshotSubscriberCompareResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSnippetSnapshotSubscriberCompareResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnippetSnapshotSubscriberCompareResponse(val *SnippetSnapshotSubscriberCompareResponse) *NullableSnippetSnapshotSubscriberCompareResponse {
	return &NullableSnippetSnapshotSubscriberCompareResponse{value: val, isSet: true}
}

func (v NullableSnippetSnapshotSubscriberCompareResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnippetSnapshotSubscriberCompareResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
