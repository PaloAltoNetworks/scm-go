/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
	"fmt"
)

// checks if the SubscriberPropertyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriberPropertyPayload{}

// SubscriberPropertyPayload struct for SubscriberPropertyPayload
type SubscriberPropertyPayload struct {
	Property             []PropertyItem `json:"property,omitempty"`
	SnippetId            string         `json:"snippet_id"`
	SnippetName          string         `json:"snippet_name"`
	TsgId                string         `json:"tsg_id"`
	AdditionalProperties map[string]interface{}
}

type _SubscriberPropertyPayload SubscriberPropertyPayload

// NewSubscriberPropertyPayload instantiates a new SubscriberPropertyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberPropertyPayload(snippetId string, snippetName string, tsgId string) *SubscriberPropertyPayload {
	this := SubscriberPropertyPayload{}
	this.SnippetId = snippetId
	this.SnippetName = snippetName
	this.TsgId = tsgId
	return &this
}

// NewSubscriberPropertyPayloadWithDefaults instantiates a new SubscriberPropertyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberPropertyPayloadWithDefaults() *SubscriberPropertyPayload {
	this := SubscriberPropertyPayload{}
	return &this
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *SubscriberPropertyPayload) GetProperty() []PropertyItem {
	if o == nil || IsNil(o.Property) {
		var ret []PropertyItem
		return ret
	}
	return o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberPropertyPayload) GetPropertyOk() ([]PropertyItem, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *SubscriberPropertyPayload) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given []PropertyItem and assigns it to the Property field.
func (o *SubscriberPropertyPayload) SetProperty(v []PropertyItem) {
	o.Property = v
}

// GetSnippetId returns the SnippetId field value
func (o *SubscriberPropertyPayload) GetSnippetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnippetId
}

// GetSnippetIdOk returns a tuple with the SnippetId field value
// and a boolean to check if the value has been set.
func (o *SubscriberPropertyPayload) GetSnippetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnippetId, true
}

// SetSnippetId sets field value
func (o *SubscriberPropertyPayload) SetSnippetId(v string) {
	o.SnippetId = v
}

// GetSnippetName returns the SnippetName field value
func (o *SubscriberPropertyPayload) GetSnippetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnippetName
}

// GetSnippetNameOk returns a tuple with the SnippetName field value
// and a boolean to check if the value has been set.
func (o *SubscriberPropertyPayload) GetSnippetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnippetName, true
}

// SetSnippetName sets field value
func (o *SubscriberPropertyPayload) SetSnippetName(v string) {
	o.SnippetName = v
}

// GetTsgId returns the TsgId field value
func (o *SubscriberPropertyPayload) GetTsgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TsgId
}

// GetTsgIdOk returns a tuple with the TsgId field value
// and a boolean to check if the value has been set.
func (o *SubscriberPropertyPayload) GetTsgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TsgId, true
}

// SetTsgId sets field value
func (o *SubscriberPropertyPayload) SetTsgId(v string) {
	o.TsgId = v
}

func (o SubscriberPropertyPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriberPropertyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	toSerialize["snippet_id"] = o.SnippetId
	toSerialize["snippet_name"] = o.SnippetName
	toSerialize["tsg_id"] = o.TsgId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SubscriberPropertyPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snippet_id",
		"snippet_name",
		"tsg_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriberPropertyPayload := _SubscriberPropertyPayload{}

	err = json.Unmarshal(data, &varSubscriberPropertyPayload)

	if err != nil {
		return err
	}

	*o = SubscriberPropertyPayload(varSubscriberPropertyPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "property")
		delete(additionalProperties, "snippet_id")
		delete(additionalProperties, "snippet_name")
		delete(additionalProperties, "tsg_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSubscriberPropertyPayload struct {
	value *SubscriberPropertyPayload
	isSet bool
}

func (v NullableSubscriberPropertyPayload) Get() *SubscriberPropertyPayload {
	return v.value
}

func (v *NullableSubscriberPropertyPayload) Set(val *SubscriberPropertyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberPropertyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberPropertyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberPropertyPayload(val *SubscriberPropertyPayload) *NullableSubscriberPropertyPayload {
	return &NullableSubscriberPropertyPayload{value: val, isSet: true}
}

func (v NullableSubscriberPropertyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberPropertyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
