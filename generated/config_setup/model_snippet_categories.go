/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SnippetCategories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnippetCategories{}

// SnippetCategories struct for SnippetCategories
type SnippetCategories struct {
	CreatedIn                     *time.Time    `json:"created_in,omitempty"`
	Description                   *string       `json:"description,omitempty"`
	DisplayName                   *string       `json:"display_name,omitempty"`
	DonorCreated                  *int32        `json:"donor_created,omitempty"`
	DonorSnippetFileId            *int32        `json:"donor_snippet_file_id,omitempty"`
	DonorSnippetVersion           *int32        `json:"donor_snippet_version,omitempty"`
	DonorTenantId                 *string       `json:"donor_tenant_id,omitempty"`
	DonorTenantName               *string       `json:"donor_tenant_name,omitempty"`
	DonorTsg                      *string       `json:"donor_tsg,omitempty"`
	EnablePrefix                  *bool         `json:"enable_prefix,omitempty"`
	Error                         *string       `json:"error,omitempty"`
	Folders                       []UsedFolders `json:"folders,omitempty"`
	Id                            string        `json:"id"`
	Labels                        []string      `json:"labels,omitempty"`
	LastUpdate                    *time.Time    `json:"last_update,omitempty"`
	MsgUuid                       *string       `json:"msg_uuid,omitempty"`
	Name                          string        `json:"name"`
	Prefix                        *string       `json:"prefix,omitempty"`
	RecipientPausedUpdate         *bool         `json:"recipient_paused_update,omitempty"`
	RecipientTenantId             *string       `json:"recipient_tenant_id,omitempty"`
	RecipientTenantName           *string       `json:"recipient_tenant_name,omitempty"`
	RecipientTsg                  *string       `json:"recipient_tsg,omitempty"`
	RecipientValidateBeforeUpdate *bool         `json:"recipient_validate_before_update,omitempty"`
	SharedIn                      *string       `json:"shared_in,omitempty"`
	SnippetUuid                   *string       `json:"snippet_uuid,omitempty"`
	Status                        *string       `json:"status,omitempty"`
	Type                          *string       `json:"type,omitempty"`
	Version                       *int32        `json:"version,omitempty"`
	AdditionalProperties          map[string]interface{}
}

type _SnippetCategories SnippetCategories

// NewSnippetCategories instantiates a new SnippetCategories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnippetCategories(id string, name string) *SnippetCategories {
	this := SnippetCategories{}
	this.Id = id
	this.Name = name
	return &this
}

// NewSnippetCategoriesWithDefaults instantiates a new SnippetCategories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnippetCategoriesWithDefaults() *SnippetCategories {
	this := SnippetCategories{}
	return &this
}

// GetCreatedIn returns the CreatedIn field value if set, zero value otherwise.
func (o *SnippetCategories) GetCreatedIn() time.Time {
	if o == nil || IsNil(o.CreatedIn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedIn
}

// GetCreatedInOk returns a tuple with the CreatedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetCreatedInOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedIn) {
		return nil, false
	}
	return o.CreatedIn, true
}

// HasCreatedIn returns a boolean if a field has been set.
func (o *SnippetCategories) HasCreatedIn() bool {
	if o != nil && !IsNil(o.CreatedIn) {
		return true
	}

	return false
}

// SetCreatedIn gets a reference to the given time.Time and assigns it to the CreatedIn field.
func (o *SnippetCategories) SetCreatedIn(v time.Time) {
	o.CreatedIn = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SnippetCategories) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SnippetCategories) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SnippetCategories) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *SnippetCategories) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *SnippetCategories) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *SnippetCategories) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDonorCreated returns the DonorCreated field value if set, zero value otherwise.
func (o *SnippetCategories) GetDonorCreated() int32 {
	if o == nil || IsNil(o.DonorCreated) {
		var ret int32
		return ret
	}
	return *o.DonorCreated
}

// GetDonorCreatedOk returns a tuple with the DonorCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDonorCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.DonorCreated) {
		return nil, false
	}
	return o.DonorCreated, true
}

// HasDonorCreated returns a boolean if a field has been set.
func (o *SnippetCategories) HasDonorCreated() bool {
	if o != nil && !IsNil(o.DonorCreated) {
		return true
	}

	return false
}

// SetDonorCreated gets a reference to the given int32 and assigns it to the DonorCreated field.
func (o *SnippetCategories) SetDonorCreated(v int32) {
	o.DonorCreated = &v
}

// GetDonorSnippetFileId returns the DonorSnippetFileId field value if set, zero value otherwise.
func (o *SnippetCategories) GetDonorSnippetFileId() int32 {
	if o == nil || IsNil(o.DonorSnippetFileId) {
		var ret int32
		return ret
	}
	return *o.DonorSnippetFileId
}

// GetDonorSnippetFileIdOk returns a tuple with the DonorSnippetFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDonorSnippetFileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DonorSnippetFileId) {
		return nil, false
	}
	return o.DonorSnippetFileId, true
}

// HasDonorSnippetFileId returns a boolean if a field has been set.
func (o *SnippetCategories) HasDonorSnippetFileId() bool {
	if o != nil && !IsNil(o.DonorSnippetFileId) {
		return true
	}

	return false
}

// SetDonorSnippetFileId gets a reference to the given int32 and assigns it to the DonorSnippetFileId field.
func (o *SnippetCategories) SetDonorSnippetFileId(v int32) {
	o.DonorSnippetFileId = &v
}

// GetDonorSnippetVersion returns the DonorSnippetVersion field value if set, zero value otherwise.
func (o *SnippetCategories) GetDonorSnippetVersion() int32 {
	if o == nil || IsNil(o.DonorSnippetVersion) {
		var ret int32
		return ret
	}
	return *o.DonorSnippetVersion
}

// GetDonorSnippetVersionOk returns a tuple with the DonorSnippetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDonorSnippetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.DonorSnippetVersion) {
		return nil, false
	}
	return o.DonorSnippetVersion, true
}

// HasDonorSnippetVersion returns a boolean if a field has been set.
func (o *SnippetCategories) HasDonorSnippetVersion() bool {
	if o != nil && !IsNil(o.DonorSnippetVersion) {
		return true
	}

	return false
}

// SetDonorSnippetVersion gets a reference to the given int32 and assigns it to the DonorSnippetVersion field.
func (o *SnippetCategories) SetDonorSnippetVersion(v int32) {
	o.DonorSnippetVersion = &v
}

// GetDonorTenantId returns the DonorTenantId field value if set, zero value otherwise.
func (o *SnippetCategories) GetDonorTenantId() string {
	if o == nil || IsNil(o.DonorTenantId) {
		var ret string
		return ret
	}
	return *o.DonorTenantId
}

// GetDonorTenantIdOk returns a tuple with the DonorTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDonorTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.DonorTenantId) {
		return nil, false
	}
	return o.DonorTenantId, true
}

// HasDonorTenantId returns a boolean if a field has been set.
func (o *SnippetCategories) HasDonorTenantId() bool {
	if o != nil && !IsNil(o.DonorTenantId) {
		return true
	}

	return false
}

// SetDonorTenantId gets a reference to the given string and assigns it to the DonorTenantId field.
func (o *SnippetCategories) SetDonorTenantId(v string) {
	o.DonorTenantId = &v
}

// GetDonorTenantName returns the DonorTenantName field value if set, zero value otherwise.
func (o *SnippetCategories) GetDonorTenantName() string {
	if o == nil || IsNil(o.DonorTenantName) {
		var ret string
		return ret
	}
	return *o.DonorTenantName
}

// GetDonorTenantNameOk returns a tuple with the DonorTenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDonorTenantNameOk() (*string, bool) {
	if o == nil || IsNil(o.DonorTenantName) {
		return nil, false
	}
	return o.DonorTenantName, true
}

// HasDonorTenantName returns a boolean if a field has been set.
func (o *SnippetCategories) HasDonorTenantName() bool {
	if o != nil && !IsNil(o.DonorTenantName) {
		return true
	}

	return false
}

// SetDonorTenantName gets a reference to the given string and assigns it to the DonorTenantName field.
func (o *SnippetCategories) SetDonorTenantName(v string) {
	o.DonorTenantName = &v
}

// GetDonorTsg returns the DonorTsg field value if set, zero value otherwise.
func (o *SnippetCategories) GetDonorTsg() string {
	if o == nil || IsNil(o.DonorTsg) {
		var ret string
		return ret
	}
	return *o.DonorTsg
}

// GetDonorTsgOk returns a tuple with the DonorTsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetDonorTsgOk() (*string, bool) {
	if o == nil || IsNil(o.DonorTsg) {
		return nil, false
	}
	return o.DonorTsg, true
}

// HasDonorTsg returns a boolean if a field has been set.
func (o *SnippetCategories) HasDonorTsg() bool {
	if o != nil && !IsNil(o.DonorTsg) {
		return true
	}

	return false
}

// SetDonorTsg gets a reference to the given string and assigns it to the DonorTsg field.
func (o *SnippetCategories) SetDonorTsg(v string) {
	o.DonorTsg = &v
}

// GetEnablePrefix returns the EnablePrefix field value if set, zero value otherwise.
func (o *SnippetCategories) GetEnablePrefix() bool {
	if o == nil || IsNil(o.EnablePrefix) {
		var ret bool
		return ret
	}
	return *o.EnablePrefix
}

// GetEnablePrefixOk returns a tuple with the EnablePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetEnablePrefixOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePrefix) {
		return nil, false
	}
	return o.EnablePrefix, true
}

// HasEnablePrefix returns a boolean if a field has been set.
func (o *SnippetCategories) HasEnablePrefix() bool {
	if o != nil && !IsNil(o.EnablePrefix) {
		return true
	}

	return false
}

// SetEnablePrefix gets a reference to the given bool and assigns it to the EnablePrefix field.
func (o *SnippetCategories) SetEnablePrefix(v bool) {
	o.EnablePrefix = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *SnippetCategories) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *SnippetCategories) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *SnippetCategories) SetError(v string) {
	o.Error = &v
}

// GetFolders returns the Folders field value if set, zero value otherwise.
func (o *SnippetCategories) GetFolders() []UsedFolders {
	if o == nil || IsNil(o.Folders) {
		var ret []UsedFolders
		return ret
	}
	return o.Folders
}

// GetFoldersOk returns a tuple with the Folders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetFoldersOk() ([]UsedFolders, bool) {
	if o == nil || IsNil(o.Folders) {
		return nil, false
	}
	return o.Folders, true
}

// HasFolders returns a boolean if a field has been set.
func (o *SnippetCategories) HasFolders() bool {
	if o != nil && !IsNil(o.Folders) {
		return true
	}

	return false
}

// SetFolders gets a reference to the given []UsedFolders and assigns it to the Folders field.
func (o *SnippetCategories) SetFolders(v []UsedFolders) {
	o.Folders = v
}

// GetId returns the Id field value
func (o *SnippetCategories) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SnippetCategories) SetId(v string) {
	o.Id = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *SnippetCategories) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *SnippetCategories) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *SnippetCategories) SetLabels(v []string) {
	o.Labels = v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *SnippetCategories) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *SnippetCategories) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *SnippetCategories) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

// GetMsgUuid returns the MsgUuid field value if set, zero value otherwise.
func (o *SnippetCategories) GetMsgUuid() string {
	if o == nil || IsNil(o.MsgUuid) {
		var ret string
		return ret
	}
	return *o.MsgUuid
}

// GetMsgUuidOk returns a tuple with the MsgUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetMsgUuidOk() (*string, bool) {
	if o == nil || IsNil(o.MsgUuid) {
		return nil, false
	}
	return o.MsgUuid, true
}

// HasMsgUuid returns a boolean if a field has been set.
func (o *SnippetCategories) HasMsgUuid() bool {
	if o != nil && !IsNil(o.MsgUuid) {
		return true
	}

	return false
}

// SetMsgUuid gets a reference to the given string and assigns it to the MsgUuid field.
func (o *SnippetCategories) SetMsgUuid(v string) {
	o.MsgUuid = &v
}

// GetName returns the Name field value
func (o *SnippetCategories) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SnippetCategories) SetName(v string) {
	o.Name = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *SnippetCategories) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *SnippetCategories) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *SnippetCategories) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRecipientPausedUpdate returns the RecipientPausedUpdate field value if set, zero value otherwise.
func (o *SnippetCategories) GetRecipientPausedUpdate() bool {
	if o == nil || IsNil(o.RecipientPausedUpdate) {
		var ret bool
		return ret
	}
	return *o.RecipientPausedUpdate
}

// GetRecipientPausedUpdateOk returns a tuple with the RecipientPausedUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetRecipientPausedUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.RecipientPausedUpdate) {
		return nil, false
	}
	return o.RecipientPausedUpdate, true
}

// HasRecipientPausedUpdate returns a boolean if a field has been set.
func (o *SnippetCategories) HasRecipientPausedUpdate() bool {
	if o != nil && !IsNil(o.RecipientPausedUpdate) {
		return true
	}

	return false
}

// SetRecipientPausedUpdate gets a reference to the given bool and assigns it to the RecipientPausedUpdate field.
func (o *SnippetCategories) SetRecipientPausedUpdate(v bool) {
	o.RecipientPausedUpdate = &v
}

// GetRecipientTenantId returns the RecipientTenantId field value if set, zero value otherwise.
func (o *SnippetCategories) GetRecipientTenantId() string {
	if o == nil || IsNil(o.RecipientTenantId) {
		var ret string
		return ret
	}
	return *o.RecipientTenantId
}

// GetRecipientTenantIdOk returns a tuple with the RecipientTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetRecipientTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientTenantId) {
		return nil, false
	}
	return o.RecipientTenantId, true
}

// HasRecipientTenantId returns a boolean if a field has been set.
func (o *SnippetCategories) HasRecipientTenantId() bool {
	if o != nil && !IsNil(o.RecipientTenantId) {
		return true
	}

	return false
}

// SetRecipientTenantId gets a reference to the given string and assigns it to the RecipientTenantId field.
func (o *SnippetCategories) SetRecipientTenantId(v string) {
	o.RecipientTenantId = &v
}

// GetRecipientTenantName returns the RecipientTenantName field value if set, zero value otherwise.
func (o *SnippetCategories) GetRecipientTenantName() string {
	if o == nil || IsNil(o.RecipientTenantName) {
		var ret string
		return ret
	}
	return *o.RecipientTenantName
}

// GetRecipientTenantNameOk returns a tuple with the RecipientTenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetRecipientTenantNameOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientTenantName) {
		return nil, false
	}
	return o.RecipientTenantName, true
}

// HasRecipientTenantName returns a boolean if a field has been set.
func (o *SnippetCategories) HasRecipientTenantName() bool {
	if o != nil && !IsNil(o.RecipientTenantName) {
		return true
	}

	return false
}

// SetRecipientTenantName gets a reference to the given string and assigns it to the RecipientTenantName field.
func (o *SnippetCategories) SetRecipientTenantName(v string) {
	o.RecipientTenantName = &v
}

// GetRecipientTsg returns the RecipientTsg field value if set, zero value otherwise.
func (o *SnippetCategories) GetRecipientTsg() string {
	if o == nil || IsNil(o.RecipientTsg) {
		var ret string
		return ret
	}
	return *o.RecipientTsg
}

// GetRecipientTsgOk returns a tuple with the RecipientTsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetRecipientTsgOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientTsg) {
		return nil, false
	}
	return o.RecipientTsg, true
}

// HasRecipientTsg returns a boolean if a field has been set.
func (o *SnippetCategories) HasRecipientTsg() bool {
	if o != nil && !IsNil(o.RecipientTsg) {
		return true
	}

	return false
}

// SetRecipientTsg gets a reference to the given string and assigns it to the RecipientTsg field.
func (o *SnippetCategories) SetRecipientTsg(v string) {
	o.RecipientTsg = &v
}

// GetRecipientValidateBeforeUpdate returns the RecipientValidateBeforeUpdate field value if set, zero value otherwise.
func (o *SnippetCategories) GetRecipientValidateBeforeUpdate() bool {
	if o == nil || IsNil(o.RecipientValidateBeforeUpdate) {
		var ret bool
		return ret
	}
	return *o.RecipientValidateBeforeUpdate
}

// GetRecipientValidateBeforeUpdateOk returns a tuple with the RecipientValidateBeforeUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetRecipientValidateBeforeUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.RecipientValidateBeforeUpdate) {
		return nil, false
	}
	return o.RecipientValidateBeforeUpdate, true
}

// HasRecipientValidateBeforeUpdate returns a boolean if a field has been set.
func (o *SnippetCategories) HasRecipientValidateBeforeUpdate() bool {
	if o != nil && !IsNil(o.RecipientValidateBeforeUpdate) {
		return true
	}

	return false
}

// SetRecipientValidateBeforeUpdate gets a reference to the given bool and assigns it to the RecipientValidateBeforeUpdate field.
func (o *SnippetCategories) SetRecipientValidateBeforeUpdate(v bool) {
	o.RecipientValidateBeforeUpdate = &v
}

// GetSharedIn returns the SharedIn field value if set, zero value otherwise.
func (o *SnippetCategories) GetSharedIn() string {
	if o == nil || IsNil(o.SharedIn) {
		var ret string
		return ret
	}
	return *o.SharedIn
}

// GetSharedInOk returns a tuple with the SharedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetSharedInOk() (*string, bool) {
	if o == nil || IsNil(o.SharedIn) {
		return nil, false
	}
	return o.SharedIn, true
}

// HasSharedIn returns a boolean if a field has been set.
func (o *SnippetCategories) HasSharedIn() bool {
	if o != nil && !IsNil(o.SharedIn) {
		return true
	}

	return false
}

// SetSharedIn gets a reference to the given string and assigns it to the SharedIn field.
func (o *SnippetCategories) SetSharedIn(v string) {
	o.SharedIn = &v
}

// GetSnippetUuid returns the SnippetUuid field value if set, zero value otherwise.
func (o *SnippetCategories) GetSnippetUuid() string {
	if o == nil || IsNil(o.SnippetUuid) {
		var ret string
		return ret
	}
	return *o.SnippetUuid
}

// GetSnippetUuidOk returns a tuple with the SnippetUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetSnippetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SnippetUuid) {
		return nil, false
	}
	return o.SnippetUuid, true
}

// HasSnippetUuid returns a boolean if a field has been set.
func (o *SnippetCategories) HasSnippetUuid() bool {
	if o != nil && !IsNil(o.SnippetUuid) {
		return true
	}

	return false
}

// SetSnippetUuid gets a reference to the given string and assigns it to the SnippetUuid field.
func (o *SnippetCategories) SetSnippetUuid(v string) {
	o.SnippetUuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SnippetCategories) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SnippetCategories) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SnippetCategories) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SnippetCategories) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SnippetCategories) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SnippetCategories) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SnippetCategories) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetCategories) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SnippetCategories) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *SnippetCategories) SetVersion(v int32) {
	o.Version = &v
}

func (o SnippetCategories) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnippetCategories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedIn) {
		toSerialize["created_in"] = o.CreatedIn
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.DonorCreated) {
		toSerialize["donor_created"] = o.DonorCreated
	}
	if !IsNil(o.DonorSnippetFileId) {
		toSerialize["donor_snippet_file_id"] = o.DonorSnippetFileId
	}
	if !IsNil(o.DonorSnippetVersion) {
		toSerialize["donor_snippet_version"] = o.DonorSnippetVersion
	}
	if !IsNil(o.DonorTenantId) {
		toSerialize["donor_tenant_id"] = o.DonorTenantId
	}
	if !IsNil(o.DonorTenantName) {
		toSerialize["donor_tenant_name"] = o.DonorTenantName
	}
	if !IsNil(o.DonorTsg) {
		toSerialize["donor_tsg"] = o.DonorTsg
	}
	if !IsNil(o.EnablePrefix) {
		toSerialize["enable_prefix"] = o.EnablePrefix
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Folders) {
		toSerialize["folders"] = o.Folders
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["last_update"] = o.LastUpdate
	}
	if !IsNil(o.MsgUuid) {
		toSerialize["msg_uuid"] = o.MsgUuid
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.RecipientPausedUpdate) {
		toSerialize["recipient_paused_update"] = o.RecipientPausedUpdate
	}
	if !IsNil(o.RecipientTenantId) {
		toSerialize["recipient_tenant_id"] = o.RecipientTenantId
	}
	if !IsNil(o.RecipientTenantName) {
		toSerialize["recipient_tenant_name"] = o.RecipientTenantName
	}
	if !IsNil(o.RecipientTsg) {
		toSerialize["recipient_tsg"] = o.RecipientTsg
	}
	if !IsNil(o.RecipientValidateBeforeUpdate) {
		toSerialize["recipient_validate_before_update"] = o.RecipientValidateBeforeUpdate
	}
	if !IsNil(o.SharedIn) {
		toSerialize["shared_in"] = o.SharedIn
	}
	if !IsNil(o.SnippetUuid) {
		toSerialize["snippet_uuid"] = o.SnippetUuid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnippetCategories) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnippetCategories := _SnippetCategories{}

	err = json.Unmarshal(data, &varSnippetCategories)

	if err != nil {
		return err
	}

	*o = SnippetCategories(varSnippetCategories)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_in")
		delete(additionalProperties, "description")
		delete(additionalProperties, "display_name")
		delete(additionalProperties, "donor_created")
		delete(additionalProperties, "donor_snippet_file_id")
		delete(additionalProperties, "donor_snippet_version")
		delete(additionalProperties, "donor_tenant_id")
		delete(additionalProperties, "donor_tenant_name")
		delete(additionalProperties, "donor_tsg")
		delete(additionalProperties, "enable_prefix")
		delete(additionalProperties, "error")
		delete(additionalProperties, "folders")
		delete(additionalProperties, "id")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "last_update")
		delete(additionalProperties, "msg_uuid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "recipient_paused_update")
		delete(additionalProperties, "recipient_tenant_id")
		delete(additionalProperties, "recipient_tenant_name")
		delete(additionalProperties, "recipient_tsg")
		delete(additionalProperties, "recipient_validate_before_update")
		delete(additionalProperties, "shared_in")
		delete(additionalProperties, "snippet_uuid")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnippetCategories struct {
	value *SnippetCategories
	isSet bool
}

func (v NullableSnippetCategories) Get() *SnippetCategories {
	return v.value
}

func (v *NullableSnippetCategories) Set(val *SnippetCategories) {
	v.value = val
	v.isSet = true
}

func (v NullableSnippetCategories) IsSet() bool {
	return v.isSet
}

func (v *NullableSnippetCategories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnippetCategories(val *SnippetCategories) *NullableSnippetCategories {
	return &NullableSnippetCategories{value: val, isSet: true}
}

func (v NullableSnippetCategories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnippetCategories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
