/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
	"time"
)

// checks if the SnippetShareProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnippetShareProperty{}

// SnippetShareProperty struct for SnippetShareProperty
type SnippetShareProperty struct {
	Created              *time.Time `json:"created,omitempty"`
	CreatedBy            *string    `json:"created_by,omitempty"`
	DonorTenant          *string    `json:"donor_tenant,omitempty"`
	DonorTsg             *string    `json:"donor_tsg,omitempty"`
	Error                *string    `json:"error,omitempty"`
	Id                   *int32     `json:"id,omitempty"`
	MsgUuid              *string    `json:"msg_uuid,omitempty"`
	PropertyName         *string    `json:"property_name,omitempty"`
	PropertyValue        *string    `json:"property_value,omitempty"`
	RecipientTenant      *string    `json:"recipient_tenant,omitempty"`
	RecipientTsg         *string    `json:"recipient_tsg,omitempty"`
	SnippetName          *string    `json:"snippet_name,omitempty"`
	SnippetUuid          *string    `json:"snippet_uuid,omitempty"`
	Status               *string    `json:"status,omitempty"`
	Updated              *time.Time `json:"updated,omitempty"`
	UpdatedBy            *string    `json:"updated_by,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnippetShareProperty SnippetShareProperty

// NewSnippetShareProperty instantiates a new SnippetShareProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnippetShareProperty() *SnippetShareProperty {
	this := SnippetShareProperty{}
	return &this
}

// NewSnippetSharePropertyWithDefaults instantiates a new SnippetShareProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnippetSharePropertyWithDefaults() *SnippetShareProperty {
	this := SnippetShareProperty{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *SnippetShareProperty) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *SnippetShareProperty) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDonorTenant returns the DonorTenant field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetDonorTenant() string {
	if o == nil || IsNil(o.DonorTenant) {
		var ret string
		return ret
	}
	return *o.DonorTenant
}

// GetDonorTenantOk returns a tuple with the DonorTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetDonorTenantOk() (*string, bool) {
	if o == nil || IsNil(o.DonorTenant) {
		return nil, false
	}
	return o.DonorTenant, true
}

// HasDonorTenant returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasDonorTenant() bool {
	if o != nil && !IsNil(o.DonorTenant) {
		return true
	}

	return false
}

// SetDonorTenant gets a reference to the given string and assigns it to the DonorTenant field.
func (o *SnippetShareProperty) SetDonorTenant(v string) {
	o.DonorTenant = &v
}

// GetDonorTsg returns the DonorTsg field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetDonorTsg() string {
	if o == nil || IsNil(o.DonorTsg) {
		var ret string
		return ret
	}
	return *o.DonorTsg
}

// GetDonorTsgOk returns a tuple with the DonorTsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetDonorTsgOk() (*string, bool) {
	if o == nil || IsNil(o.DonorTsg) {
		return nil, false
	}
	return o.DonorTsg, true
}

// HasDonorTsg returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasDonorTsg() bool {
	if o != nil && !IsNil(o.DonorTsg) {
		return true
	}

	return false
}

// SetDonorTsg gets a reference to the given string and assigns it to the DonorTsg field.
func (o *SnippetShareProperty) SetDonorTsg(v string) {
	o.DonorTsg = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *SnippetShareProperty) SetError(v string) {
	o.Error = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SnippetShareProperty) SetId(v int32) {
	o.Id = &v
}

// GetMsgUuid returns the MsgUuid field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetMsgUuid() string {
	if o == nil || IsNil(o.MsgUuid) {
		var ret string
		return ret
	}
	return *o.MsgUuid
}

// GetMsgUuidOk returns a tuple with the MsgUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetMsgUuidOk() (*string, bool) {
	if o == nil || IsNil(o.MsgUuid) {
		return nil, false
	}
	return o.MsgUuid, true
}

// HasMsgUuid returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasMsgUuid() bool {
	if o != nil && !IsNil(o.MsgUuid) {
		return true
	}

	return false
}

// SetMsgUuid gets a reference to the given string and assigns it to the MsgUuid field.
func (o *SnippetShareProperty) SetMsgUuid(v string) {
	o.MsgUuid = &v
}

// GetPropertyName returns the PropertyName field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetPropertyName() string {
	if o == nil || IsNil(o.PropertyName) {
		var ret string
		return ret
	}
	return *o.PropertyName
}

// GetPropertyNameOk returns a tuple with the PropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetPropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyName) {
		return nil, false
	}
	return o.PropertyName, true
}

// HasPropertyName returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasPropertyName() bool {
	if o != nil && !IsNil(o.PropertyName) {
		return true
	}

	return false
}

// SetPropertyName gets a reference to the given string and assigns it to the PropertyName field.
func (o *SnippetShareProperty) SetPropertyName(v string) {
	o.PropertyName = &v
}

// GetPropertyValue returns the PropertyValue field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetPropertyValue() string {
	if o == nil || IsNil(o.PropertyValue) {
		var ret string
		return ret
	}
	return *o.PropertyValue
}

// GetPropertyValueOk returns a tuple with the PropertyValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetPropertyValueOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyValue) {
		return nil, false
	}
	return o.PropertyValue, true
}

// HasPropertyValue returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasPropertyValue() bool {
	if o != nil && !IsNil(o.PropertyValue) {
		return true
	}

	return false
}

// SetPropertyValue gets a reference to the given string and assigns it to the PropertyValue field.
func (o *SnippetShareProperty) SetPropertyValue(v string) {
	o.PropertyValue = &v
}

// GetRecipientTenant returns the RecipientTenant field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetRecipientTenant() string {
	if o == nil || IsNil(o.RecipientTenant) {
		var ret string
		return ret
	}
	return *o.RecipientTenant
}

// GetRecipientTenantOk returns a tuple with the RecipientTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetRecipientTenantOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientTenant) {
		return nil, false
	}
	return o.RecipientTenant, true
}

// HasRecipientTenant returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasRecipientTenant() bool {
	if o != nil && !IsNil(o.RecipientTenant) {
		return true
	}

	return false
}

// SetRecipientTenant gets a reference to the given string and assigns it to the RecipientTenant field.
func (o *SnippetShareProperty) SetRecipientTenant(v string) {
	o.RecipientTenant = &v
}

// GetRecipientTsg returns the RecipientTsg field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetRecipientTsg() string {
	if o == nil || IsNil(o.RecipientTsg) {
		var ret string
		return ret
	}
	return *o.RecipientTsg
}

// GetRecipientTsgOk returns a tuple with the RecipientTsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetRecipientTsgOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientTsg) {
		return nil, false
	}
	return o.RecipientTsg, true
}

// HasRecipientTsg returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasRecipientTsg() bool {
	if o != nil && !IsNil(o.RecipientTsg) {
		return true
	}

	return false
}

// SetRecipientTsg gets a reference to the given string and assigns it to the RecipientTsg field.
func (o *SnippetShareProperty) SetRecipientTsg(v string) {
	o.RecipientTsg = &v
}

// GetSnippetName returns the SnippetName field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetSnippetName() string {
	if o == nil || IsNil(o.SnippetName) {
		var ret string
		return ret
	}
	return *o.SnippetName
}

// GetSnippetNameOk returns a tuple with the SnippetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetSnippetNameOk() (*string, bool) {
	if o == nil || IsNil(o.SnippetName) {
		return nil, false
	}
	return o.SnippetName, true
}

// HasSnippetName returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasSnippetName() bool {
	if o != nil && !IsNil(o.SnippetName) {
		return true
	}

	return false
}

// SetSnippetName gets a reference to the given string and assigns it to the SnippetName field.
func (o *SnippetShareProperty) SetSnippetName(v string) {
	o.SnippetName = &v
}

// GetSnippetUuid returns the SnippetUuid field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetSnippetUuid() string {
	if o == nil || IsNil(o.SnippetUuid) {
		var ret string
		return ret
	}
	return *o.SnippetUuid
}

// GetSnippetUuidOk returns a tuple with the SnippetUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetSnippetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SnippetUuid) {
		return nil, false
	}
	return o.SnippetUuid, true
}

// HasSnippetUuid returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasSnippetUuid() bool {
	if o != nil && !IsNil(o.SnippetUuid) {
		return true
	}

	return false
}

// SetSnippetUuid gets a reference to the given string and assigns it to the SnippetUuid field.
func (o *SnippetShareProperty) SetSnippetUuid(v string) {
	o.SnippetUuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SnippetShareProperty) SetStatus(v string) {
	o.Status = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *SnippetShareProperty) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *SnippetShareProperty) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnippetShareProperty) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *SnippetShareProperty) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *SnippetShareProperty) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

func (o SnippetShareProperty) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnippetShareProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.DonorTenant) {
		toSerialize["donor_tenant"] = o.DonorTenant
	}
	if !IsNil(o.DonorTsg) {
		toSerialize["donor_tsg"] = o.DonorTsg
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MsgUuid) {
		toSerialize["msg_uuid"] = o.MsgUuid
	}
	if !IsNil(o.PropertyName) {
		toSerialize["property_name"] = o.PropertyName
	}
	if !IsNil(o.PropertyValue) {
		toSerialize["property_value"] = o.PropertyValue
	}
	if !IsNil(o.RecipientTenant) {
		toSerialize["recipient_tenant"] = o.RecipientTenant
	}
	if !IsNil(o.RecipientTsg) {
		toSerialize["recipient_tsg"] = o.RecipientTsg
	}
	if !IsNil(o.SnippetName) {
		toSerialize["snippet_name"] = o.SnippetName
	}
	if !IsNil(o.SnippetUuid) {
		toSerialize["snippet_uuid"] = o.SnippetUuid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnippetShareProperty) UnmarshalJSON(data []byte) (err error) {
	varSnippetShareProperty := _SnippetShareProperty{}

	err = json.Unmarshal(data, &varSnippetShareProperty)

	if err != nil {
		return err
	}

	*o = SnippetShareProperty(varSnippetShareProperty)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "created_by")
		delete(additionalProperties, "donor_tenant")
		delete(additionalProperties, "donor_tsg")
		delete(additionalProperties, "error")
		delete(additionalProperties, "id")
		delete(additionalProperties, "msg_uuid")
		delete(additionalProperties, "property_name")
		delete(additionalProperties, "property_value")
		delete(additionalProperties, "recipient_tenant")
		delete(additionalProperties, "recipient_tsg")
		delete(additionalProperties, "snippet_name")
		delete(additionalProperties, "snippet_uuid")
		delete(additionalProperties, "status")
		delete(additionalProperties, "updated")
		delete(additionalProperties, "updated_by")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnippetShareProperty struct {
	value *SnippetShareProperty
	isSet bool
}

func (v NullableSnippetShareProperty) Get() *SnippetShareProperty {
	return v.value
}

func (v *NullableSnippetShareProperty) Set(val *SnippetShareProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableSnippetShareProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableSnippetShareProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnippetShareProperty(val *SnippetShareProperty) *NullableSnippetShareProperty {
	return &NullableSnippetShareProperty{value: val, isSet: true}
}

func (v NullableSnippetShareProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnippetShareProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
