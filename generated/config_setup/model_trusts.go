/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
)

// checks if the Trusts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Trusts{}

// Trusts struct for Trusts
type Trusts struct {
	DonorTenantName      *string       `json:"donor_tenant_name,omitempty"`
	Psk                  *string       `json:"psk,omitempty"`
	RecipientTenantName  *string       `json:"recipient_tenant_name,omitempty"`
	TrustId              NullableInt32 `json:"trust_id,omitempty"`
	Tsg                  *string       `json:"tsg,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Trusts Trusts

// NewTrusts instantiates a new Trusts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrusts() *Trusts {
	this := Trusts{}
	return &this
}

// NewTrustsWithDefaults instantiates a new Trusts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustsWithDefaults() *Trusts {
	this := Trusts{}
	return &this
}

// GetDonorTenantName returns the DonorTenantName field value if set, zero value otherwise.
func (o *Trusts) GetDonorTenantName() string {
	if o == nil || IsNil(o.DonorTenantName) {
		var ret string
		return ret
	}
	return *o.DonorTenantName
}

// GetDonorTenantNameOk returns a tuple with the DonorTenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trusts) GetDonorTenantNameOk() (*string, bool) {
	if o == nil || IsNil(o.DonorTenantName) {
		return nil, false
	}
	return o.DonorTenantName, true
}

// HasDonorTenantName returns a boolean if a field has been set.
func (o *Trusts) HasDonorTenantName() bool {
	if o != nil && !IsNil(o.DonorTenantName) {
		return true
	}

	return false
}

// SetDonorTenantName gets a reference to the given string and assigns it to the DonorTenantName field.
func (o *Trusts) SetDonorTenantName(v string) {
	o.DonorTenantName = &v
}

// GetPsk returns the Psk field value if set, zero value otherwise.
func (o *Trusts) GetPsk() string {
	if o == nil || IsNil(o.Psk) {
		var ret string
		return ret
	}
	return *o.Psk
}

// GetPskOk returns a tuple with the Psk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trusts) GetPskOk() (*string, bool) {
	if o == nil || IsNil(o.Psk) {
		return nil, false
	}
	return o.Psk, true
}

// HasPsk returns a boolean if a field has been set.
func (o *Trusts) HasPsk() bool {
	if o != nil && !IsNil(o.Psk) {
		return true
	}

	return false
}

// SetPsk gets a reference to the given string and assigns it to the Psk field.
func (o *Trusts) SetPsk(v string) {
	o.Psk = &v
}

// GetRecipientTenantName returns the RecipientTenantName field value if set, zero value otherwise.
func (o *Trusts) GetRecipientTenantName() string {
	if o == nil || IsNil(o.RecipientTenantName) {
		var ret string
		return ret
	}
	return *o.RecipientTenantName
}

// GetRecipientTenantNameOk returns a tuple with the RecipientTenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trusts) GetRecipientTenantNameOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientTenantName) {
		return nil, false
	}
	return o.RecipientTenantName, true
}

// HasRecipientTenantName returns a boolean if a field has been set.
func (o *Trusts) HasRecipientTenantName() bool {
	if o != nil && !IsNil(o.RecipientTenantName) {
		return true
	}

	return false
}

// SetRecipientTenantName gets a reference to the given string and assigns it to the RecipientTenantName field.
func (o *Trusts) SetRecipientTenantName(v string) {
	o.RecipientTenantName = &v
}

// GetTrustId returns the TrustId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trusts) GetTrustId() int32 {
	if o == nil || IsNil(o.TrustId.Get()) {
		var ret int32
		return ret
	}
	return *o.TrustId.Get()
}

// GetTrustIdOk returns a tuple with the TrustId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trusts) GetTrustIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrustId.Get(), o.TrustId.IsSet()
}

// HasTrustId returns a boolean if a field has been set.
func (o *Trusts) HasTrustId() bool {
	if o != nil && o.TrustId.IsSet() {
		return true
	}

	return false
}

// SetTrustId gets a reference to the given NullableInt32 and assigns it to the TrustId field.
func (o *Trusts) SetTrustId(v int32) {
	o.TrustId.Set(&v)
}

// SetTrustIdNil sets the value for TrustId to be an explicit nil
func (o *Trusts) SetTrustIdNil() {
	o.TrustId.Set(nil)
}

// UnsetTrustId ensures that no value is present for TrustId, not even an explicit nil
func (o *Trusts) UnsetTrustId() {
	o.TrustId.Unset()
}

// GetTsg returns the Tsg field value if set, zero value otherwise.
func (o *Trusts) GetTsg() string {
	if o == nil || IsNil(o.Tsg) {
		var ret string
		return ret
	}
	return *o.Tsg
}

// GetTsgOk returns a tuple with the Tsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trusts) GetTsgOk() (*string, bool) {
	if o == nil || IsNil(o.Tsg) {
		return nil, false
	}
	return o.Tsg, true
}

// HasTsg returns a boolean if a field has been set.
func (o *Trusts) HasTsg() bool {
	if o != nil && !IsNil(o.Tsg) {
		return true
	}

	return false
}

// SetTsg gets a reference to the given string and assigns it to the Tsg field.
func (o *Trusts) SetTsg(v string) {
	o.Tsg = &v
}

func (o Trusts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Trusts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DonorTenantName) {
		toSerialize["donor_tenant_name"] = o.DonorTenantName
	}
	if !IsNil(o.Psk) {
		toSerialize["psk"] = o.Psk
	}
	if !IsNil(o.RecipientTenantName) {
		toSerialize["recipient_tenant_name"] = o.RecipientTenantName
	}
	if o.TrustId.IsSet() {
		toSerialize["trust_id"] = o.TrustId.Get()
	}
	if !IsNil(o.Tsg) {
		toSerialize["tsg"] = o.Tsg
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Trusts) UnmarshalJSON(data []byte) (err error) {
	varTrusts := _Trusts{}

	err = json.Unmarshal(data, &varTrusts)

	if err != nil {
		return err
	}

	*o = Trusts(varTrusts)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "donor_tenant_name")
		delete(additionalProperties, "psk")
		delete(additionalProperties, "recipient_tenant_name")
		delete(additionalProperties, "trust_id")
		delete(additionalProperties, "tsg")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTrusts struct {
	value *Trusts
	isSet bool
}

func (v NullableTrusts) Get() *Trusts {
	return v.value
}

func (v *NullableTrusts) Set(val *Trusts) {
	v.value = val
	v.isSet = true
}

func (v NullableTrusts) IsSet() bool {
	return v.isSet
}

func (v *NullableTrusts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrusts(val *Trusts) *NullableTrusts {
	return &NullableTrusts{value: val, isSet: true}
}

func (v NullableTrusts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrusts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
