/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
)

// checks if the DeletedSubscriber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletedSubscriber{}

// DeletedSubscriber struct for DeletedSubscriber
type DeletedSubscriber struct {
	Details              *string           `json:"details,omitempty"`
	Info                 *SnippetShareInfo `json:"info,omitempty"`
	Status               *string           `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeletedSubscriber DeletedSubscriber

// NewDeletedSubscriber instantiates a new DeletedSubscriber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletedSubscriber() *DeletedSubscriber {
	this := DeletedSubscriber{}
	return &this
}

// NewDeletedSubscriberWithDefaults instantiates a new DeletedSubscriber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletedSubscriberWithDefaults() *DeletedSubscriber {
	this := DeletedSubscriber{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *DeletedSubscriber) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriber) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *DeletedSubscriber) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *DeletedSubscriber) SetDetails(v string) {
	o.Details = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *DeletedSubscriber) GetInfo() SnippetShareInfo {
	if o == nil || IsNil(o.Info) {
		var ret SnippetShareInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriber) GetInfoOk() (*SnippetShareInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *DeletedSubscriber) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given SnippetShareInfo and assigns it to the Info field.
func (o *DeletedSubscriber) SetInfo(v SnippetShareInfo) {
	o.Info = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeletedSubscriber) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriber) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeletedSubscriber) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeletedSubscriber) SetStatus(v string) {
	o.Status = &v
}

func (o DeletedSubscriber) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletedSubscriber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeletedSubscriber) UnmarshalJSON(data []byte) (err error) {
	varDeletedSubscriber := _DeletedSubscriber{}

	err = json.Unmarshal(data, &varDeletedSubscriber)

	if err != nil {
		return err
	}

	*o = DeletedSubscriber(varDeletedSubscriber)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "details")
		delete(additionalProperties, "info")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeletedSubscriber struct {
	value *DeletedSubscriber
	isSet bool
}

func (v NullableDeletedSubscriber) Get() *DeletedSubscriber {
	return v.value
}

func (v *NullableDeletedSubscriber) Set(val *DeletedSubscriber) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletedSubscriber) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletedSubscriber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletedSubscriber(val *DeletedSubscriber) *NullableDeletedSubscriber {
	return &NullableDeletedSubscriber{value: val, isSet: true}
}

func (v NullableDeletedSubscriber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletedSubscriber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
