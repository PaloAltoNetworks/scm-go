/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
)

// checks if the CommonSnippetSnapshotPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonSnippetSnapshotPayload{}

// CommonSnippetSnapshotPayload struct for CommonSnippetSnapshotPayload
type CommonSnippetSnapshotPayload struct {
	Id                   *string `json:"id,omitempty"`
	KeepLocal            *bool   `json:"keep_local,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonSnippetSnapshotPayload CommonSnippetSnapshotPayload

// NewCommonSnippetSnapshotPayload instantiates a new CommonSnippetSnapshotPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonSnippetSnapshotPayload() *CommonSnippetSnapshotPayload {
	this := CommonSnippetSnapshotPayload{}
	return &this
}

// NewCommonSnippetSnapshotPayloadWithDefaults instantiates a new CommonSnippetSnapshotPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonSnippetSnapshotPayloadWithDefaults() *CommonSnippetSnapshotPayload {
	this := CommonSnippetSnapshotPayload{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonSnippetSnapshotPayload) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonSnippetSnapshotPayload) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonSnippetSnapshotPayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonSnippetSnapshotPayload) SetId(v string) {
	o.Id = &v
}

// GetKeepLocal returns the KeepLocal field value if set, zero value otherwise.
func (o *CommonSnippetSnapshotPayload) GetKeepLocal() bool {
	if o == nil || IsNil(o.KeepLocal) {
		var ret bool
		return ret
	}
	return *o.KeepLocal
}

// GetKeepLocalOk returns a tuple with the KeepLocal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonSnippetSnapshotPayload) GetKeepLocalOk() (*bool, bool) {
	if o == nil || IsNil(o.KeepLocal) {
		return nil, false
	}
	return o.KeepLocal, true
}

// HasKeepLocal returns a boolean if a field has been set.
func (o *CommonSnippetSnapshotPayload) HasKeepLocal() bool {
	if o != nil && !IsNil(o.KeepLocal) {
		return true
	}

	return false
}

// SetKeepLocal gets a reference to the given bool and assigns it to the KeepLocal field.
func (o *CommonSnippetSnapshotPayload) SetKeepLocal(v bool) {
	o.KeepLocal = &v
}

func (o CommonSnippetSnapshotPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonSnippetSnapshotPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.KeepLocal) {
		toSerialize["keep_local"] = o.KeepLocal
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonSnippetSnapshotPayload) UnmarshalJSON(data []byte) (err error) {
	varCommonSnippetSnapshotPayload := _CommonSnippetSnapshotPayload{}

	err = json.Unmarshal(data, &varCommonSnippetSnapshotPayload)

	if err != nil {
		return err
	}

	*o = CommonSnippetSnapshotPayload(varCommonSnippetSnapshotPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "keep_local")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonSnippetSnapshotPayload struct {
	value *CommonSnippetSnapshotPayload
	isSet bool
}

func (v NullableCommonSnippetSnapshotPayload) Get() *CommonSnippetSnapshotPayload {
	return v.value
}

func (v *NullableCommonSnippetSnapshotPayload) Set(val *CommonSnippetSnapshotPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonSnippetSnapshotPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonSnippetSnapshotPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonSnippetSnapshotPayload(val *CommonSnippetSnapshotPayload) *NullableCommonSnippetSnapshotPayload {
	return &NullableCommonSnippetSnapshotPayload{value: val, isSet: true}
}

func (v NullableCommonSnippetSnapshotPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonSnippetSnapshotPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
