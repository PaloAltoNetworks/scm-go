/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Devices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Devices{}

// Devices struct for Devices
type Devices struct {
	AntiVirusVersion   *string                          `json:"anti_virus_version,omitempty"`
	AppReleaseDate     *string                          `json:"app_release_date,omitempty"`
	AppVersion         *string                          `json:"app_version,omitempty"`
	AvReleaseDate      *string                          `json:"av_release_date,omitempty"`
	AvailableLicensess []DevicesAvailableLicensessInner `json:"available_licensess,omitempty"`
	ConnectedSince     *time.Time                       `json:"connected_since,omitempty"`
	// The description of the device
	Description       *string `json:"description,omitempty"`
	DevCertDetail     *string `json:"dev_cert_detail,omitempty"`
	DevCertExpiryDate *string `json:"dev_cert_expiry_date,omitempty"`
	// The display name of the device
	DisplayName *string `json:"display_name,omitempty"`
	// The product family of the device
	Family *string `json:"family,omitempty"`
	// The folder containing the device
	Folder         string  `json:"folder"`
	GpClientVerion *string `json:"gp_client_verion,omitempty"`
	GpDataVersion  *string `json:"gp_data_version,omitempty"`
	HaPeerSerial   *string `json:"ha_peer_serial,omitempty"`
	HaPeerState    *string `json:"ha_peer_state,omitempty"`
	HaState        *string `json:"ha_state,omitempty"`
	// The hostname of the device
	Hostname *string `json:"hostname,omitempty"`
	// The UUID of the device
	Id                string                          `json:"id"`
	InstalledLicenses []DevicesInstalledLicensesInner `json:"installed_licenses,omitempty"`
	IotReleaseDate    *string                         `json:"iot_release_date,omitempty"`
	IotVersion        *string                         `json:"iot_version,omitempty"`
	// The IPv6 address of the device
	IpV6Address *string `json:"ipV6_address,omitempty"`
	// The IPv4 address of the device
	IpAddress   *string `json:"ip_address,omitempty"`
	IsConnected *bool   `json:"is_connected,omitempty"`
	// Labels assigned to the device
	Labels       []string `json:"labels,omitempty"`
	LicenseMatch *bool    `json:"license_match,omitempty"`
	LogDbVersion *string  `json:"log_db_version,omitempty"`
	// The MAC address of the device
	MacAddress *string `json:"mac_address,omitempty"`
	// The model of the device
	Model *string `json:"model,omitempty"`
	// The name of the device
	Name string `json:"name"`
	// Snippets associated with the device
	Snippets             []string `json:"snippets,omitempty"`
	SoftwareVersion      *string  `json:"software_version,omitempty"`
	ThreatReleaseDate    *string  `json:"threat_release_date,omitempty"`
	ThreatVersion        *string  `json:"threat_version,omitempty"`
	Uptime               *string  `json:"uptime,omitempty"`
	UrlDbType            *string  `json:"url_db_type,omitempty"`
	UrlDbVer             *string  `json:"url_db_ver,omitempty"`
	VmState              *string  `json:"vm_state,omitempty"`
	WfReleaseDate        *string  `json:"wf_release_date,omitempty"`
	WfVer                *string  `json:"wf_ver,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Devices Devices

// NewDevices instantiates a new Devices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevices(folder string, id string, name string) *Devices {
	this := Devices{}
	this.Folder = folder
	this.Id = id
	this.Name = name
	return &this
}

// NewDevicesWithDefaults instantiates a new Devices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicesWithDefaults() *Devices {
	this := Devices{}
	return &this
}

// GetAntiVirusVersion returns the AntiVirusVersion field value if set, zero value otherwise.
func (o *Devices) GetAntiVirusVersion() string {
	if o == nil || IsNil(o.AntiVirusVersion) {
		var ret string
		return ret
	}
	return *o.AntiVirusVersion
}

// GetAntiVirusVersionOk returns a tuple with the AntiVirusVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetAntiVirusVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AntiVirusVersion) {
		return nil, false
	}
	return o.AntiVirusVersion, true
}

// HasAntiVirusVersion returns a boolean if a field has been set.
func (o *Devices) HasAntiVirusVersion() bool {
	if o != nil && !IsNil(o.AntiVirusVersion) {
		return true
	}

	return false
}

// SetAntiVirusVersion gets a reference to the given string and assigns it to the AntiVirusVersion field.
func (o *Devices) SetAntiVirusVersion(v string) {
	o.AntiVirusVersion = &v
}

// GetAppReleaseDate returns the AppReleaseDate field value if set, zero value otherwise.
func (o *Devices) GetAppReleaseDate() string {
	if o == nil || IsNil(o.AppReleaseDate) {
		var ret string
		return ret
	}
	return *o.AppReleaseDate
}

// GetAppReleaseDateOk returns a tuple with the AppReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetAppReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.AppReleaseDate) {
		return nil, false
	}
	return o.AppReleaseDate, true
}

// HasAppReleaseDate returns a boolean if a field has been set.
func (o *Devices) HasAppReleaseDate() bool {
	if o != nil && !IsNil(o.AppReleaseDate) {
		return true
	}

	return false
}

// SetAppReleaseDate gets a reference to the given string and assigns it to the AppReleaseDate field.
func (o *Devices) SetAppReleaseDate(v string) {
	o.AppReleaseDate = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *Devices) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *Devices) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *Devices) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetAvReleaseDate returns the AvReleaseDate field value if set, zero value otherwise.
func (o *Devices) GetAvReleaseDate() string {
	if o == nil || IsNil(o.AvReleaseDate) {
		var ret string
		return ret
	}
	return *o.AvReleaseDate
}

// GetAvReleaseDateOk returns a tuple with the AvReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetAvReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.AvReleaseDate) {
		return nil, false
	}
	return o.AvReleaseDate, true
}

// HasAvReleaseDate returns a boolean if a field has been set.
func (o *Devices) HasAvReleaseDate() bool {
	if o != nil && !IsNil(o.AvReleaseDate) {
		return true
	}

	return false
}

// SetAvReleaseDate gets a reference to the given string and assigns it to the AvReleaseDate field.
func (o *Devices) SetAvReleaseDate(v string) {
	o.AvReleaseDate = &v
}

// GetAvailableLicensess returns the AvailableLicensess field value if set, zero value otherwise.
func (o *Devices) GetAvailableLicensess() []DevicesAvailableLicensessInner {
	if o == nil || IsNil(o.AvailableLicensess) {
		var ret []DevicesAvailableLicensessInner
		return ret
	}
	return o.AvailableLicensess
}

// GetAvailableLicensessOk returns a tuple with the AvailableLicensess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetAvailableLicensessOk() ([]DevicesAvailableLicensessInner, bool) {
	if o == nil || IsNil(o.AvailableLicensess) {
		return nil, false
	}
	return o.AvailableLicensess, true
}

// HasAvailableLicensess returns a boolean if a field has been set.
func (o *Devices) HasAvailableLicensess() bool {
	if o != nil && !IsNil(o.AvailableLicensess) {
		return true
	}

	return false
}

// SetAvailableLicensess gets a reference to the given []DevicesAvailableLicensessInner and assigns it to the AvailableLicensess field.
func (o *Devices) SetAvailableLicensess(v []DevicesAvailableLicensessInner) {
	o.AvailableLicensess = v
}

// GetConnectedSince returns the ConnectedSince field value if set, zero value otherwise.
func (o *Devices) GetConnectedSince() time.Time {
	if o == nil || IsNil(o.ConnectedSince) {
		var ret time.Time
		return ret
	}
	return *o.ConnectedSince
}

// GetConnectedSinceOk returns a tuple with the ConnectedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetConnectedSinceOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ConnectedSince) {
		return nil, false
	}
	return o.ConnectedSince, true
}

// HasConnectedSince returns a boolean if a field has been set.
func (o *Devices) HasConnectedSince() bool {
	if o != nil && !IsNil(o.ConnectedSince) {
		return true
	}

	return false
}

// SetConnectedSince gets a reference to the given time.Time and assigns it to the ConnectedSince field.
func (o *Devices) SetConnectedSince(v time.Time) {
	o.ConnectedSince = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Devices) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Devices) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Devices) SetDescription(v string) {
	o.Description = &v
}

// GetDevCertDetail returns the DevCertDetail field value if set, zero value otherwise.
func (o *Devices) GetDevCertDetail() string {
	if o == nil || IsNil(o.DevCertDetail) {
		var ret string
		return ret
	}
	return *o.DevCertDetail
}

// GetDevCertDetailOk returns a tuple with the DevCertDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetDevCertDetailOk() (*string, bool) {
	if o == nil || IsNil(o.DevCertDetail) {
		return nil, false
	}
	return o.DevCertDetail, true
}

// HasDevCertDetail returns a boolean if a field has been set.
func (o *Devices) HasDevCertDetail() bool {
	if o != nil && !IsNil(o.DevCertDetail) {
		return true
	}

	return false
}

// SetDevCertDetail gets a reference to the given string and assigns it to the DevCertDetail field.
func (o *Devices) SetDevCertDetail(v string) {
	o.DevCertDetail = &v
}

// GetDevCertExpiryDate returns the DevCertExpiryDate field value if set, zero value otherwise.
func (o *Devices) GetDevCertExpiryDate() string {
	if o == nil || IsNil(o.DevCertExpiryDate) {
		var ret string
		return ret
	}
	return *o.DevCertExpiryDate
}

// GetDevCertExpiryDateOk returns a tuple with the DevCertExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetDevCertExpiryDateOk() (*string, bool) {
	if o == nil || IsNil(o.DevCertExpiryDate) {
		return nil, false
	}
	return o.DevCertExpiryDate, true
}

// HasDevCertExpiryDate returns a boolean if a field has been set.
func (o *Devices) HasDevCertExpiryDate() bool {
	if o != nil && !IsNil(o.DevCertExpiryDate) {
		return true
	}

	return false
}

// SetDevCertExpiryDate gets a reference to the given string and assigns it to the DevCertExpiryDate field.
func (o *Devices) SetDevCertExpiryDate(v string) {
	o.DevCertExpiryDate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Devices) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Devices) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Devices) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *Devices) GetFamily() string {
	if o == nil || IsNil(o.Family) {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.Family) {
		return nil, false
	}
	return o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *Devices) HasFamily() bool {
	if o != nil && !IsNil(o.Family) {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *Devices) SetFamily(v string) {
	o.Family = &v
}

// GetFolder returns the Folder field value
func (o *Devices) GetFolder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Folder
}

// GetFolderOk returns a tuple with the Folder field value
// and a boolean to check if the value has been set.
func (o *Devices) GetFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Folder, true
}

// SetFolder sets field value
func (o *Devices) SetFolder(v string) {
	o.Folder = v
}

// GetGpClientVerion returns the GpClientVerion field value if set, zero value otherwise.
func (o *Devices) GetGpClientVerion() string {
	if o == nil || IsNil(o.GpClientVerion) {
		var ret string
		return ret
	}
	return *o.GpClientVerion
}

// GetGpClientVerionOk returns a tuple with the GpClientVerion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetGpClientVerionOk() (*string, bool) {
	if o == nil || IsNil(o.GpClientVerion) {
		return nil, false
	}
	return o.GpClientVerion, true
}

// HasGpClientVerion returns a boolean if a field has been set.
func (o *Devices) HasGpClientVerion() bool {
	if o != nil && !IsNil(o.GpClientVerion) {
		return true
	}

	return false
}

// SetGpClientVerion gets a reference to the given string and assigns it to the GpClientVerion field.
func (o *Devices) SetGpClientVerion(v string) {
	o.GpClientVerion = &v
}

// GetGpDataVersion returns the GpDataVersion field value if set, zero value otherwise.
func (o *Devices) GetGpDataVersion() string {
	if o == nil || IsNil(o.GpDataVersion) {
		var ret string
		return ret
	}
	return *o.GpDataVersion
}

// GetGpDataVersionOk returns a tuple with the GpDataVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetGpDataVersionOk() (*string, bool) {
	if o == nil || IsNil(o.GpDataVersion) {
		return nil, false
	}
	return o.GpDataVersion, true
}

// HasGpDataVersion returns a boolean if a field has been set.
func (o *Devices) HasGpDataVersion() bool {
	if o != nil && !IsNil(o.GpDataVersion) {
		return true
	}

	return false
}

// SetGpDataVersion gets a reference to the given string and assigns it to the GpDataVersion field.
func (o *Devices) SetGpDataVersion(v string) {
	o.GpDataVersion = &v
}

// GetHaPeerSerial returns the HaPeerSerial field value if set, zero value otherwise.
func (o *Devices) GetHaPeerSerial() string {
	if o == nil || IsNil(o.HaPeerSerial) {
		var ret string
		return ret
	}
	return *o.HaPeerSerial
}

// GetHaPeerSerialOk returns a tuple with the HaPeerSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetHaPeerSerialOk() (*string, bool) {
	if o == nil || IsNil(o.HaPeerSerial) {
		return nil, false
	}
	return o.HaPeerSerial, true
}

// HasHaPeerSerial returns a boolean if a field has been set.
func (o *Devices) HasHaPeerSerial() bool {
	if o != nil && !IsNil(o.HaPeerSerial) {
		return true
	}

	return false
}

// SetHaPeerSerial gets a reference to the given string and assigns it to the HaPeerSerial field.
func (o *Devices) SetHaPeerSerial(v string) {
	o.HaPeerSerial = &v
}

// GetHaPeerState returns the HaPeerState field value if set, zero value otherwise.
func (o *Devices) GetHaPeerState() string {
	if o == nil || IsNil(o.HaPeerState) {
		var ret string
		return ret
	}
	return *o.HaPeerState
}

// GetHaPeerStateOk returns a tuple with the HaPeerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetHaPeerStateOk() (*string, bool) {
	if o == nil || IsNil(o.HaPeerState) {
		return nil, false
	}
	return o.HaPeerState, true
}

// HasHaPeerState returns a boolean if a field has been set.
func (o *Devices) HasHaPeerState() bool {
	if o != nil && !IsNil(o.HaPeerState) {
		return true
	}

	return false
}

// SetHaPeerState gets a reference to the given string and assigns it to the HaPeerState field.
func (o *Devices) SetHaPeerState(v string) {
	o.HaPeerState = &v
}

// GetHaState returns the HaState field value if set, zero value otherwise.
func (o *Devices) GetHaState() string {
	if o == nil || IsNil(o.HaState) {
		var ret string
		return ret
	}
	return *o.HaState
}

// GetHaStateOk returns a tuple with the HaState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetHaStateOk() (*string, bool) {
	if o == nil || IsNil(o.HaState) {
		return nil, false
	}
	return o.HaState, true
}

// HasHaState returns a boolean if a field has been set.
func (o *Devices) HasHaState() bool {
	if o != nil && !IsNil(o.HaState) {
		return true
	}

	return false
}

// SetHaState gets a reference to the given string and assigns it to the HaState field.
func (o *Devices) SetHaState(v string) {
	o.HaState = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *Devices) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *Devices) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *Devices) SetHostname(v string) {
	o.Hostname = &v
}

// GetId returns the Id field value
func (o *Devices) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Devices) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Devices) SetId(v string) {
	o.Id = v
}

// GetInstalledLicenses returns the InstalledLicenses field value if set, zero value otherwise.
func (o *Devices) GetInstalledLicenses() []DevicesInstalledLicensesInner {
	if o == nil || IsNil(o.InstalledLicenses) {
		var ret []DevicesInstalledLicensesInner
		return ret
	}
	return o.InstalledLicenses
}

// GetInstalledLicensesOk returns a tuple with the InstalledLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetInstalledLicensesOk() ([]DevicesInstalledLicensesInner, bool) {
	if o == nil || IsNil(o.InstalledLicenses) {
		return nil, false
	}
	return o.InstalledLicenses, true
}

// HasInstalledLicenses returns a boolean if a field has been set.
func (o *Devices) HasInstalledLicenses() bool {
	if o != nil && !IsNil(o.InstalledLicenses) {
		return true
	}

	return false
}

// SetInstalledLicenses gets a reference to the given []DevicesInstalledLicensesInner and assigns it to the InstalledLicenses field.
func (o *Devices) SetInstalledLicenses(v []DevicesInstalledLicensesInner) {
	o.InstalledLicenses = v
}

// GetIotReleaseDate returns the IotReleaseDate field value if set, zero value otherwise.
func (o *Devices) GetIotReleaseDate() string {
	if o == nil || IsNil(o.IotReleaseDate) {
		var ret string
		return ret
	}
	return *o.IotReleaseDate
}

// GetIotReleaseDateOk returns a tuple with the IotReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetIotReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.IotReleaseDate) {
		return nil, false
	}
	return o.IotReleaseDate, true
}

// HasIotReleaseDate returns a boolean if a field has been set.
func (o *Devices) HasIotReleaseDate() bool {
	if o != nil && !IsNil(o.IotReleaseDate) {
		return true
	}

	return false
}

// SetIotReleaseDate gets a reference to the given string and assigns it to the IotReleaseDate field.
func (o *Devices) SetIotReleaseDate(v string) {
	o.IotReleaseDate = &v
}

// GetIotVersion returns the IotVersion field value if set, zero value otherwise.
func (o *Devices) GetIotVersion() string {
	if o == nil || IsNil(o.IotVersion) {
		var ret string
		return ret
	}
	return *o.IotVersion
}

// GetIotVersionOk returns a tuple with the IotVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetIotVersionOk() (*string, bool) {
	if o == nil || IsNil(o.IotVersion) {
		return nil, false
	}
	return o.IotVersion, true
}

// HasIotVersion returns a boolean if a field has been set.
func (o *Devices) HasIotVersion() bool {
	if o != nil && !IsNil(o.IotVersion) {
		return true
	}

	return false
}

// SetIotVersion gets a reference to the given string and assigns it to the IotVersion field.
func (o *Devices) SetIotVersion(v string) {
	o.IotVersion = &v
}

// GetIpV6Address returns the IpV6Address field value if set, zero value otherwise.
func (o *Devices) GetIpV6Address() string {
	if o == nil || IsNil(o.IpV6Address) {
		var ret string
		return ret
	}
	return *o.IpV6Address
}

// GetIpV6AddressOk returns a tuple with the IpV6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetIpV6AddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpV6Address) {
		return nil, false
	}
	return o.IpV6Address, true
}

// HasIpV6Address returns a boolean if a field has been set.
func (o *Devices) HasIpV6Address() bool {
	if o != nil && !IsNil(o.IpV6Address) {
		return true
	}

	return false
}

// SetIpV6Address gets a reference to the given string and assigns it to the IpV6Address field.
func (o *Devices) SetIpV6Address(v string) {
	o.IpV6Address = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *Devices) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *Devices) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *Devices) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetIsConnected returns the IsConnected field value if set, zero value otherwise.
func (o *Devices) GetIsConnected() bool {
	if o == nil || IsNil(o.IsConnected) {
		var ret bool
		return ret
	}
	return *o.IsConnected
}

// GetIsConnectedOk returns a tuple with the IsConnected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetIsConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConnected) {
		return nil, false
	}
	return o.IsConnected, true
}

// HasIsConnected returns a boolean if a field has been set.
func (o *Devices) HasIsConnected() bool {
	if o != nil && !IsNil(o.IsConnected) {
		return true
	}

	return false
}

// SetIsConnected gets a reference to the given bool and assigns it to the IsConnected field.
func (o *Devices) SetIsConnected(v bool) {
	o.IsConnected = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *Devices) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Devices) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *Devices) SetLabels(v []string) {
	o.Labels = v
}

// GetLicenseMatch returns the LicenseMatch field value if set, zero value otherwise.
func (o *Devices) GetLicenseMatch() bool {
	if o == nil || IsNil(o.LicenseMatch) {
		var ret bool
		return ret
	}
	return *o.LicenseMatch
}

// GetLicenseMatchOk returns a tuple with the LicenseMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetLicenseMatchOk() (*bool, bool) {
	if o == nil || IsNil(o.LicenseMatch) {
		return nil, false
	}
	return o.LicenseMatch, true
}

// HasLicenseMatch returns a boolean if a field has been set.
func (o *Devices) HasLicenseMatch() bool {
	if o != nil && !IsNil(o.LicenseMatch) {
		return true
	}

	return false
}

// SetLicenseMatch gets a reference to the given bool and assigns it to the LicenseMatch field.
func (o *Devices) SetLicenseMatch(v bool) {
	o.LicenseMatch = &v
}

// GetLogDbVersion returns the LogDbVersion field value if set, zero value otherwise.
func (o *Devices) GetLogDbVersion() string {
	if o == nil || IsNil(o.LogDbVersion) {
		var ret string
		return ret
	}
	return *o.LogDbVersion
}

// GetLogDbVersionOk returns a tuple with the LogDbVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetLogDbVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LogDbVersion) {
		return nil, false
	}
	return o.LogDbVersion, true
}

// HasLogDbVersion returns a boolean if a field has been set.
func (o *Devices) HasLogDbVersion() bool {
	if o != nil && !IsNil(o.LogDbVersion) {
		return true
	}

	return false
}

// SetLogDbVersion gets a reference to the given string and assigns it to the LogDbVersion field.
func (o *Devices) SetLogDbVersion(v string) {
	o.LogDbVersion = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *Devices) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *Devices) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *Devices) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *Devices) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *Devices) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *Devices) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value
func (o *Devices) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Devices) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Devices) SetName(v string) {
	o.Name = v
}

// GetSnippets returns the Snippets field value if set, zero value otherwise.
func (o *Devices) GetSnippets() []string {
	if o == nil || IsNil(o.Snippets) {
		var ret []string
		return ret
	}
	return o.Snippets
}

// GetSnippetsOk returns a tuple with the Snippets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetSnippetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Snippets) {
		return nil, false
	}
	return o.Snippets, true
}

// HasSnippets returns a boolean if a field has been set.
func (o *Devices) HasSnippets() bool {
	if o != nil && !IsNil(o.Snippets) {
		return true
	}

	return false
}

// SetSnippets gets a reference to the given []string and assigns it to the Snippets field.
func (o *Devices) SetSnippets(v []string) {
	o.Snippets = v
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise.
func (o *Devices) GetSoftwareVersion() string {
	if o == nil || IsNil(o.SoftwareVersion) {
		var ret string
		return ret
	}
	return *o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetSoftwareVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareVersion) {
		return nil, false
	}
	return o.SoftwareVersion, true
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *Devices) HasSoftwareVersion() bool {
	if o != nil && !IsNil(o.SoftwareVersion) {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given string and assigns it to the SoftwareVersion field.
func (o *Devices) SetSoftwareVersion(v string) {
	o.SoftwareVersion = &v
}

// GetThreatReleaseDate returns the ThreatReleaseDate field value if set, zero value otherwise.
func (o *Devices) GetThreatReleaseDate() string {
	if o == nil || IsNil(o.ThreatReleaseDate) {
		var ret string
		return ret
	}
	return *o.ThreatReleaseDate
}

// GetThreatReleaseDateOk returns a tuple with the ThreatReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetThreatReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ThreatReleaseDate) {
		return nil, false
	}
	return o.ThreatReleaseDate, true
}

// HasThreatReleaseDate returns a boolean if a field has been set.
func (o *Devices) HasThreatReleaseDate() bool {
	if o != nil && !IsNil(o.ThreatReleaseDate) {
		return true
	}

	return false
}

// SetThreatReleaseDate gets a reference to the given string and assigns it to the ThreatReleaseDate field.
func (o *Devices) SetThreatReleaseDate(v string) {
	o.ThreatReleaseDate = &v
}

// GetThreatVersion returns the ThreatVersion field value if set, zero value otherwise.
func (o *Devices) GetThreatVersion() string {
	if o == nil || IsNil(o.ThreatVersion) {
		var ret string
		return ret
	}
	return *o.ThreatVersion
}

// GetThreatVersionOk returns a tuple with the ThreatVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetThreatVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ThreatVersion) {
		return nil, false
	}
	return o.ThreatVersion, true
}

// HasThreatVersion returns a boolean if a field has been set.
func (o *Devices) HasThreatVersion() bool {
	if o != nil && !IsNil(o.ThreatVersion) {
		return true
	}

	return false
}

// SetThreatVersion gets a reference to the given string and assigns it to the ThreatVersion field.
func (o *Devices) SetThreatVersion(v string) {
	o.ThreatVersion = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *Devices) GetUptime() string {
	if o == nil || IsNil(o.Uptime) {
		var ret string
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetUptimeOk() (*string, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *Devices) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given string and assigns it to the Uptime field.
func (o *Devices) SetUptime(v string) {
	o.Uptime = &v
}

// GetUrlDbType returns the UrlDbType field value if set, zero value otherwise.
func (o *Devices) GetUrlDbType() string {
	if o == nil || IsNil(o.UrlDbType) {
		var ret string
		return ret
	}
	return *o.UrlDbType
}

// GetUrlDbTypeOk returns a tuple with the UrlDbType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetUrlDbTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UrlDbType) {
		return nil, false
	}
	return o.UrlDbType, true
}

// HasUrlDbType returns a boolean if a field has been set.
func (o *Devices) HasUrlDbType() bool {
	if o != nil && !IsNil(o.UrlDbType) {
		return true
	}

	return false
}

// SetUrlDbType gets a reference to the given string and assigns it to the UrlDbType field.
func (o *Devices) SetUrlDbType(v string) {
	o.UrlDbType = &v
}

// GetUrlDbVer returns the UrlDbVer field value if set, zero value otherwise.
func (o *Devices) GetUrlDbVer() string {
	if o == nil || IsNil(o.UrlDbVer) {
		var ret string
		return ret
	}
	return *o.UrlDbVer
}

// GetUrlDbVerOk returns a tuple with the UrlDbVer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetUrlDbVerOk() (*string, bool) {
	if o == nil || IsNil(o.UrlDbVer) {
		return nil, false
	}
	return o.UrlDbVer, true
}

// HasUrlDbVer returns a boolean if a field has been set.
func (o *Devices) HasUrlDbVer() bool {
	if o != nil && !IsNil(o.UrlDbVer) {
		return true
	}

	return false
}

// SetUrlDbVer gets a reference to the given string and assigns it to the UrlDbVer field.
func (o *Devices) SetUrlDbVer(v string) {
	o.UrlDbVer = &v
}

// GetVmState returns the VmState field value if set, zero value otherwise.
func (o *Devices) GetVmState() string {
	if o == nil || IsNil(o.VmState) {
		var ret string
		return ret
	}
	return *o.VmState
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetVmStateOk() (*string, bool) {
	if o == nil || IsNil(o.VmState) {
		return nil, false
	}
	return o.VmState, true
}

// HasVmState returns a boolean if a field has been set.
func (o *Devices) HasVmState() bool {
	if o != nil && !IsNil(o.VmState) {
		return true
	}

	return false
}

// SetVmState gets a reference to the given string and assigns it to the VmState field.
func (o *Devices) SetVmState(v string) {
	o.VmState = &v
}

// GetWfReleaseDate returns the WfReleaseDate field value if set, zero value otherwise.
func (o *Devices) GetWfReleaseDate() string {
	if o == nil || IsNil(o.WfReleaseDate) {
		var ret string
		return ret
	}
	return *o.WfReleaseDate
}

// GetWfReleaseDateOk returns a tuple with the WfReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetWfReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.WfReleaseDate) {
		return nil, false
	}
	return o.WfReleaseDate, true
}

// HasWfReleaseDate returns a boolean if a field has been set.
func (o *Devices) HasWfReleaseDate() bool {
	if o != nil && !IsNil(o.WfReleaseDate) {
		return true
	}

	return false
}

// SetWfReleaseDate gets a reference to the given string and assigns it to the WfReleaseDate field.
func (o *Devices) SetWfReleaseDate(v string) {
	o.WfReleaseDate = &v
}

// GetWfVer returns the WfVer field value if set, zero value otherwise.
func (o *Devices) GetWfVer() string {
	if o == nil || IsNil(o.WfVer) {
		var ret string
		return ret
	}
	return *o.WfVer
}

// GetWfVerOk returns a tuple with the WfVer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Devices) GetWfVerOk() (*string, bool) {
	if o == nil || IsNil(o.WfVer) {
		return nil, false
	}
	return o.WfVer, true
}

// HasWfVer returns a boolean if a field has been set.
func (o *Devices) HasWfVer() bool {
	if o != nil && !IsNil(o.WfVer) {
		return true
	}

	return false
}

// SetWfVer gets a reference to the given string and assigns it to the WfVer field.
func (o *Devices) SetWfVer(v string) {
	o.WfVer = &v
}

func (o Devices) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Devices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiVirusVersion) {
		toSerialize["anti_virus_version"] = o.AntiVirusVersion
	}
	if !IsNil(o.AppReleaseDate) {
		toSerialize["app_release_date"] = o.AppReleaseDate
	}
	if !IsNil(o.AppVersion) {
		toSerialize["app_version"] = o.AppVersion
	}
	if !IsNil(o.AvReleaseDate) {
		toSerialize["av_release_date"] = o.AvReleaseDate
	}
	if !IsNil(o.AvailableLicensess) {
		toSerialize["available_licensess"] = o.AvailableLicensess
	}
	if !IsNil(o.ConnectedSince) {
		toSerialize["connected_since"] = o.ConnectedSince
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DevCertDetail) {
		toSerialize["dev_cert_detail"] = o.DevCertDetail
	}
	if !IsNil(o.DevCertExpiryDate) {
		toSerialize["dev_cert_expiry_date"] = o.DevCertExpiryDate
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Family) {
		toSerialize["family"] = o.Family
	}
	toSerialize["folder"] = o.Folder
	if !IsNil(o.GpClientVerion) {
		toSerialize["gp_client_verion"] = o.GpClientVerion
	}
	if !IsNil(o.GpDataVersion) {
		toSerialize["gp_data_version"] = o.GpDataVersion
	}
	if !IsNil(o.HaPeerSerial) {
		toSerialize["ha_peer_serial"] = o.HaPeerSerial
	}
	if !IsNil(o.HaPeerState) {
		toSerialize["ha_peer_state"] = o.HaPeerState
	}
	if !IsNil(o.HaState) {
		toSerialize["ha_state"] = o.HaState
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.InstalledLicenses) {
		toSerialize["installed_licenses"] = o.InstalledLicenses
	}
	if !IsNil(o.IotReleaseDate) {
		toSerialize["iot_release_date"] = o.IotReleaseDate
	}
	if !IsNil(o.IotVersion) {
		toSerialize["iot_version"] = o.IotVersion
	}
	if !IsNil(o.IpV6Address) {
		toSerialize["ipV6_address"] = o.IpV6Address
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.IsConnected) {
		toSerialize["is_connected"] = o.IsConnected
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.LicenseMatch) {
		toSerialize["license_match"] = o.LicenseMatch
	}
	if !IsNil(o.LogDbVersion) {
		toSerialize["log_db_version"] = o.LogDbVersion
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Snippets) {
		toSerialize["snippets"] = o.Snippets
	}
	if !IsNil(o.SoftwareVersion) {
		toSerialize["software_version"] = o.SoftwareVersion
	}
	if !IsNil(o.ThreatReleaseDate) {
		toSerialize["threat_release_date"] = o.ThreatReleaseDate
	}
	if !IsNil(o.ThreatVersion) {
		toSerialize["threat_version"] = o.ThreatVersion
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.UrlDbType) {
		toSerialize["url_db_type"] = o.UrlDbType
	}
	if !IsNil(o.UrlDbVer) {
		toSerialize["url_db_ver"] = o.UrlDbVer
	}
	if !IsNil(o.VmState) {
		toSerialize["vm_state"] = o.VmState
	}
	if !IsNil(o.WfReleaseDate) {
		toSerialize["wf_release_date"] = o.WfReleaseDate
	}
	if !IsNil(o.WfVer) {
		toSerialize["wf_ver"] = o.WfVer
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Devices) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"folder",
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDevices := _Devices{}

	err = json.Unmarshal(data, &varDevices)

	if err != nil {
		return err
	}

	*o = Devices(varDevices)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "anti_virus_version")
		delete(additionalProperties, "app_release_date")
		delete(additionalProperties, "app_version")
		delete(additionalProperties, "av_release_date")
		delete(additionalProperties, "available_licensess")
		delete(additionalProperties, "connected_since")
		delete(additionalProperties, "description")
		delete(additionalProperties, "dev_cert_detail")
		delete(additionalProperties, "dev_cert_expiry_date")
		delete(additionalProperties, "display_name")
		delete(additionalProperties, "family")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "gp_client_verion")
		delete(additionalProperties, "gp_data_version")
		delete(additionalProperties, "ha_peer_serial")
		delete(additionalProperties, "ha_peer_state")
		delete(additionalProperties, "ha_state")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "id")
		delete(additionalProperties, "installed_licenses")
		delete(additionalProperties, "iot_release_date")
		delete(additionalProperties, "iot_version")
		delete(additionalProperties, "ipV6_address")
		delete(additionalProperties, "ip_address")
		delete(additionalProperties, "is_connected")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "license_match")
		delete(additionalProperties, "log_db_version")
		delete(additionalProperties, "mac_address")
		delete(additionalProperties, "model")
		delete(additionalProperties, "name")
		delete(additionalProperties, "snippets")
		delete(additionalProperties, "software_version")
		delete(additionalProperties, "threat_release_date")
		delete(additionalProperties, "threat_version")
		delete(additionalProperties, "uptime")
		delete(additionalProperties, "url_db_type")
		delete(additionalProperties, "url_db_ver")
		delete(additionalProperties, "vm_state")
		delete(additionalProperties, "wf_release_date")
		delete(additionalProperties, "wf_ver")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDevices struct {
	value *Devices
	isSet bool
}

func (v NullableDevices) Get() *Devices {
	return v.value
}

func (v *NullableDevices) Set(val *Devices) {
	v.value = val
	v.isSet = true
}

func (v NullableDevices) IsSet() bool {
	return v.isSet
}

func (v *NullableDevices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevices(val *Devices) *NullableDevices {
	return &NullableDevices{value: val, isSet: true}
}

func (v NullableDevices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
