/*
Configuration Setup

These APIs are used to define how Strata Cloud Manager configurations are implemented.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_setup

import (
	"encoding/json"
	"fmt"
)

// checks if the SaveSnippetSnapshotPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SaveSnippetSnapshotPayload{}

// SaveSnippetSnapshotPayload struct for SaveSnippetSnapshotPayload
type SaveSnippetSnapshotPayload struct {
	Description          string `json:"description"`
	Id                   string `json:"id"`
	AdditionalProperties map[string]interface{}
}

type _SaveSnippetSnapshotPayload SaveSnippetSnapshotPayload

// NewSaveSnippetSnapshotPayload instantiates a new SaveSnippetSnapshotPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaveSnippetSnapshotPayload(description string, id string) *SaveSnippetSnapshotPayload {
	this := SaveSnippetSnapshotPayload{}
	this.Description = description
	this.Id = id
	return &this
}

// NewSaveSnippetSnapshotPayloadWithDefaults instantiates a new SaveSnippetSnapshotPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaveSnippetSnapshotPayloadWithDefaults() *SaveSnippetSnapshotPayload {
	this := SaveSnippetSnapshotPayload{}
	return &this
}

// GetDescription returns the Description field value
func (o *SaveSnippetSnapshotPayload) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SaveSnippetSnapshotPayload) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SaveSnippetSnapshotPayload) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *SaveSnippetSnapshotPayload) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SaveSnippetSnapshotPayload) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SaveSnippetSnapshotPayload) SetId(v string) {
	o.Id = v
}

func (o SaveSnippetSnapshotPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SaveSnippetSnapshotPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SaveSnippetSnapshotPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSaveSnippetSnapshotPayload := _SaveSnippetSnapshotPayload{}

	err = json.Unmarshal(data, &varSaveSnippetSnapshotPayload)

	if err != nil {
		return err
	}

	*o = SaveSnippetSnapshotPayload(varSaveSnippetSnapshotPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSaveSnippetSnapshotPayload struct {
	value *SaveSnippetSnapshotPayload
	isSet bool
}

func (v NullableSaveSnippetSnapshotPayload) Get() *SaveSnippetSnapshotPayload {
	return v.value
}

func (v *NullableSaveSnippetSnapshotPayload) Set(val *SaveSnippetSnapshotPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSaveSnippetSnapshotPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSaveSnippetSnapshotPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaveSnippetSnapshotPayload(val *SaveSnippetSnapshotPayload) *NullableSaveSnippetSnapshotPayload {
	return &NullableSaveSnippetSnapshotPayload{value: val, isSet: true}
}

func (v NullableSaveSnippetSnapshotPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaveSnippetSnapshotPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
