/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the DhcpInterfacesServerOptionInheritance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DhcpInterfacesServerOptionInheritance{}

// DhcpInterfacesServerOptionInheritance struct for DhcpInterfacesServerOptionInheritance
type DhcpInterfacesServerOptionInheritance struct {
	// Interface from which to inherit lease options
	Source               *string `json:"source,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DhcpInterfacesServerOptionInheritance DhcpInterfacesServerOptionInheritance

// NewDhcpInterfacesServerOptionInheritance instantiates a new DhcpInterfacesServerOptionInheritance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpInterfacesServerOptionInheritance() *DhcpInterfacesServerOptionInheritance {
	this := DhcpInterfacesServerOptionInheritance{}
	return &this
}

// NewDhcpInterfacesServerOptionInheritanceWithDefaults instantiates a new DhcpInterfacesServerOptionInheritance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpInterfacesServerOptionInheritanceWithDefaults() *DhcpInterfacesServerOptionInheritance {
	this := DhcpInterfacesServerOptionInheritance{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionInheritance) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionInheritance) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionInheritance) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *DhcpInterfacesServerOptionInheritance) SetSource(v string) {
	o.Source = &v
}

func (o DhcpInterfacesServerOptionInheritance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DhcpInterfacesServerOptionInheritance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DhcpInterfacesServerOptionInheritance) UnmarshalJSON(data []byte) (err error) {
	varDhcpInterfacesServerOptionInheritance := _DhcpInterfacesServerOptionInheritance{}

	err = json.Unmarshal(data, &varDhcpInterfacesServerOptionInheritance)

	if err != nil {
		return err
	}

	*o = DhcpInterfacesServerOptionInheritance(varDhcpInterfacesServerOptionInheritance)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDhcpInterfacesServerOptionInheritance struct {
	value *DhcpInterfacesServerOptionInheritance
	isSet bool
}

func (v NullableDhcpInterfacesServerOptionInheritance) Get() *DhcpInterfacesServerOptionInheritance {
	return v.value
}

func (v *NullableDhcpInterfacesServerOptionInheritance) Set(val *DhcpInterfacesServerOptionInheritance) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpInterfacesServerOptionInheritance) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpInterfacesServerOptionInheritance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpInterfacesServerOptionInheritance(val *DhcpInterfacesServerOptionInheritance) *NullableDhcpInterfacesServerOptionInheritance {
	return &NullableDhcpInterfacesServerOptionInheritance{value: val, isSet: true}
}

func (v NullableDhcpInterfacesServerOptionInheritance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpInterfacesServerOptionInheritance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
