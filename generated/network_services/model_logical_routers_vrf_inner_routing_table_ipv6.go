/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerRoutingTableIpv6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRoutingTableIpv6{}

// LogicalRoutersVrfInnerRoutingTableIpv6 struct for LogicalRoutersVrfInnerRoutingTableIpv6
type LogicalRoutersVrfInnerRoutingTableIpv6 struct {
	StaticRoute          []LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner `json:"static_route,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRoutingTableIpv6 LogicalRoutersVrfInnerRoutingTableIpv6

// NewLogicalRoutersVrfInnerRoutingTableIpv6 instantiates a new LogicalRoutersVrfInnerRoutingTableIpv6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRoutingTableIpv6() *LogicalRoutersVrfInnerRoutingTableIpv6 {
	this := LogicalRoutersVrfInnerRoutingTableIpv6{}
	return &this
}

// NewLogicalRoutersVrfInnerRoutingTableIpv6WithDefaults instantiates a new LogicalRoutersVrfInnerRoutingTableIpv6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRoutingTableIpv6WithDefaults() *LogicalRoutersVrfInnerRoutingTableIpv6 {
	this := LogicalRoutersVrfInnerRoutingTableIpv6{}
	return &this
}

// GetStaticRoute returns the StaticRoute field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6) GetStaticRoute() []LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner {
	if o == nil || IsNil(o.StaticRoute) {
		var ret []LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner
		return ret
	}
	return o.StaticRoute
}

// GetStaticRouteOk returns a tuple with the StaticRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6) GetStaticRouteOk() ([]LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner, bool) {
	if o == nil || IsNil(o.StaticRoute) {
		return nil, false
	}
	return o.StaticRoute, true
}

// HasStaticRoute returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6) HasStaticRoute() bool {
	if o != nil && !IsNil(o.StaticRoute) {
		return true
	}

	return false
}

// SetStaticRoute gets a reference to the given []LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner and assigns it to the StaticRoute field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6) SetStaticRoute(v []LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) {
	o.StaticRoute = v
}

func (o LogicalRoutersVrfInnerRoutingTableIpv6) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRoutingTableIpv6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StaticRoute) {
		toSerialize["static_route"] = o.StaticRoute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRoutingTableIpv6) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerRoutingTableIpv6 := _LogicalRoutersVrfInnerRoutingTableIpv6{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRoutingTableIpv6)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRoutingTableIpv6(varLogicalRoutersVrfInnerRoutingTableIpv6)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "static_route")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRoutingTableIpv6 struct {
	value *LogicalRoutersVrfInnerRoutingTableIpv6
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6) Get() *LogicalRoutersVrfInnerRoutingTableIpv6 {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6) Set(val *LogicalRoutersVrfInnerRoutingTableIpv6) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRoutingTableIpv6(val *LogicalRoutersVrfInnerRoutingTableIpv6) *NullableLogicalRoutersVrfInnerRoutingTableIpv6 {
	return &NullableLogicalRoutersVrfInnerRoutingTableIpv6{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
