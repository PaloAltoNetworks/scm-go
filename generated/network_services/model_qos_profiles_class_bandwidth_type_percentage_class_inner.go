/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the QosProfilesClassBandwidthTypePercentageClassInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosProfilesClassBandwidthTypePercentageClassInner{}

// QosProfilesClassBandwidthTypePercentageClassInner struct for QosProfilesClassBandwidthTypePercentageClassInner
type QosProfilesClassBandwidthTypePercentageClassInner struct {
	ClassBandwidth *QosProfilesClassBandwidthTypePercentageClassInnerClassBandwidth `json:"class_bandwidth,omitempty"`
	// Traffic class
	Name *string `json:"name,omitempty"`
	// traffic class priority
	Priority             *string `json:"priority,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QosProfilesClassBandwidthTypePercentageClassInner QosProfilesClassBandwidthTypePercentageClassInner

// NewQosProfilesClassBandwidthTypePercentageClassInner instantiates a new QosProfilesClassBandwidthTypePercentageClassInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosProfilesClassBandwidthTypePercentageClassInner() *QosProfilesClassBandwidthTypePercentageClassInner {
	this := QosProfilesClassBandwidthTypePercentageClassInner{}
	var priority string = "medium"
	this.Priority = &priority
	return &this
}

// NewQosProfilesClassBandwidthTypePercentageClassInnerWithDefaults instantiates a new QosProfilesClassBandwidthTypePercentageClassInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosProfilesClassBandwidthTypePercentageClassInnerWithDefaults() *QosProfilesClassBandwidthTypePercentageClassInner {
	this := QosProfilesClassBandwidthTypePercentageClassInner{}
	var priority string = "medium"
	this.Priority = &priority
	return &this
}

// GetClassBandwidth returns the ClassBandwidth field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) GetClassBandwidth() QosProfilesClassBandwidthTypePercentageClassInnerClassBandwidth {
	if o == nil || IsNil(o.ClassBandwidth) {
		var ret QosProfilesClassBandwidthTypePercentageClassInnerClassBandwidth
		return ret
	}
	return *o.ClassBandwidth
}

// GetClassBandwidthOk returns a tuple with the ClassBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) GetClassBandwidthOk() (*QosProfilesClassBandwidthTypePercentageClassInnerClassBandwidth, bool) {
	if o == nil || IsNil(o.ClassBandwidth) {
		return nil, false
	}
	return o.ClassBandwidth, true
}

// HasClassBandwidth returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) HasClassBandwidth() bool {
	if o != nil && !IsNil(o.ClassBandwidth) {
		return true
	}

	return false
}

// SetClassBandwidth gets a reference to the given QosProfilesClassBandwidthTypePercentageClassInnerClassBandwidth and assigns it to the ClassBandwidth field.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) SetClassBandwidth(v QosProfilesClassBandwidthTypePercentageClassInnerClassBandwidth) {
	o.ClassBandwidth = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) SetName(v string) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *QosProfilesClassBandwidthTypePercentageClassInner) SetPriority(v string) {
	o.Priority = &v
}

func (o QosProfilesClassBandwidthTypePercentageClassInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosProfilesClassBandwidthTypePercentageClassInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassBandwidth) {
		toSerialize["class_bandwidth"] = o.ClassBandwidth
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QosProfilesClassBandwidthTypePercentageClassInner) UnmarshalJSON(data []byte) (err error) {
	varQosProfilesClassBandwidthTypePercentageClassInner := _QosProfilesClassBandwidthTypePercentageClassInner{}

	err = json.Unmarshal(data, &varQosProfilesClassBandwidthTypePercentageClassInner)

	if err != nil {
		return err
	}

	*o = QosProfilesClassBandwidthTypePercentageClassInner(varQosProfilesClassBandwidthTypePercentageClassInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "class_bandwidth")
		delete(additionalProperties, "name")
		delete(additionalProperties, "priority")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQosProfilesClassBandwidthTypePercentageClassInner struct {
	value *QosProfilesClassBandwidthTypePercentageClassInner
	isSet bool
}

func (v NullableQosProfilesClassBandwidthTypePercentageClassInner) Get() *QosProfilesClassBandwidthTypePercentageClassInner {
	return v.value
}

func (v *NullableQosProfilesClassBandwidthTypePercentageClassInner) Set(val *QosProfilesClassBandwidthTypePercentageClassInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQosProfilesClassBandwidthTypePercentageClassInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQosProfilesClassBandwidthTypePercentageClassInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosProfilesClassBandwidthTypePercentageClassInner(val *QosProfilesClassBandwidthTypePercentageClassInner) *NullableQosProfilesClassBandwidthTypePercentageClassInner {
	return &NullableQosProfilesClassBandwidthTypePercentageClassInner{value: val, isSet: true}
}

func (v NullableQosProfilesClassBandwidthTypePercentageClassInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosProfilesClassBandwidthTypePercentageClassInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
