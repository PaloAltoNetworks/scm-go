/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerVrAdminDists type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerVrAdminDists{}

// LogicalRoutersVrfInnerVrAdminDists struct for LogicalRoutersVrfInnerVrAdminDists
type LogicalRoutersVrfInnerVrAdminDists struct {
	Ebgp                 *float32 `json:"ebgp,omitempty"`
	Ibgp                 *float32 `json:"ibgp,omitempty"`
	OspfExt              *float32 `json:"ospf_ext,omitempty"`
	OspfInt              *float32 `json:"ospf_int,omitempty"`
	Ospfv3Ext            *float32 `json:"ospfv3_ext,omitempty"`
	Ospfv3Int            *float32 `json:"ospfv3_int,omitempty"`
	Rip                  *float32 `json:"rip,omitempty"`
	Static               *float32 `json:"static,omitempty"`
	StaticIpv6           *float32 `json:"static_ipv6,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerVrAdminDists LogicalRoutersVrfInnerVrAdminDists

// NewLogicalRoutersVrfInnerVrAdminDists instantiates a new LogicalRoutersVrfInnerVrAdminDists object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerVrAdminDists() *LogicalRoutersVrfInnerVrAdminDists {
	this := LogicalRoutersVrfInnerVrAdminDists{}
	return &this
}

// NewLogicalRoutersVrfInnerVrAdminDistsWithDefaults instantiates a new LogicalRoutersVrfInnerVrAdminDists object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerVrAdminDistsWithDefaults() *LogicalRoutersVrfInnerVrAdminDists {
	this := LogicalRoutersVrfInnerVrAdminDists{}
	return &this
}

// GetEbgp returns the Ebgp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetEbgp() float32 {
	if o == nil || IsNil(o.Ebgp) {
		var ret float32
		return ret
	}
	return *o.Ebgp
}

// GetEbgpOk returns a tuple with the Ebgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetEbgpOk() (*float32, bool) {
	if o == nil || IsNil(o.Ebgp) {
		return nil, false
	}
	return o.Ebgp, true
}

// HasEbgp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasEbgp() bool {
	if o != nil && !IsNil(o.Ebgp) {
		return true
	}

	return false
}

// SetEbgp gets a reference to the given float32 and assigns it to the Ebgp field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetEbgp(v float32) {
	o.Ebgp = &v
}

// GetIbgp returns the Ibgp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetIbgp() float32 {
	if o == nil || IsNil(o.Ibgp) {
		var ret float32
		return ret
	}
	return *o.Ibgp
}

// GetIbgpOk returns a tuple with the Ibgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetIbgpOk() (*float32, bool) {
	if o == nil || IsNil(o.Ibgp) {
		return nil, false
	}
	return o.Ibgp, true
}

// HasIbgp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasIbgp() bool {
	if o != nil && !IsNil(o.Ibgp) {
		return true
	}

	return false
}

// SetIbgp gets a reference to the given float32 and assigns it to the Ibgp field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetIbgp(v float32) {
	o.Ibgp = &v
}

// GetOspfExt returns the OspfExt field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfExt() float32 {
	if o == nil || IsNil(o.OspfExt) {
		var ret float32
		return ret
	}
	return *o.OspfExt
}

// GetOspfExtOk returns a tuple with the OspfExt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfExtOk() (*float32, bool) {
	if o == nil || IsNil(o.OspfExt) {
		return nil, false
	}
	return o.OspfExt, true
}

// HasOspfExt returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasOspfExt() bool {
	if o != nil && !IsNil(o.OspfExt) {
		return true
	}

	return false
}

// SetOspfExt gets a reference to the given float32 and assigns it to the OspfExt field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetOspfExt(v float32) {
	o.OspfExt = &v
}

// GetOspfInt returns the OspfInt field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfInt() float32 {
	if o == nil || IsNil(o.OspfInt) {
		var ret float32
		return ret
	}
	return *o.OspfInt
}

// GetOspfIntOk returns a tuple with the OspfInt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfIntOk() (*float32, bool) {
	if o == nil || IsNil(o.OspfInt) {
		return nil, false
	}
	return o.OspfInt, true
}

// HasOspfInt returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasOspfInt() bool {
	if o != nil && !IsNil(o.OspfInt) {
		return true
	}

	return false
}

// SetOspfInt gets a reference to the given float32 and assigns it to the OspfInt field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetOspfInt(v float32) {
	o.OspfInt = &v
}

// GetOspfv3Ext returns the Ospfv3Ext field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfv3Ext() float32 {
	if o == nil || IsNil(o.Ospfv3Ext) {
		var ret float32
		return ret
	}
	return *o.Ospfv3Ext
}

// GetOspfv3ExtOk returns a tuple with the Ospfv3Ext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfv3ExtOk() (*float32, bool) {
	if o == nil || IsNil(o.Ospfv3Ext) {
		return nil, false
	}
	return o.Ospfv3Ext, true
}

// HasOspfv3Ext returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasOspfv3Ext() bool {
	if o != nil && !IsNil(o.Ospfv3Ext) {
		return true
	}

	return false
}

// SetOspfv3Ext gets a reference to the given float32 and assigns it to the Ospfv3Ext field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetOspfv3Ext(v float32) {
	o.Ospfv3Ext = &v
}

// GetOspfv3Int returns the Ospfv3Int field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfv3Int() float32 {
	if o == nil || IsNil(o.Ospfv3Int) {
		var ret float32
		return ret
	}
	return *o.Ospfv3Int
}

// GetOspfv3IntOk returns a tuple with the Ospfv3Int field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetOspfv3IntOk() (*float32, bool) {
	if o == nil || IsNil(o.Ospfv3Int) {
		return nil, false
	}
	return o.Ospfv3Int, true
}

// HasOspfv3Int returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasOspfv3Int() bool {
	if o != nil && !IsNil(o.Ospfv3Int) {
		return true
	}

	return false
}

// SetOspfv3Int gets a reference to the given float32 and assigns it to the Ospfv3Int field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetOspfv3Int(v float32) {
	o.Ospfv3Int = &v
}

// GetRip returns the Rip field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetRip() float32 {
	if o == nil || IsNil(o.Rip) {
		var ret float32
		return ret
	}
	return *o.Rip
}

// GetRipOk returns a tuple with the Rip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetRipOk() (*float32, bool) {
	if o == nil || IsNil(o.Rip) {
		return nil, false
	}
	return o.Rip, true
}

// HasRip returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasRip() bool {
	if o != nil && !IsNil(o.Rip) {
		return true
	}

	return false
}

// SetRip gets a reference to the given float32 and assigns it to the Rip field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetRip(v float32) {
	o.Rip = &v
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetStatic() float32 {
	if o == nil || IsNil(o.Static) {
		var ret float32
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetStaticOk() (*float32, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given float32 and assigns it to the Static field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetStatic(v float32) {
	o.Static = &v
}

// GetStaticIpv6 returns the StaticIpv6 field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetStaticIpv6() float32 {
	if o == nil || IsNil(o.StaticIpv6) {
		var ret float32
		return ret
	}
	return *o.StaticIpv6
}

// GetStaticIpv6Ok returns a tuple with the StaticIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) GetStaticIpv6Ok() (*float32, bool) {
	if o == nil || IsNil(o.StaticIpv6) {
		return nil, false
	}
	return o.StaticIpv6, true
}

// HasStaticIpv6 returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerVrAdminDists) HasStaticIpv6() bool {
	if o != nil && !IsNil(o.StaticIpv6) {
		return true
	}

	return false
}

// SetStaticIpv6 gets a reference to the given float32 and assigns it to the StaticIpv6 field.
func (o *LogicalRoutersVrfInnerVrAdminDists) SetStaticIpv6(v float32) {
	o.StaticIpv6 = &v
}

func (o LogicalRoutersVrfInnerVrAdminDists) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerVrAdminDists) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ebgp) {
		toSerialize["ebgp"] = o.Ebgp
	}
	if !IsNil(o.Ibgp) {
		toSerialize["ibgp"] = o.Ibgp
	}
	if !IsNil(o.OspfExt) {
		toSerialize["ospf_ext"] = o.OspfExt
	}
	if !IsNil(o.OspfInt) {
		toSerialize["ospf_int"] = o.OspfInt
	}
	if !IsNil(o.Ospfv3Ext) {
		toSerialize["ospfv3_ext"] = o.Ospfv3Ext
	}
	if !IsNil(o.Ospfv3Int) {
		toSerialize["ospfv3_int"] = o.Ospfv3Int
	}
	if !IsNil(o.Rip) {
		toSerialize["rip"] = o.Rip
	}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}
	if !IsNil(o.StaticIpv6) {
		toSerialize["static_ipv6"] = o.StaticIpv6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerVrAdminDists) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerVrAdminDists := _LogicalRoutersVrfInnerVrAdminDists{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerVrAdminDists)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerVrAdminDists(varLogicalRoutersVrfInnerVrAdminDists)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ebgp")
		delete(additionalProperties, "ibgp")
		delete(additionalProperties, "ospf_ext")
		delete(additionalProperties, "ospf_int")
		delete(additionalProperties, "ospfv3_ext")
		delete(additionalProperties, "ospfv3_int")
		delete(additionalProperties, "rip")
		delete(additionalProperties, "static")
		delete(additionalProperties, "static_ipv6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerVrAdminDists struct {
	value *LogicalRoutersVrfInnerVrAdminDists
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerVrAdminDists) Get() *LogicalRoutersVrfInnerVrAdminDists {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerVrAdminDists) Set(val *LogicalRoutersVrfInnerVrAdminDists) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerVrAdminDists) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerVrAdminDists) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerVrAdminDists(val *LogicalRoutersVrfInnerVrAdminDists) *NullableLogicalRoutersVrfInnerVrAdminDists {
	return &NullableLogicalRoutersVrfInnerVrAdminDists{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerVrAdminDists) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerVrAdminDists) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
