/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the IpsecTunnelsTunnelMonitor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpsecTunnelsTunnelMonitor{}

// IpsecTunnelsTunnelMonitor struct for IpsecTunnelsTunnelMonitor
type IpsecTunnelsTunnelMonitor struct {
	// Destination IP to send ICMP probe
	DestinationIp string `json:"destination_ip"`
	// Enable tunnel monitoring on this tunnel
	Enable *bool `json:"enable,omitempty"`
	// Which proxy-id (or proxy-id-v6) the monitoring traffic will use
	ProxyId              *string `json:"proxy_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IpsecTunnelsTunnelMonitor IpsecTunnelsTunnelMonitor

// NewIpsecTunnelsTunnelMonitor instantiates a new IpsecTunnelsTunnelMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpsecTunnelsTunnelMonitor(destinationIp string) *IpsecTunnelsTunnelMonitor {
	this := IpsecTunnelsTunnelMonitor{}
	this.DestinationIp = destinationIp
	var enable bool = true
	this.Enable = &enable
	return &this
}

// NewIpsecTunnelsTunnelMonitorWithDefaults instantiates a new IpsecTunnelsTunnelMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpsecTunnelsTunnelMonitorWithDefaults() *IpsecTunnelsTunnelMonitor {
	this := IpsecTunnelsTunnelMonitor{}
	var enable bool = true
	this.Enable = &enable
	return &this
}

// GetDestinationIp returns the DestinationIp field value
func (o *IpsecTunnelsTunnelMonitor) GetDestinationIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationIp
}

// GetDestinationIpOk returns a tuple with the DestinationIp field value
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsTunnelMonitor) GetDestinationIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationIp, true
}

// SetDestinationIp sets field value
func (o *IpsecTunnelsTunnelMonitor) SetDestinationIp(v string) {
	o.DestinationIp = v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *IpsecTunnelsTunnelMonitor) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsTunnelMonitor) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *IpsecTunnelsTunnelMonitor) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *IpsecTunnelsTunnelMonitor) SetEnable(v bool) {
	o.Enable = &v
}

// GetProxyId returns the ProxyId field value if set, zero value otherwise.
func (o *IpsecTunnelsTunnelMonitor) GetProxyId() string {
	if o == nil || IsNil(o.ProxyId) {
		var ret string
		return ret
	}
	return *o.ProxyId
}

// GetProxyIdOk returns a tuple with the ProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsTunnelMonitor) GetProxyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyId) {
		return nil, false
	}
	return o.ProxyId, true
}

// HasProxyId returns a boolean if a field has been set.
func (o *IpsecTunnelsTunnelMonitor) HasProxyId() bool {
	if o != nil && !IsNil(o.ProxyId) {
		return true
	}

	return false
}

// SetProxyId gets a reference to the given string and assigns it to the ProxyId field.
func (o *IpsecTunnelsTunnelMonitor) SetProxyId(v string) {
	o.ProxyId = &v
}

func (o IpsecTunnelsTunnelMonitor) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpsecTunnelsTunnelMonitor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_ip"] = o.DestinationIp
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.ProxyId) {
		toSerialize["proxy_id"] = o.ProxyId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IpsecTunnelsTunnelMonitor) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_ip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIpsecTunnelsTunnelMonitor := _IpsecTunnelsTunnelMonitor{}

	err = json.Unmarshal(data, &varIpsecTunnelsTunnelMonitor)

	if err != nil {
		return err
	}

	*o = IpsecTunnelsTunnelMonitor(varIpsecTunnelsTunnelMonitor)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "destination_ip")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "proxy_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpsecTunnelsTunnelMonitor struct {
	value *IpsecTunnelsTunnelMonitor
	isSet bool
}

func (v NullableIpsecTunnelsTunnelMonitor) Get() *IpsecTunnelsTunnelMonitor {
	return v.value
}

func (v *NullableIpsecTunnelsTunnelMonitor) Set(val *IpsecTunnelsTunnelMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableIpsecTunnelsTunnelMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableIpsecTunnelsTunnelMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpsecTunnelsTunnelMonitor(val *IpsecTunnelsTunnelMonitor) *NullableIpsecTunnelsTunnelMonitor {
	return &NullableIpsecTunnelsTunnelMonitor{value: val, isSet: true}
}

func (v NullableIpsecTunnelsTunnelMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpsecTunnelsTunnelMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
