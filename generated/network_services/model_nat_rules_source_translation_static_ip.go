/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the NatRulesSourceTranslationStaticIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NatRulesSourceTranslationStaticIp{}

// NatRulesSourceTranslationStaticIp Static IP
type NatRulesSourceTranslationStaticIp struct {
	BiDirectional *string `json:"bi_directional,omitempty"`
	// Translated IP address
	TranslatedAddress    *string `json:"translated_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NatRulesSourceTranslationStaticIp NatRulesSourceTranslationStaticIp

// NewNatRulesSourceTranslationStaticIp instantiates a new NatRulesSourceTranslationStaticIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatRulesSourceTranslationStaticIp() *NatRulesSourceTranslationStaticIp {
	this := NatRulesSourceTranslationStaticIp{}
	return &this
}

// NewNatRulesSourceTranslationStaticIpWithDefaults instantiates a new NatRulesSourceTranslationStaticIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatRulesSourceTranslationStaticIpWithDefaults() *NatRulesSourceTranslationStaticIp {
	this := NatRulesSourceTranslationStaticIp{}
	return &this
}

// GetBiDirectional returns the BiDirectional field value if set, zero value otherwise.
func (o *NatRulesSourceTranslationStaticIp) GetBiDirectional() string {
	if o == nil || IsNil(o.BiDirectional) {
		var ret string
		return ret
	}
	return *o.BiDirectional
}

// GetBiDirectionalOk returns a tuple with the BiDirectional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatRulesSourceTranslationStaticIp) GetBiDirectionalOk() (*string, bool) {
	if o == nil || IsNil(o.BiDirectional) {
		return nil, false
	}
	return o.BiDirectional, true
}

// HasBiDirectional returns a boolean if a field has been set.
func (o *NatRulesSourceTranslationStaticIp) HasBiDirectional() bool {
	if o != nil && !IsNil(o.BiDirectional) {
		return true
	}

	return false
}

// SetBiDirectional gets a reference to the given string and assigns it to the BiDirectional field.
func (o *NatRulesSourceTranslationStaticIp) SetBiDirectional(v string) {
	o.BiDirectional = &v
}

// GetTranslatedAddress returns the TranslatedAddress field value if set, zero value otherwise.
func (o *NatRulesSourceTranslationStaticIp) GetTranslatedAddress() string {
	if o == nil || IsNil(o.TranslatedAddress) {
		var ret string
		return ret
	}
	return *o.TranslatedAddress
}

// GetTranslatedAddressOk returns a tuple with the TranslatedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatRulesSourceTranslationStaticIp) GetTranslatedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.TranslatedAddress) {
		return nil, false
	}
	return o.TranslatedAddress, true
}

// HasTranslatedAddress returns a boolean if a field has been set.
func (o *NatRulesSourceTranslationStaticIp) HasTranslatedAddress() bool {
	if o != nil && !IsNil(o.TranslatedAddress) {
		return true
	}

	return false
}

// SetTranslatedAddress gets a reference to the given string and assigns it to the TranslatedAddress field.
func (o *NatRulesSourceTranslationStaticIp) SetTranslatedAddress(v string) {
	o.TranslatedAddress = &v
}

func (o NatRulesSourceTranslationStaticIp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NatRulesSourceTranslationStaticIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BiDirectional) {
		toSerialize["bi_directional"] = o.BiDirectional
	}
	if !IsNil(o.TranslatedAddress) {
		toSerialize["translated_address"] = o.TranslatedAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NatRulesSourceTranslationStaticIp) UnmarshalJSON(data []byte) (err error) {
	varNatRulesSourceTranslationStaticIp := _NatRulesSourceTranslationStaticIp{}

	err = json.Unmarshal(data, &varNatRulesSourceTranslationStaticIp)

	if err != nil {
		return err
	}

	*o = NatRulesSourceTranslationStaticIp(varNatRulesSourceTranslationStaticIp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bi_directional")
		delete(additionalProperties, "translated_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNatRulesSourceTranslationStaticIp struct {
	value *NatRulesSourceTranslationStaticIp
	isSet bool
}

func (v NullableNatRulesSourceTranslationStaticIp) Get() *NatRulesSourceTranslationStaticIp {
	return v.value
}

func (v *NullableNatRulesSourceTranslationStaticIp) Set(val *NatRulesSourceTranslationStaticIp) {
	v.value = val
	v.isSet = true
}

func (v NullableNatRulesSourceTranslationStaticIp) IsSet() bool {
	return v.isSet
}

func (v *NullableNatRulesSourceTranslationStaticIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatRulesSourceTranslationStaticIp(val *NatRulesSourceTranslationStaticIp) *NullableNatRulesSourceTranslationStaticIp {
	return &NullableNatRulesSourceTranslationStaticIp{value: val, isSet: true}
}

func (v NullableNatRulesSourceTranslationStaticIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatRulesSourceTranslationStaticIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
