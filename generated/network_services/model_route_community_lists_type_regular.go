/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the RouteCommunityListsTypeRegular type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteCommunityListsTypeRegular{}

// RouteCommunityListsTypeRegular struct for RouteCommunityListsTypeRegular
type RouteCommunityListsTypeRegular struct {
	// Regular community lists
	RegularEntry         []RouteCommunityListsTypeRegularRegularEntryInner `json:"regular_entry,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RouteCommunityListsTypeRegular RouteCommunityListsTypeRegular

// NewRouteCommunityListsTypeRegular instantiates a new RouteCommunityListsTypeRegular object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteCommunityListsTypeRegular() *RouteCommunityListsTypeRegular {
	this := RouteCommunityListsTypeRegular{}
	return &this
}

// NewRouteCommunityListsTypeRegularWithDefaults instantiates a new RouteCommunityListsTypeRegular object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteCommunityListsTypeRegularWithDefaults() *RouteCommunityListsTypeRegular {
	this := RouteCommunityListsTypeRegular{}
	return &this
}

// GetRegularEntry returns the RegularEntry field value if set, zero value otherwise.
func (o *RouteCommunityListsTypeRegular) GetRegularEntry() []RouteCommunityListsTypeRegularRegularEntryInner {
	if o == nil || IsNil(o.RegularEntry) {
		var ret []RouteCommunityListsTypeRegularRegularEntryInner
		return ret
	}
	return o.RegularEntry
}

// GetRegularEntryOk returns a tuple with the RegularEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteCommunityListsTypeRegular) GetRegularEntryOk() ([]RouteCommunityListsTypeRegularRegularEntryInner, bool) {
	if o == nil || IsNil(o.RegularEntry) {
		return nil, false
	}
	return o.RegularEntry, true
}

// HasRegularEntry returns a boolean if a field has been set.
func (o *RouteCommunityListsTypeRegular) HasRegularEntry() bool {
	if o != nil && !IsNil(o.RegularEntry) {
		return true
	}

	return false
}

// SetRegularEntry gets a reference to the given []RouteCommunityListsTypeRegularRegularEntryInner and assigns it to the RegularEntry field.
func (o *RouteCommunityListsTypeRegular) SetRegularEntry(v []RouteCommunityListsTypeRegularRegularEntryInner) {
	o.RegularEntry = v
}

func (o RouteCommunityListsTypeRegular) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteCommunityListsTypeRegular) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegularEntry) {
		toSerialize["regular_entry"] = o.RegularEntry
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RouteCommunityListsTypeRegular) UnmarshalJSON(data []byte) (err error) {
	varRouteCommunityListsTypeRegular := _RouteCommunityListsTypeRegular{}

	err = json.Unmarshal(data, &varRouteCommunityListsTypeRegular)

	if err != nil {
		return err
	}

	*o = RouteCommunityListsTypeRegular(varRouteCommunityListsTypeRegular)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "regular_entry")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRouteCommunityListsTypeRegular struct {
	value *RouteCommunityListsTypeRegular
	isSet bool
}

func (v NullableRouteCommunityListsTypeRegular) Get() *RouteCommunityListsTypeRegular {
	return v.value
}

func (v *NullableRouteCommunityListsTypeRegular) Set(val *RouteCommunityListsTypeRegular) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteCommunityListsTypeRegular) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteCommunityListsTypeRegular) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteCommunityListsTypeRegular(val *RouteCommunityListsTypeRegular) *NullableRouteCommunityListsTypeRegular {
	return &NullableRouteCommunityListsTypeRegular{value: val, isSet: true}
}

func (v NullableRouteCommunityListsTypeRegular) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteCommunityListsTypeRegular) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
