/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpFilterConditionalAdvertisement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpFilterConditionalAdvertisement{}

// BgpFilterConditionalAdvertisement struct for BgpFilterConditionalAdvertisement
type BgpFilterConditionalAdvertisement struct {
	Exist                *BgpFilterConditionalAdvertisementExist    `json:"exist,omitempty"`
	NonExist             *BgpFilterConditionalAdvertisementNonExist `json:"non_exist,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpFilterConditionalAdvertisement BgpFilterConditionalAdvertisement

// NewBgpFilterConditionalAdvertisement instantiates a new BgpFilterConditionalAdvertisement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpFilterConditionalAdvertisement() *BgpFilterConditionalAdvertisement {
	this := BgpFilterConditionalAdvertisement{}
	return &this
}

// NewBgpFilterConditionalAdvertisementWithDefaults instantiates a new BgpFilterConditionalAdvertisement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpFilterConditionalAdvertisementWithDefaults() *BgpFilterConditionalAdvertisement {
	this := BgpFilterConditionalAdvertisement{}
	return &this
}

// GetExist returns the Exist field value if set, zero value otherwise.
func (o *BgpFilterConditionalAdvertisement) GetExist() BgpFilterConditionalAdvertisementExist {
	if o == nil || IsNil(o.Exist) {
		var ret BgpFilterConditionalAdvertisementExist
		return ret
	}
	return *o.Exist
}

// GetExistOk returns a tuple with the Exist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpFilterConditionalAdvertisement) GetExistOk() (*BgpFilterConditionalAdvertisementExist, bool) {
	if o == nil || IsNil(o.Exist) {
		return nil, false
	}
	return o.Exist, true
}

// HasExist returns a boolean if a field has been set.
func (o *BgpFilterConditionalAdvertisement) HasExist() bool {
	if o != nil && !IsNil(o.Exist) {
		return true
	}

	return false
}

// SetExist gets a reference to the given BgpFilterConditionalAdvertisementExist and assigns it to the Exist field.
func (o *BgpFilterConditionalAdvertisement) SetExist(v BgpFilterConditionalAdvertisementExist) {
	o.Exist = &v
}

// GetNonExist returns the NonExist field value if set, zero value otherwise.
func (o *BgpFilterConditionalAdvertisement) GetNonExist() BgpFilterConditionalAdvertisementNonExist {
	if o == nil || IsNil(o.NonExist) {
		var ret BgpFilterConditionalAdvertisementNonExist
		return ret
	}
	return *o.NonExist
}

// GetNonExistOk returns a tuple with the NonExist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpFilterConditionalAdvertisement) GetNonExistOk() (*BgpFilterConditionalAdvertisementNonExist, bool) {
	if o == nil || IsNil(o.NonExist) {
		return nil, false
	}
	return o.NonExist, true
}

// HasNonExist returns a boolean if a field has been set.
func (o *BgpFilterConditionalAdvertisement) HasNonExist() bool {
	if o != nil && !IsNil(o.NonExist) {
		return true
	}

	return false
}

// SetNonExist gets a reference to the given BgpFilterConditionalAdvertisementNonExist and assigns it to the NonExist field.
func (o *BgpFilterConditionalAdvertisement) SetNonExist(v BgpFilterConditionalAdvertisementNonExist) {
	o.NonExist = &v
}

func (o BgpFilterConditionalAdvertisement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpFilterConditionalAdvertisement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exist) {
		toSerialize["exist"] = o.Exist
	}
	if !IsNil(o.NonExist) {
		toSerialize["non_exist"] = o.NonExist
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpFilterConditionalAdvertisement) UnmarshalJSON(data []byte) (err error) {
	varBgpFilterConditionalAdvertisement := _BgpFilterConditionalAdvertisement{}

	err = json.Unmarshal(data, &varBgpFilterConditionalAdvertisement)

	if err != nil {
		return err
	}

	*o = BgpFilterConditionalAdvertisement(varBgpFilterConditionalAdvertisement)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "exist")
		delete(additionalProperties, "non_exist")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpFilterConditionalAdvertisement struct {
	value *BgpFilterConditionalAdvertisement
	isSet bool
}

func (v NullableBgpFilterConditionalAdvertisement) Get() *BgpFilterConditionalAdvertisement {
	return v.value
}

func (v *NullableBgpFilterConditionalAdvertisement) Set(val *BgpFilterConditionalAdvertisement) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpFilterConditionalAdvertisement) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpFilterConditionalAdvertisement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpFilterConditionalAdvertisement(val *BgpFilterConditionalAdvertisement) *NullableBgpFilterConditionalAdvertisement {
	return &NullableBgpFilterConditionalAdvertisement{value: val, isSet: true}
}

func (v NullableBgpFilterConditionalAdvertisement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpFilterConditionalAdvertisement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
