/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerOspfv3AreaInnerType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfv3AreaInnerType{}

// LogicalRoutersVrfInnerOspfv3AreaInnerType struct for LogicalRoutersVrfInnerOspfv3AreaInnerType
type LogicalRoutersVrfInnerOspfv3AreaInnerType struct {
	Normal               *LogicalRoutersVrfInnerOspfAreaInnerTypeNormal `json:"normal,omitempty"`
	Nssa                 *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssa `json:"nssa,omitempty"`
	Stub                 *LogicalRoutersVrfInnerOspfAreaInnerTypeStub   `json:"stub,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfv3AreaInnerType LogicalRoutersVrfInnerOspfv3AreaInnerType

// NewLogicalRoutersVrfInnerOspfv3AreaInnerType instantiates a new LogicalRoutersVrfInnerOspfv3AreaInnerType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfv3AreaInnerType() *LogicalRoutersVrfInnerOspfv3AreaInnerType {
	this := LogicalRoutersVrfInnerOspfv3AreaInnerType{}
	return &this
}

// NewLogicalRoutersVrfInnerOspfv3AreaInnerTypeWithDefaults instantiates a new LogicalRoutersVrfInnerOspfv3AreaInnerType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfv3AreaInnerTypeWithDefaults() *LogicalRoutersVrfInnerOspfv3AreaInnerType {
	this := LogicalRoutersVrfInnerOspfv3AreaInnerType{}
	return &this
}

// GetNormal returns the Normal field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) GetNormal() LogicalRoutersVrfInnerOspfAreaInnerTypeNormal {
	if o == nil || IsNil(o.Normal) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerTypeNormal
		return ret
	}
	return *o.Normal
}

// GetNormalOk returns a tuple with the Normal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) GetNormalOk() (*LogicalRoutersVrfInnerOspfAreaInnerTypeNormal, bool) {
	if o == nil || IsNil(o.Normal) {
		return nil, false
	}
	return o.Normal, true
}

// HasNormal returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) HasNormal() bool {
	if o != nil && !IsNil(o.Normal) {
		return true
	}

	return false
}

// SetNormal gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerTypeNormal and assigns it to the Normal field.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) SetNormal(v LogicalRoutersVrfInnerOspfAreaInnerTypeNormal) {
	o.Normal = &v
}

// GetNssa returns the Nssa field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) GetNssa() LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssa {
	if o == nil || IsNil(o.Nssa) {
		var ret LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssa
		return ret
	}
	return *o.Nssa
}

// GetNssaOk returns a tuple with the Nssa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) GetNssaOk() (*LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssa, bool) {
	if o == nil || IsNil(o.Nssa) {
		return nil, false
	}
	return o.Nssa, true
}

// HasNssa returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) HasNssa() bool {
	if o != nil && !IsNil(o.Nssa) {
		return true
	}

	return false
}

// SetNssa gets a reference to the given LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssa and assigns it to the Nssa field.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) SetNssa(v LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssa) {
	o.Nssa = &v
}

// GetStub returns the Stub field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) GetStub() LogicalRoutersVrfInnerOspfAreaInnerTypeStub {
	if o == nil || IsNil(o.Stub) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerTypeStub
		return ret
	}
	return *o.Stub
}

// GetStubOk returns a tuple with the Stub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) GetStubOk() (*LogicalRoutersVrfInnerOspfAreaInnerTypeStub, bool) {
	if o == nil || IsNil(o.Stub) {
		return nil, false
	}
	return o.Stub, true
}

// HasStub returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) HasStub() bool {
	if o != nil && !IsNil(o.Stub) {
		return true
	}

	return false
}

// SetStub gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerTypeStub and assigns it to the Stub field.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) SetStub(v LogicalRoutersVrfInnerOspfAreaInnerTypeStub) {
	o.Stub = &v
}

func (o LogicalRoutersVrfInnerOspfv3AreaInnerType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfv3AreaInnerType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Normal) {
		toSerialize["normal"] = o.Normal
	}
	if !IsNil(o.Nssa) {
		toSerialize["nssa"] = o.Nssa
	}
	if !IsNil(o.Stub) {
		toSerialize["stub"] = o.Stub
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfv3AreaInnerType) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerOspfv3AreaInnerType := _LogicalRoutersVrfInnerOspfv3AreaInnerType{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfv3AreaInnerType)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfv3AreaInnerType(varLogicalRoutersVrfInnerOspfv3AreaInnerType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "normal")
		delete(additionalProperties, "nssa")
		delete(additionalProperties, "stub")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfv3AreaInnerType struct {
	value *LogicalRoutersVrfInnerOspfv3AreaInnerType
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfv3AreaInnerType) Get() *LogicalRoutersVrfInnerOspfv3AreaInnerType {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfv3AreaInnerType) Set(val *LogicalRoutersVrfInnerOspfv3AreaInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfv3AreaInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfv3AreaInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfv3AreaInnerType(val *LogicalRoutersVrfInnerOspfv3AreaInnerType) *NullableLogicalRoutersVrfInnerOspfv3AreaInnerType {
	return &NullableLogicalRoutersVrfInnerOspfv3AreaInnerType{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfv3AreaInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfv3AreaInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
