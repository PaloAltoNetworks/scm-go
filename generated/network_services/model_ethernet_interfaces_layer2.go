/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the EthernetInterfacesLayer2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthernetInterfacesLayer2{}

// EthernetInterfacesLayer2 struct for EthernetInterfacesLayer2
type EthernetInterfacesLayer2 struct {
	Lldp *EthernetInterfacesLayer2Lldp `json:"lldp,omitempty"`
	// Assign interface to VLAN tag
	VlanTag              *string `json:"vlan_tag,omitempty" validate:"regexp=^([1-9]\\\\d{0,2}|[1-3]\\\\d{3}|40[0-8]\\\\d|409[0-6])$"`
	AdditionalProperties map[string]interface{}
}

type _EthernetInterfacesLayer2 EthernetInterfacesLayer2

// NewEthernetInterfacesLayer2 instantiates a new EthernetInterfacesLayer2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthernetInterfacesLayer2() *EthernetInterfacesLayer2 {
	this := EthernetInterfacesLayer2{}
	return &this
}

// NewEthernetInterfacesLayer2WithDefaults instantiates a new EthernetInterfacesLayer2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthernetInterfacesLayer2WithDefaults() *EthernetInterfacesLayer2 {
	this := EthernetInterfacesLayer2{}
	return &this
}

// GetLldp returns the Lldp field value if set, zero value otherwise.
func (o *EthernetInterfacesLayer2) GetLldp() EthernetInterfacesLayer2Lldp {
	if o == nil || IsNil(o.Lldp) {
		var ret EthernetInterfacesLayer2Lldp
		return ret
	}
	return *o.Lldp
}

// GetLldpOk returns a tuple with the Lldp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthernetInterfacesLayer2) GetLldpOk() (*EthernetInterfacesLayer2Lldp, bool) {
	if o == nil || IsNil(o.Lldp) {
		return nil, false
	}
	return o.Lldp, true
}

// HasLldp returns a boolean if a field has been set.
func (o *EthernetInterfacesLayer2) HasLldp() bool {
	if o != nil && !IsNil(o.Lldp) {
		return true
	}

	return false
}

// SetLldp gets a reference to the given EthernetInterfacesLayer2Lldp and assigns it to the Lldp field.
func (o *EthernetInterfacesLayer2) SetLldp(v EthernetInterfacesLayer2Lldp) {
	o.Lldp = &v
}

// GetVlanTag returns the VlanTag field value if set, zero value otherwise.
func (o *EthernetInterfacesLayer2) GetVlanTag() string {
	if o == nil || IsNil(o.VlanTag) {
		var ret string
		return ret
	}
	return *o.VlanTag
}

// GetVlanTagOk returns a tuple with the VlanTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthernetInterfacesLayer2) GetVlanTagOk() (*string, bool) {
	if o == nil || IsNil(o.VlanTag) {
		return nil, false
	}
	return o.VlanTag, true
}

// HasVlanTag returns a boolean if a field has been set.
func (o *EthernetInterfacesLayer2) HasVlanTag() bool {
	if o != nil && !IsNil(o.VlanTag) {
		return true
	}

	return false
}

// SetVlanTag gets a reference to the given string and assigns it to the VlanTag field.
func (o *EthernetInterfacesLayer2) SetVlanTag(v string) {
	o.VlanTag = &v
}

func (o EthernetInterfacesLayer2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthernetInterfacesLayer2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lldp) {
		toSerialize["lldp"] = o.Lldp
	}
	if !IsNil(o.VlanTag) {
		toSerialize["vlan_tag"] = o.VlanTag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EthernetInterfacesLayer2) UnmarshalJSON(data []byte) (err error) {
	varEthernetInterfacesLayer2 := _EthernetInterfacesLayer2{}

	err = json.Unmarshal(data, &varEthernetInterfacesLayer2)

	if err != nil {
		return err
	}

	*o = EthernetInterfacesLayer2(varEthernetInterfacesLayer2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "lldp")
		delete(additionalProperties, "vlan_tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEthernetInterfacesLayer2 struct {
	value *EthernetInterfacesLayer2
	isSet bool
}

func (v NullableEthernetInterfacesLayer2) Get() *EthernetInterfacesLayer2 {
	return v.value
}

func (v *NullableEthernetInterfacesLayer2) Set(val *EthernetInterfacesLayer2) {
	v.value = val
	v.isSet = true
}

func (v NullableEthernetInterfacesLayer2) IsSet() bool {
	return v.isSet
}

func (v *NullableEthernetInterfacesLayer2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthernetInterfacesLayer2(val *EthernetInterfacesLayer2) *NullableEthernetInterfacesLayer2 {
	return &NullableEthernetInterfacesLayer2{value: val, isSet: true}
}

func (v NullableEthernetInterfacesLayer2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthernetInterfacesLayer2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
