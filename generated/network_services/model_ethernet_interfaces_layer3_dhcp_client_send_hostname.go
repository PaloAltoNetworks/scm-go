/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the EthernetInterfacesLayer3DhcpClientSendHostname type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthernetInterfacesLayer3DhcpClientSendHostname{}

// EthernetInterfacesLayer3DhcpClientSendHostname Ethernet Interfaces DHCP ClientSend hostname
type EthernetInterfacesLayer3DhcpClientSendHostname struct {
	Enable *bool `json:"enable,omitempty"`
	// Set interface hostname
	Hostname             *string `json:"hostname,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\._-]+$"`
	AdditionalProperties map[string]interface{}
}

type _EthernetInterfacesLayer3DhcpClientSendHostname EthernetInterfacesLayer3DhcpClientSendHostname

// NewEthernetInterfacesLayer3DhcpClientSendHostname instantiates a new EthernetInterfacesLayer3DhcpClientSendHostname object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthernetInterfacesLayer3DhcpClientSendHostname() *EthernetInterfacesLayer3DhcpClientSendHostname {
	this := EthernetInterfacesLayer3DhcpClientSendHostname{}
	var enable bool = true
	this.Enable = &enable
	var hostname string = "system-hostname"
	this.Hostname = &hostname
	return &this
}

// NewEthernetInterfacesLayer3DhcpClientSendHostnameWithDefaults instantiates a new EthernetInterfacesLayer3DhcpClientSendHostname object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthernetInterfacesLayer3DhcpClientSendHostnameWithDefaults() *EthernetInterfacesLayer3DhcpClientSendHostname {
	this := EthernetInterfacesLayer3DhcpClientSendHostname{}
	var enable bool = true
	this.Enable = &enable
	var hostname string = "system-hostname"
	this.Hostname = &hostname
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) SetEnable(v bool) {
	o.Enable = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *EthernetInterfacesLayer3DhcpClientSendHostname) SetHostname(v string) {
	o.Hostname = &v
}

func (o EthernetInterfacesLayer3DhcpClientSendHostname) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthernetInterfacesLayer3DhcpClientSendHostname) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EthernetInterfacesLayer3DhcpClientSendHostname) UnmarshalJSON(data []byte) (err error) {
	varEthernetInterfacesLayer3DhcpClientSendHostname := _EthernetInterfacesLayer3DhcpClientSendHostname{}

	err = json.Unmarshal(data, &varEthernetInterfacesLayer3DhcpClientSendHostname)

	if err != nil {
		return err
	}

	*o = EthernetInterfacesLayer3DhcpClientSendHostname(varEthernetInterfacesLayer3DhcpClientSendHostname)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "hostname")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEthernetInterfacesLayer3DhcpClientSendHostname struct {
	value *EthernetInterfacesLayer3DhcpClientSendHostname
	isSet bool
}

func (v NullableEthernetInterfacesLayer3DhcpClientSendHostname) Get() *EthernetInterfacesLayer3DhcpClientSendHostname {
	return v.value
}

func (v *NullableEthernetInterfacesLayer3DhcpClientSendHostname) Set(val *EthernetInterfacesLayer3DhcpClientSendHostname) {
	v.value = val
	v.isSet = true
}

func (v NullableEthernetInterfacesLayer3DhcpClientSendHostname) IsSet() bool {
	return v.isSet
}

func (v *NullableEthernetInterfacesLayer3DhcpClientSendHostname) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthernetInterfacesLayer3DhcpClientSendHostname(val *EthernetInterfacesLayer3DhcpClientSendHostname) *NullableEthernetInterfacesLayer3DhcpClientSendHostname {
	return &NullableEthernetInterfacesLayer3DhcpClientSendHostname{value: val, isSet: true}
}

func (v NullableEthernetInterfacesLayer3DhcpClientSendHostname) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthernetInterfacesLayer3DhcpClientSendHostname) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
