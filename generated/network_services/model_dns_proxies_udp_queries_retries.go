/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the DnsProxiesUdpQueriesRetries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsProxiesUdpQueriesRetries{}

// DnsProxiesUdpQueriesRetries struct for DnsProxiesUdpQueriesRetries
type DnsProxiesUdpQueriesRetries struct {
	// Maximum number of retries before trying next name server
	Attempts *int32 `json:"attempts,omitempty"`
	// Time in seconds for another request to be sent
	Interval             *int32 `json:"interval,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DnsProxiesUdpQueriesRetries DnsProxiesUdpQueriesRetries

// NewDnsProxiesUdpQueriesRetries instantiates a new DnsProxiesUdpQueriesRetries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsProxiesUdpQueriesRetries() *DnsProxiesUdpQueriesRetries {
	this := DnsProxiesUdpQueriesRetries{}
	var attempts int32 = 5
	this.Attempts = &attempts
	var interval int32 = 2
	this.Interval = &interval
	return &this
}

// NewDnsProxiesUdpQueriesRetriesWithDefaults instantiates a new DnsProxiesUdpQueriesRetries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsProxiesUdpQueriesRetriesWithDefaults() *DnsProxiesUdpQueriesRetries {
	this := DnsProxiesUdpQueriesRetries{}
	var attempts int32 = 5
	this.Attempts = &attempts
	var interval int32 = 2
	this.Interval = &interval
	return &this
}

// GetAttempts returns the Attempts field value if set, zero value otherwise.
func (o *DnsProxiesUdpQueriesRetries) GetAttempts() int32 {
	if o == nil || IsNil(o.Attempts) {
		var ret int32
		return ret
	}
	return *o.Attempts
}

// GetAttemptsOk returns a tuple with the Attempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsProxiesUdpQueriesRetries) GetAttemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.Attempts) {
		return nil, false
	}
	return o.Attempts, true
}

// HasAttempts returns a boolean if a field has been set.
func (o *DnsProxiesUdpQueriesRetries) HasAttempts() bool {
	if o != nil && !IsNil(o.Attempts) {
		return true
	}

	return false
}

// SetAttempts gets a reference to the given int32 and assigns it to the Attempts field.
func (o *DnsProxiesUdpQueriesRetries) SetAttempts(v int32) {
	o.Attempts = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *DnsProxiesUdpQueriesRetries) GetInterval() int32 {
	if o == nil || IsNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsProxiesUdpQueriesRetries) GetIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *DnsProxiesUdpQueriesRetries) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *DnsProxiesUdpQueriesRetries) SetInterval(v int32) {
	o.Interval = &v
}

func (o DnsProxiesUdpQueriesRetries) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsProxiesUdpQueriesRetries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attempts) {
		toSerialize["attempts"] = o.Attempts
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DnsProxiesUdpQueriesRetries) UnmarshalJSON(data []byte) (err error) {
	varDnsProxiesUdpQueriesRetries := _DnsProxiesUdpQueriesRetries{}

	err = json.Unmarshal(data, &varDnsProxiesUdpQueriesRetries)

	if err != nil {
		return err
	}

	*o = DnsProxiesUdpQueriesRetries(varDnsProxiesUdpQueriesRetries)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attempts")
		delete(additionalProperties, "interval")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDnsProxiesUdpQueriesRetries struct {
	value *DnsProxiesUdpQueriesRetries
	isSet bool
}

func (v NullableDnsProxiesUdpQueriesRetries) Get() *DnsProxiesUdpQueriesRetries {
	return v.value
}

func (v *NullableDnsProxiesUdpQueriesRetries) Set(val *DnsProxiesUdpQueriesRetries) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsProxiesUdpQueriesRetries) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsProxiesUdpQueriesRetries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsProxiesUdpQueriesRetries(val *DnsProxiesUdpQueriesRetries) *NullableDnsProxiesUdpQueriesRetries {
	return &NullableDnsProxiesUdpQueriesRetries{value: val, isSet: true}
}

func (v NullableDnsProxiesUdpQueriesRetries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsProxiesUdpQueriesRetries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
