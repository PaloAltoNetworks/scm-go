/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the DnsProxiesDefault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsProxiesDefault{}

// DnsProxiesDefault struct for DnsProxiesDefault
type DnsProxiesDefault struct {
	Inheritance *DnsProxiesDefaultInheritance `json:"inheritance,omitempty"`
	// Primary DNS Name server IP address
	Primary string `json:"primary"`
	// Secondary DNS Name server IP address
	Secondary            *string `json:"secondary,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DnsProxiesDefault DnsProxiesDefault

// NewDnsProxiesDefault instantiates a new DnsProxiesDefault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsProxiesDefault(primary string) *DnsProxiesDefault {
	this := DnsProxiesDefault{}
	this.Primary = primary
	return &this
}

// NewDnsProxiesDefaultWithDefaults instantiates a new DnsProxiesDefault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsProxiesDefaultWithDefaults() *DnsProxiesDefault {
	this := DnsProxiesDefault{}
	return &this
}

// GetInheritance returns the Inheritance field value if set, zero value otherwise.
func (o *DnsProxiesDefault) GetInheritance() DnsProxiesDefaultInheritance {
	if o == nil || IsNil(o.Inheritance) {
		var ret DnsProxiesDefaultInheritance
		return ret
	}
	return *o.Inheritance
}

// GetInheritanceOk returns a tuple with the Inheritance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsProxiesDefault) GetInheritanceOk() (*DnsProxiesDefaultInheritance, bool) {
	if o == nil || IsNil(o.Inheritance) {
		return nil, false
	}
	return o.Inheritance, true
}

// HasInheritance returns a boolean if a field has been set.
func (o *DnsProxiesDefault) HasInheritance() bool {
	if o != nil && !IsNil(o.Inheritance) {
		return true
	}

	return false
}

// SetInheritance gets a reference to the given DnsProxiesDefaultInheritance and assigns it to the Inheritance field.
func (o *DnsProxiesDefault) SetInheritance(v DnsProxiesDefaultInheritance) {
	o.Inheritance = &v
}

// GetPrimary returns the Primary field value
func (o *DnsProxiesDefault) GetPrimary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *DnsProxiesDefault) GetPrimaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *DnsProxiesDefault) SetPrimary(v string) {
	o.Primary = v
}

// GetSecondary returns the Secondary field value if set, zero value otherwise.
func (o *DnsProxiesDefault) GetSecondary() string {
	if o == nil || IsNil(o.Secondary) {
		var ret string
		return ret
	}
	return *o.Secondary
}

// GetSecondaryOk returns a tuple with the Secondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsProxiesDefault) GetSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.Secondary) {
		return nil, false
	}
	return o.Secondary, true
}

// HasSecondary returns a boolean if a field has been set.
func (o *DnsProxiesDefault) HasSecondary() bool {
	if o != nil && !IsNil(o.Secondary) {
		return true
	}

	return false
}

// SetSecondary gets a reference to the given string and assigns it to the Secondary field.
func (o *DnsProxiesDefault) SetSecondary(v string) {
	o.Secondary = &v
}

func (o DnsProxiesDefault) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsProxiesDefault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inheritance) {
		toSerialize["inheritance"] = o.Inheritance
	}
	toSerialize["primary"] = o.Primary
	if !IsNil(o.Secondary) {
		toSerialize["secondary"] = o.Secondary
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DnsProxiesDefault) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"primary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDnsProxiesDefault := _DnsProxiesDefault{}

	err = json.Unmarshal(data, &varDnsProxiesDefault)

	if err != nil {
		return err
	}

	*o = DnsProxiesDefault(varDnsProxiesDefault)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "inheritance")
		delete(additionalProperties, "primary")
		delete(additionalProperties, "secondary")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDnsProxiesDefault struct {
	value *DnsProxiesDefault
	isSet bool
}

func (v NullableDnsProxiesDefault) Get() *DnsProxiesDefault {
	return v.value
}

func (v *NullableDnsProxiesDefault) Set(val *DnsProxiesDefault) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsProxiesDefault) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsProxiesDefault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsProxiesDefault(val *DnsProxiesDefault) *NullableDnsProxiesDefault {
	return &NullableDnsProxiesDefault{value: val, isSet: true}
}

func (v NullableDnsProxiesDefault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsProxiesDefault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
