/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption{}

// LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption struct for LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption
type LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption struct {
	Passive              map[string]interface{} `json:"passive,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption

// NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption instantiates a new LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption() *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption {
	this := LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption{}
	return &this
}

// NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOptionWithDefaults instantiates a new LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOptionWithDefaults() *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption {
	this := LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption{}
	return &this
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) GetPassive() map[string]interface{} {
	if o == nil || IsNil(o.Passive) {
		var ret map[string]interface{}
		return ret
	}
	return o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) GetPassiveOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Passive) {
		return map[string]interface{}{}, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given map[string]interface{} and assigns it to the Passive field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) SetPassive(v map[string]interface{}) {
	o.Passive = v
}

func (o LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption := _LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption(varLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "passive")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption struct {
	value *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) Get() *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) Set(val *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption(val *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption {
	return &NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
