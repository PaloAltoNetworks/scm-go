/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the IkeGatewaysAuthenticationPreSharedKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IkeGatewaysAuthenticationPreSharedKey{}

// IkeGatewaysAuthenticationPreSharedKey struct for IkeGatewaysAuthenticationPreSharedKey
type IkeGatewaysAuthenticationPreSharedKey struct {
	Key                  *string `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IkeGatewaysAuthenticationPreSharedKey IkeGatewaysAuthenticationPreSharedKey

// NewIkeGatewaysAuthenticationPreSharedKey instantiates a new IkeGatewaysAuthenticationPreSharedKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIkeGatewaysAuthenticationPreSharedKey() *IkeGatewaysAuthenticationPreSharedKey {
	this := IkeGatewaysAuthenticationPreSharedKey{}
	return &this
}

// NewIkeGatewaysAuthenticationPreSharedKeyWithDefaults instantiates a new IkeGatewaysAuthenticationPreSharedKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIkeGatewaysAuthenticationPreSharedKeyWithDefaults() *IkeGatewaysAuthenticationPreSharedKey {
	this := IkeGatewaysAuthenticationPreSharedKey{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IkeGatewaysAuthenticationPreSharedKey) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IkeGatewaysAuthenticationPreSharedKey) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IkeGatewaysAuthenticationPreSharedKey) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IkeGatewaysAuthenticationPreSharedKey) SetKey(v string) {
	o.Key = &v
}

func (o IkeGatewaysAuthenticationPreSharedKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IkeGatewaysAuthenticationPreSharedKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IkeGatewaysAuthenticationPreSharedKey) UnmarshalJSON(data []byte) (err error) {
	varIkeGatewaysAuthenticationPreSharedKey := _IkeGatewaysAuthenticationPreSharedKey{}

	err = json.Unmarshal(data, &varIkeGatewaysAuthenticationPreSharedKey)

	if err != nil {
		return err
	}

	*o = IkeGatewaysAuthenticationPreSharedKey(varIkeGatewaysAuthenticationPreSharedKey)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIkeGatewaysAuthenticationPreSharedKey struct {
	value *IkeGatewaysAuthenticationPreSharedKey
	isSet bool
}

func (v NullableIkeGatewaysAuthenticationPreSharedKey) Get() *IkeGatewaysAuthenticationPreSharedKey {
	return v.value
}

func (v *NullableIkeGatewaysAuthenticationPreSharedKey) Set(val *IkeGatewaysAuthenticationPreSharedKey) {
	v.value = val
	v.isSet = true
}

func (v NullableIkeGatewaysAuthenticationPreSharedKey) IsSet() bool {
	return v.isSet
}

func (v *NullableIkeGatewaysAuthenticationPreSharedKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIkeGatewaysAuthenticationPreSharedKey(val *IkeGatewaysAuthenticationPreSharedKey) *NullableIkeGatewaysAuthenticationPreSharedKey {
	return &NullableIkeGatewaysAuthenticationPreSharedKey{value: val, isSet: true}
}

func (v NullableIkeGatewaysAuthenticationPreSharedKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIkeGatewaysAuthenticationPreSharedKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
