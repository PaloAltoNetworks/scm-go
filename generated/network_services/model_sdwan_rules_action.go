/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the SdwanRulesAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdwanRulesAction{}

// SdwanRulesAction struct for SdwanRulesAction
type SdwanRulesAction struct {
	// Traffic dstribution profile
	TrafficDistributionProfile string `json:"traffic_distribution_profile"`
	AdditionalProperties       map[string]interface{}
}

type _SdwanRulesAction SdwanRulesAction

// NewSdwanRulesAction instantiates a new SdwanRulesAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdwanRulesAction(trafficDistributionProfile string) *SdwanRulesAction {
	this := SdwanRulesAction{}
	this.TrafficDistributionProfile = trafficDistributionProfile
	return &this
}

// NewSdwanRulesActionWithDefaults instantiates a new SdwanRulesAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdwanRulesActionWithDefaults() *SdwanRulesAction {
	this := SdwanRulesAction{}
	return &this
}

// GetTrafficDistributionProfile returns the TrafficDistributionProfile field value
func (o *SdwanRulesAction) GetTrafficDistributionProfile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrafficDistributionProfile
}

// GetTrafficDistributionProfileOk returns a tuple with the TrafficDistributionProfile field value
// and a boolean to check if the value has been set.
func (o *SdwanRulesAction) GetTrafficDistributionProfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrafficDistributionProfile, true
}

// SetTrafficDistributionProfile sets field value
func (o *SdwanRulesAction) SetTrafficDistributionProfile(v string) {
	o.TrafficDistributionProfile = v
}

func (o SdwanRulesAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdwanRulesAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["traffic_distribution_profile"] = o.TrafficDistributionProfile

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SdwanRulesAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"traffic_distribution_profile",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSdwanRulesAction := _SdwanRulesAction{}

	err = json.Unmarshal(data, &varSdwanRulesAction)

	if err != nil {
		return err
	}

	*o = SdwanRulesAction(varSdwanRulesAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "traffic_distribution_profile")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSdwanRulesAction struct {
	value *SdwanRulesAction
	isSet bool
}

func (v NullableSdwanRulesAction) Get() *SdwanRulesAction {
	return v.value
}

func (v *NullableSdwanRulesAction) Set(val *SdwanRulesAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSdwanRulesAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSdwanRulesAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdwanRulesAction(val *SdwanRulesAction) *NullableSdwanRulesAction {
	return &NullableSdwanRulesAction{value: val, isSet: true}
}

func (v NullableSdwanRulesAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdwanRulesAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
