/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastPimRp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastPimRp{}

// LogicalRoutersVrfInnerMulticastPimRp struct for LogicalRoutersVrfInnerMulticastPimRp
type LogicalRoutersVrfInnerMulticastPimRp struct {
	ExternalRp           []LogicalRoutersVrfInnerMulticastPimRpExternalRpInner `json:"external_rp,omitempty"`
	LocalRp              *LogicalRoutersVrfInnerMulticastPimRpLocalRp          `json:"local_rp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastPimRp LogicalRoutersVrfInnerMulticastPimRp

// NewLogicalRoutersVrfInnerMulticastPimRp instantiates a new LogicalRoutersVrfInnerMulticastPimRp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastPimRp() *LogicalRoutersVrfInnerMulticastPimRp {
	this := LogicalRoutersVrfInnerMulticastPimRp{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastPimRpWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastPimRp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastPimRpWithDefaults() *LogicalRoutersVrfInnerMulticastPimRp {
	this := LogicalRoutersVrfInnerMulticastPimRp{}
	return &this
}

// GetExternalRp returns the ExternalRp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPimRp) GetExternalRp() []LogicalRoutersVrfInnerMulticastPimRpExternalRpInner {
	if o == nil || IsNil(o.ExternalRp) {
		var ret []LogicalRoutersVrfInnerMulticastPimRpExternalRpInner
		return ret
	}
	return o.ExternalRp
}

// GetExternalRpOk returns a tuple with the ExternalRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRp) GetExternalRpOk() ([]LogicalRoutersVrfInnerMulticastPimRpExternalRpInner, bool) {
	if o == nil || IsNil(o.ExternalRp) {
		return nil, false
	}
	return o.ExternalRp, true
}

// HasExternalRp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRp) HasExternalRp() bool {
	if o != nil && !IsNil(o.ExternalRp) {
		return true
	}

	return false
}

// SetExternalRp gets a reference to the given []LogicalRoutersVrfInnerMulticastPimRpExternalRpInner and assigns it to the ExternalRp field.
func (o *LogicalRoutersVrfInnerMulticastPimRp) SetExternalRp(v []LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) {
	o.ExternalRp = v
}

// GetLocalRp returns the LocalRp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPimRp) GetLocalRp() LogicalRoutersVrfInnerMulticastPimRpLocalRp {
	if o == nil || IsNil(o.LocalRp) {
		var ret LogicalRoutersVrfInnerMulticastPimRpLocalRp
		return ret
	}
	return *o.LocalRp
}

// GetLocalRpOk returns a tuple with the LocalRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRp) GetLocalRpOk() (*LogicalRoutersVrfInnerMulticastPimRpLocalRp, bool) {
	if o == nil || IsNil(o.LocalRp) {
		return nil, false
	}
	return o.LocalRp, true
}

// HasLocalRp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRp) HasLocalRp() bool {
	if o != nil && !IsNil(o.LocalRp) {
		return true
	}

	return false
}

// SetLocalRp gets a reference to the given LogicalRoutersVrfInnerMulticastPimRpLocalRp and assigns it to the LocalRp field.
func (o *LogicalRoutersVrfInnerMulticastPimRp) SetLocalRp(v LogicalRoutersVrfInnerMulticastPimRpLocalRp) {
	o.LocalRp = &v
}

func (o LogicalRoutersVrfInnerMulticastPimRp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastPimRp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalRp) {
		toSerialize["external_rp"] = o.ExternalRp
	}
	if !IsNil(o.LocalRp) {
		toSerialize["local_rp"] = o.LocalRp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastPimRp) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastPimRp := _LogicalRoutersVrfInnerMulticastPimRp{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastPimRp)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastPimRp(varLogicalRoutersVrfInnerMulticastPimRp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "external_rp")
		delete(additionalProperties, "local_rp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastPimRp struct {
	value *LogicalRoutersVrfInnerMulticastPimRp
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastPimRp) Get() *LogicalRoutersVrfInnerMulticastPimRp {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastPimRp) Set(val *LogicalRoutersVrfInnerMulticastPimRp) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastPimRp) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastPimRp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastPimRp(val *LogicalRoutersVrfInnerMulticastPimRp) *NullableLogicalRoutersVrfInnerMulticastPimRp {
	return &NullableLogicalRoutersVrfInnerMulticastPimRp{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastPimRp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastPimRp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
