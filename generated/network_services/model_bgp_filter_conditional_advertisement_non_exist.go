/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpFilterConditionalAdvertisementNonExist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpFilterConditionalAdvertisementNonExist{}

// BgpFilterConditionalAdvertisementNonExist struct for BgpFilterConditionalAdvertisementNonExist
type BgpFilterConditionalAdvertisementNonExist struct {
	AdvertiseMap         *string `json:"advertise_map,omitempty"`
	NonExistMap          *string `json:"non_exist_map,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpFilterConditionalAdvertisementNonExist BgpFilterConditionalAdvertisementNonExist

// NewBgpFilterConditionalAdvertisementNonExist instantiates a new BgpFilterConditionalAdvertisementNonExist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpFilterConditionalAdvertisementNonExist() *BgpFilterConditionalAdvertisementNonExist {
	this := BgpFilterConditionalAdvertisementNonExist{}
	return &this
}

// NewBgpFilterConditionalAdvertisementNonExistWithDefaults instantiates a new BgpFilterConditionalAdvertisementNonExist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpFilterConditionalAdvertisementNonExistWithDefaults() *BgpFilterConditionalAdvertisementNonExist {
	this := BgpFilterConditionalAdvertisementNonExist{}
	return &this
}

// GetAdvertiseMap returns the AdvertiseMap field value if set, zero value otherwise.
func (o *BgpFilterConditionalAdvertisementNonExist) GetAdvertiseMap() string {
	if o == nil || IsNil(o.AdvertiseMap) {
		var ret string
		return ret
	}
	return *o.AdvertiseMap
}

// GetAdvertiseMapOk returns a tuple with the AdvertiseMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpFilterConditionalAdvertisementNonExist) GetAdvertiseMapOk() (*string, bool) {
	if o == nil || IsNil(o.AdvertiseMap) {
		return nil, false
	}
	return o.AdvertiseMap, true
}

// HasAdvertiseMap returns a boolean if a field has been set.
func (o *BgpFilterConditionalAdvertisementNonExist) HasAdvertiseMap() bool {
	if o != nil && !IsNil(o.AdvertiseMap) {
		return true
	}

	return false
}

// SetAdvertiseMap gets a reference to the given string and assigns it to the AdvertiseMap field.
func (o *BgpFilterConditionalAdvertisementNonExist) SetAdvertiseMap(v string) {
	o.AdvertiseMap = &v
}

// GetNonExistMap returns the NonExistMap field value if set, zero value otherwise.
func (o *BgpFilterConditionalAdvertisementNonExist) GetNonExistMap() string {
	if o == nil || IsNil(o.NonExistMap) {
		var ret string
		return ret
	}
	return *o.NonExistMap
}

// GetNonExistMapOk returns a tuple with the NonExistMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpFilterConditionalAdvertisementNonExist) GetNonExistMapOk() (*string, bool) {
	if o == nil || IsNil(o.NonExistMap) {
		return nil, false
	}
	return o.NonExistMap, true
}

// HasNonExistMap returns a boolean if a field has been set.
func (o *BgpFilterConditionalAdvertisementNonExist) HasNonExistMap() bool {
	if o != nil && !IsNil(o.NonExistMap) {
		return true
	}

	return false
}

// SetNonExistMap gets a reference to the given string and assigns it to the NonExistMap field.
func (o *BgpFilterConditionalAdvertisementNonExist) SetNonExistMap(v string) {
	o.NonExistMap = &v
}

func (o BgpFilterConditionalAdvertisementNonExist) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpFilterConditionalAdvertisementNonExist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvertiseMap) {
		toSerialize["advertise_map"] = o.AdvertiseMap
	}
	if !IsNil(o.NonExistMap) {
		toSerialize["non_exist_map"] = o.NonExistMap
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpFilterConditionalAdvertisementNonExist) UnmarshalJSON(data []byte) (err error) {
	varBgpFilterConditionalAdvertisementNonExist := _BgpFilterConditionalAdvertisementNonExist{}

	err = json.Unmarshal(data, &varBgpFilterConditionalAdvertisementNonExist)

	if err != nil {
		return err
	}

	*o = BgpFilterConditionalAdvertisementNonExist(varBgpFilterConditionalAdvertisementNonExist)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "advertise_map")
		delete(additionalProperties, "non_exist_map")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpFilterConditionalAdvertisementNonExist struct {
	value *BgpFilterConditionalAdvertisementNonExist
	isSet bool
}

func (v NullableBgpFilterConditionalAdvertisementNonExist) Get() *BgpFilterConditionalAdvertisementNonExist {
	return v.value
}

func (v *NullableBgpFilterConditionalAdvertisementNonExist) Set(val *BgpFilterConditionalAdvertisementNonExist) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpFilterConditionalAdvertisementNonExist) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpFilterConditionalAdvertisementNonExist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpFilterConditionalAdvertisementNonExist(val *BgpFilterConditionalAdvertisementNonExist) *NullableBgpFilterConditionalAdvertisementNonExist {
	return &NullableBgpFilterConditionalAdvertisementNonExist{value: val, isSet: true}
}

func (v NullableBgpFilterConditionalAdvertisementNonExist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpFilterConditionalAdvertisementNonExist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
