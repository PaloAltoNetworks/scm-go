/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerRibFilterIpv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRibFilterIpv4{}

// LogicalRoutersVrfInnerRibFilterIpv4 struct for LogicalRoutersVrfInnerRibFilterIpv4
type LogicalRoutersVrfInnerRibFilterIpv4 struct {
	Bgp                  *LogicalRoutersVrfInnerRibFilterIpv4Bgp `json:"bgp,omitempty"`
	Ospf                 *LogicalRoutersVrfInnerRibFilterIpv4Bgp `json:"ospf,omitempty"`
	Rip                  *LogicalRoutersVrfInnerRibFilterIpv4Bgp `json:"rip,omitempty"`
	Static               *LogicalRoutersVrfInnerRibFilterIpv4Bgp `json:"static,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRibFilterIpv4 LogicalRoutersVrfInnerRibFilterIpv4

// NewLogicalRoutersVrfInnerRibFilterIpv4 instantiates a new LogicalRoutersVrfInnerRibFilterIpv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRibFilterIpv4() *LogicalRoutersVrfInnerRibFilterIpv4 {
	this := LogicalRoutersVrfInnerRibFilterIpv4{}
	return &this
}

// NewLogicalRoutersVrfInnerRibFilterIpv4WithDefaults instantiates a new LogicalRoutersVrfInnerRibFilterIpv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRibFilterIpv4WithDefaults() *LogicalRoutersVrfInnerRibFilterIpv4 {
	this := LogicalRoutersVrfInnerRibFilterIpv4{}
	return &this
}

// GetBgp returns the Bgp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetBgp() LogicalRoutersVrfInnerRibFilterIpv4Bgp {
	if o == nil || IsNil(o.Bgp) {
		var ret LogicalRoutersVrfInnerRibFilterIpv4Bgp
		return ret
	}
	return *o.Bgp
}

// GetBgpOk returns a tuple with the Bgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetBgpOk() (*LogicalRoutersVrfInnerRibFilterIpv4Bgp, bool) {
	if o == nil || IsNil(o.Bgp) {
		return nil, false
	}
	return o.Bgp, true
}

// HasBgp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) HasBgp() bool {
	if o != nil && !IsNil(o.Bgp) {
		return true
	}

	return false
}

// SetBgp gets a reference to the given LogicalRoutersVrfInnerRibFilterIpv4Bgp and assigns it to the Bgp field.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) SetBgp(v LogicalRoutersVrfInnerRibFilterIpv4Bgp) {
	o.Bgp = &v
}

// GetOspf returns the Ospf field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetOspf() LogicalRoutersVrfInnerRibFilterIpv4Bgp {
	if o == nil || IsNil(o.Ospf) {
		var ret LogicalRoutersVrfInnerRibFilterIpv4Bgp
		return ret
	}
	return *o.Ospf
}

// GetOspfOk returns a tuple with the Ospf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetOspfOk() (*LogicalRoutersVrfInnerRibFilterIpv4Bgp, bool) {
	if o == nil || IsNil(o.Ospf) {
		return nil, false
	}
	return o.Ospf, true
}

// HasOspf returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) HasOspf() bool {
	if o != nil && !IsNil(o.Ospf) {
		return true
	}

	return false
}

// SetOspf gets a reference to the given LogicalRoutersVrfInnerRibFilterIpv4Bgp and assigns it to the Ospf field.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) SetOspf(v LogicalRoutersVrfInnerRibFilterIpv4Bgp) {
	o.Ospf = &v
}

// GetRip returns the Rip field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetRip() LogicalRoutersVrfInnerRibFilterIpv4Bgp {
	if o == nil || IsNil(o.Rip) {
		var ret LogicalRoutersVrfInnerRibFilterIpv4Bgp
		return ret
	}
	return *o.Rip
}

// GetRipOk returns a tuple with the Rip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetRipOk() (*LogicalRoutersVrfInnerRibFilterIpv4Bgp, bool) {
	if o == nil || IsNil(o.Rip) {
		return nil, false
	}
	return o.Rip, true
}

// HasRip returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) HasRip() bool {
	if o != nil && !IsNil(o.Rip) {
		return true
	}

	return false
}

// SetRip gets a reference to the given LogicalRoutersVrfInnerRibFilterIpv4Bgp and assigns it to the Rip field.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) SetRip(v LogicalRoutersVrfInnerRibFilterIpv4Bgp) {
	o.Rip = &v
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetStatic() LogicalRoutersVrfInnerRibFilterIpv4Bgp {
	if o == nil || IsNil(o.Static) {
		var ret LogicalRoutersVrfInnerRibFilterIpv4Bgp
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) GetStaticOk() (*LogicalRoutersVrfInnerRibFilterIpv4Bgp, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given LogicalRoutersVrfInnerRibFilterIpv4Bgp and assigns it to the Static field.
func (o *LogicalRoutersVrfInnerRibFilterIpv4) SetStatic(v LogicalRoutersVrfInnerRibFilterIpv4Bgp) {
	o.Static = &v
}

func (o LogicalRoutersVrfInnerRibFilterIpv4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRibFilterIpv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bgp) {
		toSerialize["bgp"] = o.Bgp
	}
	if !IsNil(o.Ospf) {
		toSerialize["ospf"] = o.Ospf
	}
	if !IsNil(o.Rip) {
		toSerialize["rip"] = o.Rip
	}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRibFilterIpv4) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerRibFilterIpv4 := _LogicalRoutersVrfInnerRibFilterIpv4{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRibFilterIpv4)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRibFilterIpv4(varLogicalRoutersVrfInnerRibFilterIpv4)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bgp")
		delete(additionalProperties, "ospf")
		delete(additionalProperties, "rip")
		delete(additionalProperties, "static")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRibFilterIpv4 struct {
	value *LogicalRoutersVrfInnerRibFilterIpv4
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRibFilterIpv4) Get() *LogicalRoutersVrfInnerRibFilterIpv4 {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRibFilterIpv4) Set(val *LogicalRoutersVrfInnerRibFilterIpv4) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRibFilterIpv4) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRibFilterIpv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRibFilterIpv4(val *LogicalRoutersVrfInnerRibFilterIpv4) *NullableLogicalRoutersVrfInnerRibFilterIpv4 {
	return &NullableLogicalRoutersVrfInnerRibFilterIpv4{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRibFilterIpv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRibFilterIpv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
