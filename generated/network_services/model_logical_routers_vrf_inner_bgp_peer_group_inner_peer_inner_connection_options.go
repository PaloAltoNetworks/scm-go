/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions{}

// LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions struct for LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions
type LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions struct {
	Authentication        *string                                                                                 `json:"authentication,omitempty"`
	Dampening             *string                                                                                 `json:"dampening,omitempty"`
	HoldTime              *string                                                                                 `json:"hold_time,omitempty"`
	IdleHoldTime          *float32                                                                                `json:"idle_hold_time,omitempty"`
	IncomingBgpConnection *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsIncomingBgpConnection `json:"incoming_bgp_connection,omitempty"`
	KeepAliveInterval     *string                                                                                 `json:"keep_alive_interval,omitempty"`
	MaxPrefixes           *string                                                                                 `json:"max_prefixes,omitempty"`
	MinRouteAdvInterval   *float32                                                                                `json:"min_route_adv_interval,omitempty"`
	Multihop              *string                                                                                 `json:"multihop,omitempty"`
	OpenDelayTime         *float32                                                                                `json:"open_delay_time,omitempty"`
	OutgoingBgpConnection *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsOutgoingBgpConnection `json:"outgoing_bgp_connection,omitempty"`
	Timers                *string                                                                                 `json:"timers,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions

// NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions instantiates a new LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions() *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions {
	this := LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions{}
	return &this
}

// NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsWithDefaults instantiates a new LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsWithDefaults() *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions {
	this := LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions{}
	return &this
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetDampening returns the Dampening field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetDampening() string {
	if o == nil || IsNil(o.Dampening) {
		var ret string
		return ret
	}
	return *o.Dampening
}

// GetDampeningOk returns a tuple with the Dampening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetDampeningOk() (*string, bool) {
	if o == nil || IsNil(o.Dampening) {
		return nil, false
	}
	return o.Dampening, true
}

// HasDampening returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasDampening() bool {
	if o != nil && !IsNil(o.Dampening) {
		return true
	}

	return false
}

// SetDampening gets a reference to the given string and assigns it to the Dampening field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetDampening(v string) {
	o.Dampening = &v
}

// GetHoldTime returns the HoldTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetHoldTime() string {
	if o == nil || IsNil(o.HoldTime) {
		var ret string
		return ret
	}
	return *o.HoldTime
}

// GetHoldTimeOk returns a tuple with the HoldTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetHoldTimeOk() (*string, bool) {
	if o == nil || IsNil(o.HoldTime) {
		return nil, false
	}
	return o.HoldTime, true
}

// HasHoldTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasHoldTime() bool {
	if o != nil && !IsNil(o.HoldTime) {
		return true
	}

	return false
}

// SetHoldTime gets a reference to the given string and assigns it to the HoldTime field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetHoldTime(v string) {
	o.HoldTime = &v
}

// GetIdleHoldTime returns the IdleHoldTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetIdleHoldTime() float32 {
	if o == nil || IsNil(o.IdleHoldTime) {
		var ret float32
		return ret
	}
	return *o.IdleHoldTime
}

// GetIdleHoldTimeOk returns a tuple with the IdleHoldTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetIdleHoldTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.IdleHoldTime) {
		return nil, false
	}
	return o.IdleHoldTime, true
}

// HasIdleHoldTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasIdleHoldTime() bool {
	if o != nil && !IsNil(o.IdleHoldTime) {
		return true
	}

	return false
}

// SetIdleHoldTime gets a reference to the given float32 and assigns it to the IdleHoldTime field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetIdleHoldTime(v float32) {
	o.IdleHoldTime = &v
}

// GetIncomingBgpConnection returns the IncomingBgpConnection field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetIncomingBgpConnection() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsIncomingBgpConnection {
	if o == nil || IsNil(o.IncomingBgpConnection) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsIncomingBgpConnection
		return ret
	}
	return *o.IncomingBgpConnection
}

// GetIncomingBgpConnectionOk returns a tuple with the IncomingBgpConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetIncomingBgpConnectionOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsIncomingBgpConnection, bool) {
	if o == nil || IsNil(o.IncomingBgpConnection) {
		return nil, false
	}
	return o.IncomingBgpConnection, true
}

// HasIncomingBgpConnection returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasIncomingBgpConnection() bool {
	if o != nil && !IsNil(o.IncomingBgpConnection) {
		return true
	}

	return false
}

// SetIncomingBgpConnection gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsIncomingBgpConnection and assigns it to the IncomingBgpConnection field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetIncomingBgpConnection(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsIncomingBgpConnection) {
	o.IncomingBgpConnection = &v
}

// GetKeepAliveInterval returns the KeepAliveInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetKeepAliveInterval() string {
	if o == nil || IsNil(o.KeepAliveInterval) {
		var ret string
		return ret
	}
	return *o.KeepAliveInterval
}

// GetKeepAliveIntervalOk returns a tuple with the KeepAliveInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetKeepAliveIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.KeepAliveInterval) {
		return nil, false
	}
	return o.KeepAliveInterval, true
}

// HasKeepAliveInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasKeepAliveInterval() bool {
	if o != nil && !IsNil(o.KeepAliveInterval) {
		return true
	}

	return false
}

// SetKeepAliveInterval gets a reference to the given string and assigns it to the KeepAliveInterval field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetKeepAliveInterval(v string) {
	o.KeepAliveInterval = &v
}

// GetMaxPrefixes returns the MaxPrefixes field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetMaxPrefixes() string {
	if o == nil || IsNil(o.MaxPrefixes) {
		var ret string
		return ret
	}
	return *o.MaxPrefixes
}

// GetMaxPrefixesOk returns a tuple with the MaxPrefixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetMaxPrefixesOk() (*string, bool) {
	if o == nil || IsNil(o.MaxPrefixes) {
		return nil, false
	}
	return o.MaxPrefixes, true
}

// HasMaxPrefixes returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasMaxPrefixes() bool {
	if o != nil && !IsNil(o.MaxPrefixes) {
		return true
	}

	return false
}

// SetMaxPrefixes gets a reference to the given string and assigns it to the MaxPrefixes field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetMaxPrefixes(v string) {
	o.MaxPrefixes = &v
}

// GetMinRouteAdvInterval returns the MinRouteAdvInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetMinRouteAdvInterval() float32 {
	if o == nil || IsNil(o.MinRouteAdvInterval) {
		var ret float32
		return ret
	}
	return *o.MinRouteAdvInterval
}

// GetMinRouteAdvIntervalOk returns a tuple with the MinRouteAdvInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetMinRouteAdvIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.MinRouteAdvInterval) {
		return nil, false
	}
	return o.MinRouteAdvInterval, true
}

// HasMinRouteAdvInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasMinRouteAdvInterval() bool {
	if o != nil && !IsNil(o.MinRouteAdvInterval) {
		return true
	}

	return false
}

// SetMinRouteAdvInterval gets a reference to the given float32 and assigns it to the MinRouteAdvInterval field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetMinRouteAdvInterval(v float32) {
	o.MinRouteAdvInterval = &v
}

// GetMultihop returns the Multihop field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetMultihop() string {
	if o == nil || IsNil(o.Multihop) {
		var ret string
		return ret
	}
	return *o.Multihop
}

// GetMultihopOk returns a tuple with the Multihop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetMultihopOk() (*string, bool) {
	if o == nil || IsNil(o.Multihop) {
		return nil, false
	}
	return o.Multihop, true
}

// HasMultihop returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasMultihop() bool {
	if o != nil && !IsNil(o.Multihop) {
		return true
	}

	return false
}

// SetMultihop gets a reference to the given string and assigns it to the Multihop field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetMultihop(v string) {
	o.Multihop = &v
}

// GetOpenDelayTime returns the OpenDelayTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetOpenDelayTime() float32 {
	if o == nil || IsNil(o.OpenDelayTime) {
		var ret float32
		return ret
	}
	return *o.OpenDelayTime
}

// GetOpenDelayTimeOk returns a tuple with the OpenDelayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetOpenDelayTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.OpenDelayTime) {
		return nil, false
	}
	return o.OpenDelayTime, true
}

// HasOpenDelayTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasOpenDelayTime() bool {
	if o != nil && !IsNil(o.OpenDelayTime) {
		return true
	}

	return false
}

// SetOpenDelayTime gets a reference to the given float32 and assigns it to the OpenDelayTime field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetOpenDelayTime(v float32) {
	o.OpenDelayTime = &v
}

// GetOutgoingBgpConnection returns the OutgoingBgpConnection field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetOutgoingBgpConnection() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsOutgoingBgpConnection {
	if o == nil || IsNil(o.OutgoingBgpConnection) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsOutgoingBgpConnection
		return ret
	}
	return *o.OutgoingBgpConnection
}

// GetOutgoingBgpConnectionOk returns a tuple with the OutgoingBgpConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetOutgoingBgpConnectionOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsOutgoingBgpConnection, bool) {
	if o == nil || IsNil(o.OutgoingBgpConnection) {
		return nil, false
	}
	return o.OutgoingBgpConnection, true
}

// HasOutgoingBgpConnection returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasOutgoingBgpConnection() bool {
	if o != nil && !IsNil(o.OutgoingBgpConnection) {
		return true
	}

	return false
}

// SetOutgoingBgpConnection gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsOutgoingBgpConnection and assigns it to the OutgoingBgpConnection field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetOutgoingBgpConnection(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptionsOutgoingBgpConnection) {
	o.OutgoingBgpConnection = &v
}

// GetTimers returns the Timers field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetTimers() string {
	if o == nil || IsNil(o.Timers) {
		var ret string
		return ret
	}
	return *o.Timers
}

// GetTimersOk returns a tuple with the Timers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) GetTimersOk() (*string, bool) {
	if o == nil || IsNil(o.Timers) {
		return nil, false
	}
	return o.Timers, true
}

// HasTimers returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) HasTimers() bool {
	if o != nil && !IsNil(o.Timers) {
		return true
	}

	return false
}

// SetTimers gets a reference to the given string and assigns it to the Timers field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) SetTimers(v string) {
	o.Timers = &v
}

func (o LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.Dampening) {
		toSerialize["dampening"] = o.Dampening
	}
	if !IsNil(o.HoldTime) {
		toSerialize["hold_time"] = o.HoldTime
	}
	if !IsNil(o.IdleHoldTime) {
		toSerialize["idle_hold_time"] = o.IdleHoldTime
	}
	if !IsNil(o.IncomingBgpConnection) {
		toSerialize["incoming_bgp_connection"] = o.IncomingBgpConnection
	}
	if !IsNil(o.KeepAliveInterval) {
		toSerialize["keep_alive_interval"] = o.KeepAliveInterval
	}
	if !IsNil(o.MaxPrefixes) {
		toSerialize["max_prefixes"] = o.MaxPrefixes
	}
	if !IsNil(o.MinRouteAdvInterval) {
		toSerialize["min_route_adv_interval"] = o.MinRouteAdvInterval
	}
	if !IsNil(o.Multihop) {
		toSerialize["multihop"] = o.Multihop
	}
	if !IsNil(o.OpenDelayTime) {
		toSerialize["open_delay_time"] = o.OpenDelayTime
	}
	if !IsNil(o.OutgoingBgpConnection) {
		toSerialize["outgoing_bgp_connection"] = o.OutgoingBgpConnection
	}
	if !IsNil(o.Timers) {
		toSerialize["timers"] = o.Timers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions := _LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions(varLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "dampening")
		delete(additionalProperties, "hold_time")
		delete(additionalProperties, "idle_hold_time")
		delete(additionalProperties, "incoming_bgp_connection")
		delete(additionalProperties, "keep_alive_interval")
		delete(additionalProperties, "max_prefixes")
		delete(additionalProperties, "min_route_adv_interval")
		delete(additionalProperties, "multihop")
		delete(additionalProperties, "open_delay_time")
		delete(additionalProperties, "outgoing_bgp_connection")
		delete(additionalProperties, "timers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions struct {
	value *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) Get() *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) Set(val *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions(val *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions {
	return &NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
