/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticast type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticast{}

// LogicalRoutersVrfInnerMulticast struct for LogicalRoutersVrfInnerMulticast
type LogicalRoutersVrfInnerMulticast struct {
	Enable               *bool                                                                                      `json:"enable,omitempty"`
	EnableV6             *bool                                                                                      `json:"enable_v6,omitempty"`
	Igmp                 *LogicalRoutersVrfInnerMulticastIgmp                                                       `json:"igmp,omitempty"`
	InterfaceGroup       []LogicalRoutersVrfInnerMulticastInterfaceGroupInner                                       `json:"interface_group,omitempty"`
	Mode                 *string                                                                                    `json:"mode,omitempty"`
	Msdp                 *LogicalRoutersVrfInnerMulticastMsdp                                                       `json:"msdp,omitempty"`
	Pim                  *LogicalRoutersVrfInnerMulticastPim                                                        `json:"pim,omitempty"`
	RouteAgeoutTime      *float32                                                                                   `json:"route_ageout_time,omitempty"`
	Rp                   *LogicalRoutersVrfInnerMulticastRp                                                         `json:"rp,omitempty"`
	SptThreshold         []LogicalRoutersVrfInnerMulticastPimSptThresholdInner                                      `json:"spt_threshold,omitempty"`
	SsmAddressSpace      []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner `json:"ssm_address_space,omitempty"`
	StaticRoute          []LogicalRoutersVrfInnerMulticastStaticRouteInner                                          `json:"static_route,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticast LogicalRoutersVrfInnerMulticast

// NewLogicalRoutersVrfInnerMulticast instantiates a new LogicalRoutersVrfInnerMulticast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticast() *LogicalRoutersVrfInnerMulticast {
	this := LogicalRoutersVrfInnerMulticast{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastWithDefaults instantiates a new LogicalRoutersVrfInnerMulticast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastWithDefaults() *LogicalRoutersVrfInnerMulticast {
	this := LogicalRoutersVrfInnerMulticast{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerMulticast) SetEnable(v bool) {
	o.Enable = &v
}

// GetEnableV6 returns the EnableV6 field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetEnableV6() bool {
	if o == nil || IsNil(o.EnableV6) {
		var ret bool
		return ret
	}
	return *o.EnableV6
}

// GetEnableV6Ok returns a tuple with the EnableV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetEnableV6Ok() (*bool, bool) {
	if o == nil || IsNil(o.EnableV6) {
		return nil, false
	}
	return o.EnableV6, true
}

// HasEnableV6 returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasEnableV6() bool {
	if o != nil && !IsNil(o.EnableV6) {
		return true
	}

	return false
}

// SetEnableV6 gets a reference to the given bool and assigns it to the EnableV6 field.
func (o *LogicalRoutersVrfInnerMulticast) SetEnableV6(v bool) {
	o.EnableV6 = &v
}

// GetIgmp returns the Igmp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetIgmp() LogicalRoutersVrfInnerMulticastIgmp {
	if o == nil || IsNil(o.Igmp) {
		var ret LogicalRoutersVrfInnerMulticastIgmp
		return ret
	}
	return *o.Igmp
}

// GetIgmpOk returns a tuple with the Igmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetIgmpOk() (*LogicalRoutersVrfInnerMulticastIgmp, bool) {
	if o == nil || IsNil(o.Igmp) {
		return nil, false
	}
	return o.Igmp, true
}

// HasIgmp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasIgmp() bool {
	if o != nil && !IsNil(o.Igmp) {
		return true
	}

	return false
}

// SetIgmp gets a reference to the given LogicalRoutersVrfInnerMulticastIgmp and assigns it to the Igmp field.
func (o *LogicalRoutersVrfInnerMulticast) SetIgmp(v LogicalRoutersVrfInnerMulticastIgmp) {
	o.Igmp = &v
}

// GetInterfaceGroup returns the InterfaceGroup field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetInterfaceGroup() []LogicalRoutersVrfInnerMulticastInterfaceGroupInner {
	if o == nil || IsNil(o.InterfaceGroup) {
		var ret []LogicalRoutersVrfInnerMulticastInterfaceGroupInner
		return ret
	}
	return o.InterfaceGroup
}

// GetInterfaceGroupOk returns a tuple with the InterfaceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetInterfaceGroupOk() ([]LogicalRoutersVrfInnerMulticastInterfaceGroupInner, bool) {
	if o == nil || IsNil(o.InterfaceGroup) {
		return nil, false
	}
	return o.InterfaceGroup, true
}

// HasInterfaceGroup returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasInterfaceGroup() bool {
	if o != nil && !IsNil(o.InterfaceGroup) {
		return true
	}

	return false
}

// SetInterfaceGroup gets a reference to the given []LogicalRoutersVrfInnerMulticastInterfaceGroupInner and assigns it to the InterfaceGroup field.
func (o *LogicalRoutersVrfInnerMulticast) SetInterfaceGroup(v []LogicalRoutersVrfInnerMulticastInterfaceGroupInner) {
	o.InterfaceGroup = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *LogicalRoutersVrfInnerMulticast) SetMode(v string) {
	o.Mode = &v
}

// GetMsdp returns the Msdp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetMsdp() LogicalRoutersVrfInnerMulticastMsdp {
	if o == nil || IsNil(o.Msdp) {
		var ret LogicalRoutersVrfInnerMulticastMsdp
		return ret
	}
	return *o.Msdp
}

// GetMsdpOk returns a tuple with the Msdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetMsdpOk() (*LogicalRoutersVrfInnerMulticastMsdp, bool) {
	if o == nil || IsNil(o.Msdp) {
		return nil, false
	}
	return o.Msdp, true
}

// HasMsdp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasMsdp() bool {
	if o != nil && !IsNil(o.Msdp) {
		return true
	}

	return false
}

// SetMsdp gets a reference to the given LogicalRoutersVrfInnerMulticastMsdp and assigns it to the Msdp field.
func (o *LogicalRoutersVrfInnerMulticast) SetMsdp(v LogicalRoutersVrfInnerMulticastMsdp) {
	o.Msdp = &v
}

// GetPim returns the Pim field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetPim() LogicalRoutersVrfInnerMulticastPim {
	if o == nil || IsNil(o.Pim) {
		var ret LogicalRoutersVrfInnerMulticastPim
		return ret
	}
	return *o.Pim
}

// GetPimOk returns a tuple with the Pim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetPimOk() (*LogicalRoutersVrfInnerMulticastPim, bool) {
	if o == nil || IsNil(o.Pim) {
		return nil, false
	}
	return o.Pim, true
}

// HasPim returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasPim() bool {
	if o != nil && !IsNil(o.Pim) {
		return true
	}

	return false
}

// SetPim gets a reference to the given LogicalRoutersVrfInnerMulticastPim and assigns it to the Pim field.
func (o *LogicalRoutersVrfInnerMulticast) SetPim(v LogicalRoutersVrfInnerMulticastPim) {
	o.Pim = &v
}

// GetRouteAgeoutTime returns the RouteAgeoutTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetRouteAgeoutTime() float32 {
	if o == nil || IsNil(o.RouteAgeoutTime) {
		var ret float32
		return ret
	}
	return *o.RouteAgeoutTime
}

// GetRouteAgeoutTimeOk returns a tuple with the RouteAgeoutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetRouteAgeoutTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.RouteAgeoutTime) {
		return nil, false
	}
	return o.RouteAgeoutTime, true
}

// HasRouteAgeoutTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasRouteAgeoutTime() bool {
	if o != nil && !IsNil(o.RouteAgeoutTime) {
		return true
	}

	return false
}

// SetRouteAgeoutTime gets a reference to the given float32 and assigns it to the RouteAgeoutTime field.
func (o *LogicalRoutersVrfInnerMulticast) SetRouteAgeoutTime(v float32) {
	o.RouteAgeoutTime = &v
}

// GetRp returns the Rp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetRp() LogicalRoutersVrfInnerMulticastRp {
	if o == nil || IsNil(o.Rp) {
		var ret LogicalRoutersVrfInnerMulticastRp
		return ret
	}
	return *o.Rp
}

// GetRpOk returns a tuple with the Rp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetRpOk() (*LogicalRoutersVrfInnerMulticastRp, bool) {
	if o == nil || IsNil(o.Rp) {
		return nil, false
	}
	return o.Rp, true
}

// HasRp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasRp() bool {
	if o != nil && !IsNil(o.Rp) {
		return true
	}

	return false
}

// SetRp gets a reference to the given LogicalRoutersVrfInnerMulticastRp and assigns it to the Rp field.
func (o *LogicalRoutersVrfInnerMulticast) SetRp(v LogicalRoutersVrfInnerMulticastRp) {
	o.Rp = &v
}

// GetSptThreshold returns the SptThreshold field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetSptThreshold() []LogicalRoutersVrfInnerMulticastPimSptThresholdInner {
	if o == nil || IsNil(o.SptThreshold) {
		var ret []LogicalRoutersVrfInnerMulticastPimSptThresholdInner
		return ret
	}
	return o.SptThreshold
}

// GetSptThresholdOk returns a tuple with the SptThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetSptThresholdOk() ([]LogicalRoutersVrfInnerMulticastPimSptThresholdInner, bool) {
	if o == nil || IsNil(o.SptThreshold) {
		return nil, false
	}
	return o.SptThreshold, true
}

// HasSptThreshold returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasSptThreshold() bool {
	if o != nil && !IsNil(o.SptThreshold) {
		return true
	}

	return false
}

// SetSptThreshold gets a reference to the given []LogicalRoutersVrfInnerMulticastPimSptThresholdInner and assigns it to the SptThreshold field.
func (o *LogicalRoutersVrfInnerMulticast) SetSptThreshold(v []LogicalRoutersVrfInnerMulticastPimSptThresholdInner) {
	o.SptThreshold = v
}

// GetSsmAddressSpace returns the SsmAddressSpace field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetSsmAddressSpace() []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner {
	if o == nil || IsNil(o.SsmAddressSpace) {
		var ret []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner
		return ret
	}
	return o.SsmAddressSpace
}

// GetSsmAddressSpaceOk returns a tuple with the SsmAddressSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetSsmAddressSpaceOk() ([]LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner, bool) {
	if o == nil || IsNil(o.SsmAddressSpace) {
		return nil, false
	}
	return o.SsmAddressSpace, true
}

// HasSsmAddressSpace returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasSsmAddressSpace() bool {
	if o != nil && !IsNil(o.SsmAddressSpace) {
		return true
	}

	return false
}

// SetSsmAddressSpace gets a reference to the given []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner and assigns it to the SsmAddressSpace field.
func (o *LogicalRoutersVrfInnerMulticast) SetSsmAddressSpace(v []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner) {
	o.SsmAddressSpace = v
}

// GetStaticRoute returns the StaticRoute field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticast) GetStaticRoute() []LogicalRoutersVrfInnerMulticastStaticRouteInner {
	if o == nil || IsNil(o.StaticRoute) {
		var ret []LogicalRoutersVrfInnerMulticastStaticRouteInner
		return ret
	}
	return o.StaticRoute
}

// GetStaticRouteOk returns a tuple with the StaticRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticast) GetStaticRouteOk() ([]LogicalRoutersVrfInnerMulticastStaticRouteInner, bool) {
	if o == nil || IsNil(o.StaticRoute) {
		return nil, false
	}
	return o.StaticRoute, true
}

// HasStaticRoute returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticast) HasStaticRoute() bool {
	if o != nil && !IsNil(o.StaticRoute) {
		return true
	}

	return false
}

// SetStaticRoute gets a reference to the given []LogicalRoutersVrfInnerMulticastStaticRouteInner and assigns it to the StaticRoute field.
func (o *LogicalRoutersVrfInnerMulticast) SetStaticRoute(v []LogicalRoutersVrfInnerMulticastStaticRouteInner) {
	o.StaticRoute = v
}

func (o LogicalRoutersVrfInnerMulticast) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticast) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.EnableV6) {
		toSerialize["enable_v6"] = o.EnableV6
	}
	if !IsNil(o.Igmp) {
		toSerialize["igmp"] = o.Igmp
	}
	if !IsNil(o.InterfaceGroup) {
		toSerialize["interface_group"] = o.InterfaceGroup
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Msdp) {
		toSerialize["msdp"] = o.Msdp
	}
	if !IsNil(o.Pim) {
		toSerialize["pim"] = o.Pim
	}
	if !IsNil(o.RouteAgeoutTime) {
		toSerialize["route_ageout_time"] = o.RouteAgeoutTime
	}
	if !IsNil(o.Rp) {
		toSerialize["rp"] = o.Rp
	}
	if !IsNil(o.SptThreshold) {
		toSerialize["spt_threshold"] = o.SptThreshold
	}
	if !IsNil(o.SsmAddressSpace) {
		toSerialize["ssm_address_space"] = o.SsmAddressSpace
	}
	if !IsNil(o.StaticRoute) {
		toSerialize["static_route"] = o.StaticRoute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticast) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticast := _LogicalRoutersVrfInnerMulticast{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticast)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticast(varLogicalRoutersVrfInnerMulticast)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "enable_v6")
		delete(additionalProperties, "igmp")
		delete(additionalProperties, "interface_group")
		delete(additionalProperties, "mode")
		delete(additionalProperties, "msdp")
		delete(additionalProperties, "pim")
		delete(additionalProperties, "route_ageout_time")
		delete(additionalProperties, "rp")
		delete(additionalProperties, "spt_threshold")
		delete(additionalProperties, "ssm_address_space")
		delete(additionalProperties, "static_route")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticast struct {
	value *LogicalRoutersVrfInnerMulticast
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticast) Get() *LogicalRoutersVrfInnerMulticast {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticast) Set(val *LogicalRoutersVrfInnerMulticast) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticast) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticast(val *LogicalRoutersVrfInnerMulticast) *NullableLogicalRoutersVrfInnerMulticast {
	return &NullableLogicalRoutersVrfInnerMulticast{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
