/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerEcmpAlgorithm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerEcmpAlgorithm{}

// LogicalRoutersVrfInnerEcmpAlgorithm struct for LogicalRoutersVrfInnerEcmpAlgorithm
type LogicalRoutersVrfInnerEcmpAlgorithm struct {
	BalancedRoundRobin   map[string]interface{}                                 `json:"balanced_round_robin,omitempty"`
	IpHash               *LogicalRoutersVrfInnerEcmpAlgorithmIpHash             `json:"ip_hash,omitempty"`
	IpModulo             map[string]interface{}                                 `json:"ip_modulo,omitempty"`
	WeightedRoundRobin   *LogicalRoutersVrfInnerEcmpAlgorithmWeightedRoundRobin `json:"weighted_round_robin,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerEcmpAlgorithm LogicalRoutersVrfInnerEcmpAlgorithm

// NewLogicalRoutersVrfInnerEcmpAlgorithm instantiates a new LogicalRoutersVrfInnerEcmpAlgorithm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerEcmpAlgorithm() *LogicalRoutersVrfInnerEcmpAlgorithm {
	this := LogicalRoutersVrfInnerEcmpAlgorithm{}
	return &this
}

// NewLogicalRoutersVrfInnerEcmpAlgorithmWithDefaults instantiates a new LogicalRoutersVrfInnerEcmpAlgorithm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerEcmpAlgorithmWithDefaults() *LogicalRoutersVrfInnerEcmpAlgorithm {
	this := LogicalRoutersVrfInnerEcmpAlgorithm{}
	return &this
}

// GetBalancedRoundRobin returns the BalancedRoundRobin field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetBalancedRoundRobin() map[string]interface{} {
	if o == nil || IsNil(o.BalancedRoundRobin) {
		var ret map[string]interface{}
		return ret
	}
	return o.BalancedRoundRobin
}

// GetBalancedRoundRobinOk returns a tuple with the BalancedRoundRobin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetBalancedRoundRobinOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BalancedRoundRobin) {
		return map[string]interface{}{}, false
	}
	return o.BalancedRoundRobin, true
}

// HasBalancedRoundRobin returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) HasBalancedRoundRobin() bool {
	if o != nil && !IsNil(o.BalancedRoundRobin) {
		return true
	}

	return false
}

// SetBalancedRoundRobin gets a reference to the given map[string]interface{} and assigns it to the BalancedRoundRobin field.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) SetBalancedRoundRobin(v map[string]interface{}) {
	o.BalancedRoundRobin = v
}

// GetIpHash returns the IpHash field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetIpHash() LogicalRoutersVrfInnerEcmpAlgorithmIpHash {
	if o == nil || IsNil(o.IpHash) {
		var ret LogicalRoutersVrfInnerEcmpAlgorithmIpHash
		return ret
	}
	return *o.IpHash
}

// GetIpHashOk returns a tuple with the IpHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetIpHashOk() (*LogicalRoutersVrfInnerEcmpAlgorithmIpHash, bool) {
	if o == nil || IsNil(o.IpHash) {
		return nil, false
	}
	return o.IpHash, true
}

// HasIpHash returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) HasIpHash() bool {
	if o != nil && !IsNil(o.IpHash) {
		return true
	}

	return false
}

// SetIpHash gets a reference to the given LogicalRoutersVrfInnerEcmpAlgorithmIpHash and assigns it to the IpHash field.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) SetIpHash(v LogicalRoutersVrfInnerEcmpAlgorithmIpHash) {
	o.IpHash = &v
}

// GetIpModulo returns the IpModulo field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetIpModulo() map[string]interface{} {
	if o == nil || IsNil(o.IpModulo) {
		var ret map[string]interface{}
		return ret
	}
	return o.IpModulo
}

// GetIpModuloOk returns a tuple with the IpModulo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetIpModuloOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.IpModulo) {
		return map[string]interface{}{}, false
	}
	return o.IpModulo, true
}

// HasIpModulo returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) HasIpModulo() bool {
	if o != nil && !IsNil(o.IpModulo) {
		return true
	}

	return false
}

// SetIpModulo gets a reference to the given map[string]interface{} and assigns it to the IpModulo field.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) SetIpModulo(v map[string]interface{}) {
	o.IpModulo = v
}

// GetWeightedRoundRobin returns the WeightedRoundRobin field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetWeightedRoundRobin() LogicalRoutersVrfInnerEcmpAlgorithmWeightedRoundRobin {
	if o == nil || IsNil(o.WeightedRoundRobin) {
		var ret LogicalRoutersVrfInnerEcmpAlgorithmWeightedRoundRobin
		return ret
	}
	return *o.WeightedRoundRobin
}

// GetWeightedRoundRobinOk returns a tuple with the WeightedRoundRobin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) GetWeightedRoundRobinOk() (*LogicalRoutersVrfInnerEcmpAlgorithmWeightedRoundRobin, bool) {
	if o == nil || IsNil(o.WeightedRoundRobin) {
		return nil, false
	}
	return o.WeightedRoundRobin, true
}

// HasWeightedRoundRobin returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) HasWeightedRoundRobin() bool {
	if o != nil && !IsNil(o.WeightedRoundRobin) {
		return true
	}

	return false
}

// SetWeightedRoundRobin gets a reference to the given LogicalRoutersVrfInnerEcmpAlgorithmWeightedRoundRobin and assigns it to the WeightedRoundRobin field.
func (o *LogicalRoutersVrfInnerEcmpAlgorithm) SetWeightedRoundRobin(v LogicalRoutersVrfInnerEcmpAlgorithmWeightedRoundRobin) {
	o.WeightedRoundRobin = &v
}

func (o LogicalRoutersVrfInnerEcmpAlgorithm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerEcmpAlgorithm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalancedRoundRobin) {
		toSerialize["balanced_round_robin"] = o.BalancedRoundRobin
	}
	if !IsNil(o.IpHash) {
		toSerialize["ip_hash"] = o.IpHash
	}
	if !IsNil(o.IpModulo) {
		toSerialize["ip_modulo"] = o.IpModulo
	}
	if !IsNil(o.WeightedRoundRobin) {
		toSerialize["weighted_round_robin"] = o.WeightedRoundRobin
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerEcmpAlgorithm) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerEcmpAlgorithm := _LogicalRoutersVrfInnerEcmpAlgorithm{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerEcmpAlgorithm)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerEcmpAlgorithm(varLogicalRoutersVrfInnerEcmpAlgorithm)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "balanced_round_robin")
		delete(additionalProperties, "ip_hash")
		delete(additionalProperties, "ip_modulo")
		delete(additionalProperties, "weighted_round_robin")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerEcmpAlgorithm struct {
	value *LogicalRoutersVrfInnerEcmpAlgorithm
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerEcmpAlgorithm) Get() *LogicalRoutersVrfInnerEcmpAlgorithm {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerEcmpAlgorithm) Set(val *LogicalRoutersVrfInnerEcmpAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerEcmpAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerEcmpAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerEcmpAlgorithm(val *LogicalRoutersVrfInnerEcmpAlgorithm) *NullableLogicalRoutersVrfInnerEcmpAlgorithm {
	return &NullableLogicalRoutersVrfInnerEcmpAlgorithm{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerEcmpAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerEcmpAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
