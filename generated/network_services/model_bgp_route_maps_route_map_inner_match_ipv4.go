/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpRouteMapsRouteMapInnerMatchIpv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpRouteMapsRouteMapInnerMatchIpv4{}

// BgpRouteMapsRouteMapInnerMatchIpv4 bgp-route-maps ipv4 object
type BgpRouteMapsRouteMapInnerMatchIpv4 struct {
	Address              *BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address `json:"address,omitempty"`
	NextHop              *BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address `json:"next_hop,omitempty"`
	RouteSource          *BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address `json:"route_source,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpRouteMapsRouteMapInnerMatchIpv4 BgpRouteMapsRouteMapInnerMatchIpv4

// NewBgpRouteMapsRouteMapInnerMatchIpv4 instantiates a new BgpRouteMapsRouteMapInnerMatchIpv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpRouteMapsRouteMapInnerMatchIpv4() *BgpRouteMapsRouteMapInnerMatchIpv4 {
	this := BgpRouteMapsRouteMapInnerMatchIpv4{}
	return &this
}

// NewBgpRouteMapsRouteMapInnerMatchIpv4WithDefaults instantiates a new BgpRouteMapsRouteMapInnerMatchIpv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpRouteMapsRouteMapInnerMatchIpv4WithDefaults() *BgpRouteMapsRouteMapInnerMatchIpv4 {
	this := BgpRouteMapsRouteMapInnerMatchIpv4{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) GetAddress() BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address {
	if o == nil || IsNil(o.Address) {
		var ret BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) GetAddressOk() (*BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address and assigns it to the Address field.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) SetAddress(v BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address) {
	o.Address = &v
}

// GetNextHop returns the NextHop field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) GetNextHop() BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address {
	if o == nil || IsNil(o.NextHop) {
		var ret BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address
		return ret
	}
	return *o.NextHop
}

// GetNextHopOk returns a tuple with the NextHop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) GetNextHopOk() (*BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address, bool) {
	if o == nil || IsNil(o.NextHop) {
		return nil, false
	}
	return o.NextHop, true
}

// HasNextHop returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) HasNextHop() bool {
	if o != nil && !IsNil(o.NextHop) {
		return true
	}

	return false
}

// SetNextHop gets a reference to the given BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address and assigns it to the NextHop field.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) SetNextHop(v BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address) {
	o.NextHop = &v
}

// GetRouteSource returns the RouteSource field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) GetRouteSource() BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address {
	if o == nil || IsNil(o.RouteSource) {
		var ret BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address
		return ret
	}
	return *o.RouteSource
}

// GetRouteSourceOk returns a tuple with the RouteSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) GetRouteSourceOk() (*BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address, bool) {
	if o == nil || IsNil(o.RouteSource) {
		return nil, false
	}
	return o.RouteSource, true
}

// HasRouteSource returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) HasRouteSource() bool {
	if o != nil && !IsNil(o.RouteSource) {
		return true
	}

	return false
}

// SetRouteSource gets a reference to the given BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address and assigns it to the RouteSource field.
func (o *BgpRouteMapsRouteMapInnerMatchIpv4) SetRouteSource(v BgpRouteMapRedistributionsBgpOspfRouteMapInnerMatchIpv4Address) {
	o.RouteSource = &v
}

func (o BgpRouteMapsRouteMapInnerMatchIpv4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpRouteMapsRouteMapInnerMatchIpv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.NextHop) {
		toSerialize["next_hop"] = o.NextHop
	}
	if !IsNil(o.RouteSource) {
		toSerialize["route_source"] = o.RouteSource
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpRouteMapsRouteMapInnerMatchIpv4) UnmarshalJSON(data []byte) (err error) {
	varBgpRouteMapsRouteMapInnerMatchIpv4 := _BgpRouteMapsRouteMapInnerMatchIpv4{}

	err = json.Unmarshal(data, &varBgpRouteMapsRouteMapInnerMatchIpv4)

	if err != nil {
		return err
	}

	*o = BgpRouteMapsRouteMapInnerMatchIpv4(varBgpRouteMapsRouteMapInnerMatchIpv4)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "next_hop")
		delete(additionalProperties, "route_source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpRouteMapsRouteMapInnerMatchIpv4 struct {
	value *BgpRouteMapsRouteMapInnerMatchIpv4
	isSet bool
}

func (v NullableBgpRouteMapsRouteMapInnerMatchIpv4) Get() *BgpRouteMapsRouteMapInnerMatchIpv4 {
	return v.value
}

func (v *NullableBgpRouteMapsRouteMapInnerMatchIpv4) Set(val *BgpRouteMapsRouteMapInnerMatchIpv4) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRouteMapsRouteMapInnerMatchIpv4) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRouteMapsRouteMapInnerMatchIpv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRouteMapsRouteMapInnerMatchIpv4(val *BgpRouteMapsRouteMapInnerMatchIpv4) *NullableBgpRouteMapsRouteMapInnerMatchIpv4 {
	return &NullableBgpRouteMapsRouteMapInnerMatchIpv4{value: val, isSet: true}
}

func (v NullableBgpRouteMapsRouteMapInnerMatchIpv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRouteMapsRouteMapInnerMatchIpv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
