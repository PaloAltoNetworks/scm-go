/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the TunnelInterfacesIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TunnelInterfacesIp{}

// TunnelInterfacesIp tunnel interfaces ip parent
type TunnelInterfacesIp struct {
	// tunnel interfaces IP address(es)
	Ip                   []string `json:"ip,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TunnelInterfacesIp TunnelInterfacesIp

// NewTunnelInterfacesIp instantiates a new TunnelInterfacesIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTunnelInterfacesIp() *TunnelInterfacesIp {
	this := TunnelInterfacesIp{}
	return &this
}

// NewTunnelInterfacesIpWithDefaults instantiates a new TunnelInterfacesIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTunnelInterfacesIpWithDefaults() *TunnelInterfacesIp {
	this := TunnelInterfacesIp{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *TunnelInterfacesIp) GetIp() []string {
	if o == nil || IsNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelInterfacesIp) GetIpOk() ([]string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *TunnelInterfacesIp) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *TunnelInterfacesIp) SetIp(v []string) {
	o.Ip = v
}

func (o TunnelInterfacesIp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TunnelInterfacesIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TunnelInterfacesIp) UnmarshalJSON(data []byte) (err error) {
	varTunnelInterfacesIp := _TunnelInterfacesIp{}

	err = json.Unmarshal(data, &varTunnelInterfacesIp)

	if err != nil {
		return err
	}

	*o = TunnelInterfacesIp(varTunnelInterfacesIp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTunnelInterfacesIp struct {
	value *TunnelInterfacesIp
	isSet bool
}

func (v NullableTunnelInterfacesIp) Get() *TunnelInterfacesIp {
	return v.value
}

func (v *NullableTunnelInterfacesIp) Set(val *TunnelInterfacesIp) {
	v.value = val
	v.isSet = true
}

func (v NullableTunnelInterfacesIp) IsSet() bool {
	return v.isSet
}

func (v *NullableTunnelInterfacesIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTunnelInterfacesIp(val *TunnelInterfacesIp) *NullableTunnelInterfacesIp {
	return &NullableTunnelInterfacesIp{value: val, isSet: true}
}

func (v NullableTunnelInterfacesIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTunnelInterfacesIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
