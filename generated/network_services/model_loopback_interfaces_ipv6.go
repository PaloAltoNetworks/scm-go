/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LoopbackInterfacesIpv6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoopbackInterfacesIpv6{}

// LoopbackInterfacesIpv6 Loopback IPv6 Configuration
type LoopbackInterfacesIpv6 struct {
	// IPv6 Address Parent
	Address []LoopbackInterfacesIpv6AddressInner `json:"address,omitempty"`
	// Enable IPv6
	Enabled              *bool `json:"enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoopbackInterfacesIpv6 LoopbackInterfacesIpv6

// NewLoopbackInterfacesIpv6 instantiates a new LoopbackInterfacesIpv6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoopbackInterfacesIpv6() *LoopbackInterfacesIpv6 {
	this := LoopbackInterfacesIpv6{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewLoopbackInterfacesIpv6WithDefaults instantiates a new LoopbackInterfacesIpv6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoopbackInterfacesIpv6WithDefaults() *LoopbackInterfacesIpv6 {
	this := LoopbackInterfacesIpv6{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *LoopbackInterfacesIpv6) GetAddress() []LoopbackInterfacesIpv6AddressInner {
	if o == nil || IsNil(o.Address) {
		var ret []LoopbackInterfacesIpv6AddressInner
		return ret
	}
	return o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoopbackInterfacesIpv6) GetAddressOk() ([]LoopbackInterfacesIpv6AddressInner, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *LoopbackInterfacesIpv6) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given []LoopbackInterfacesIpv6AddressInner and assigns it to the Address field.
func (o *LoopbackInterfacesIpv6) SetAddress(v []LoopbackInterfacesIpv6AddressInner) {
	o.Address = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *LoopbackInterfacesIpv6) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoopbackInterfacesIpv6) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *LoopbackInterfacesIpv6) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *LoopbackInterfacesIpv6) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o LoopbackInterfacesIpv6) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoopbackInterfacesIpv6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoopbackInterfacesIpv6) UnmarshalJSON(data []byte) (err error) {
	varLoopbackInterfacesIpv6 := _LoopbackInterfacesIpv6{}

	err = json.Unmarshal(data, &varLoopbackInterfacesIpv6)

	if err != nil {
		return err
	}

	*o = LoopbackInterfacesIpv6(varLoopbackInterfacesIpv6)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoopbackInterfacesIpv6 struct {
	value *LoopbackInterfacesIpv6
	isSet bool
}

func (v NullableLoopbackInterfacesIpv6) Get() *LoopbackInterfacesIpv6 {
	return v.value
}

func (v *NullableLoopbackInterfacesIpv6) Set(val *LoopbackInterfacesIpv6) {
	v.value = val
	v.isSet = true
}

func (v NullableLoopbackInterfacesIpv6) IsSet() bool {
	return v.isSet
}

func (v *NullableLoopbackInterfacesIpv6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoopbackInterfacesIpv6(val *LoopbackInterfacesIpv6) *NullableLoopbackInterfacesIpv6 {
	return &NullableLoopbackInterfacesIpv6{value: val, isSet: true}
}

func (v NullableLoopbackInterfacesIpv6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoopbackInterfacesIpv6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
