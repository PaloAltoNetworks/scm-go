/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the RoutePrefixListsIpv4Ipv4EntryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutePrefixListsIpv4Ipv4EntryInner{}

// RoutePrefixListsIpv4Ipv4EntryInner struct for RoutePrefixListsIpv4Ipv4EntryInner
type RoutePrefixListsIpv4Ipv4EntryInner struct {
	// Action
	Action *string `json:"action,omitempty"`
	// Sequence number
	Name                 *int32                                    `json:"name,omitempty"`
	Prefix               *RoutePrefixListsIpv4Ipv4EntryInnerPrefix `json:"prefix,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoutePrefixListsIpv4Ipv4EntryInner RoutePrefixListsIpv4Ipv4EntryInner

// NewRoutePrefixListsIpv4Ipv4EntryInner instantiates a new RoutePrefixListsIpv4Ipv4EntryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutePrefixListsIpv4Ipv4EntryInner() *RoutePrefixListsIpv4Ipv4EntryInner {
	this := RoutePrefixListsIpv4Ipv4EntryInner{}
	return &this
}

// NewRoutePrefixListsIpv4Ipv4EntryInnerWithDefaults instantiates a new RoutePrefixListsIpv4Ipv4EntryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutePrefixListsIpv4Ipv4EntryInnerWithDefaults() *RoutePrefixListsIpv4Ipv4EntryInner {
	this := RoutePrefixListsIpv4Ipv4EntryInner{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) SetAction(v string) {
	o.Action = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) GetName() int32 {
	if o == nil || IsNil(o.Name) {
		var ret int32
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) GetNameOk() (*int32, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given int32 and assigns it to the Name field.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) SetName(v int32) {
	o.Name = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) GetPrefix() RoutePrefixListsIpv4Ipv4EntryInnerPrefix {
	if o == nil || IsNil(o.Prefix) {
		var ret RoutePrefixListsIpv4Ipv4EntryInnerPrefix
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) GetPrefixOk() (*RoutePrefixListsIpv4Ipv4EntryInnerPrefix, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given RoutePrefixListsIpv4Ipv4EntryInnerPrefix and assigns it to the Prefix field.
func (o *RoutePrefixListsIpv4Ipv4EntryInner) SetPrefix(v RoutePrefixListsIpv4Ipv4EntryInnerPrefix) {
	o.Prefix = &v
}

func (o RoutePrefixListsIpv4Ipv4EntryInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutePrefixListsIpv4Ipv4EntryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoutePrefixListsIpv4Ipv4EntryInner) UnmarshalJSON(data []byte) (err error) {
	varRoutePrefixListsIpv4Ipv4EntryInner := _RoutePrefixListsIpv4Ipv4EntryInner{}

	err = json.Unmarshal(data, &varRoutePrefixListsIpv4Ipv4EntryInner)

	if err != nil {
		return err
	}

	*o = RoutePrefixListsIpv4Ipv4EntryInner(varRoutePrefixListsIpv4Ipv4EntryInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "name")
		delete(additionalProperties, "prefix")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoutePrefixListsIpv4Ipv4EntryInner struct {
	value *RoutePrefixListsIpv4Ipv4EntryInner
	isSet bool
}

func (v NullableRoutePrefixListsIpv4Ipv4EntryInner) Get() *RoutePrefixListsIpv4Ipv4EntryInner {
	return v.value
}

func (v *NullableRoutePrefixListsIpv4Ipv4EntryInner) Set(val *RoutePrefixListsIpv4Ipv4EntryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutePrefixListsIpv4Ipv4EntryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutePrefixListsIpv4Ipv4EntryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutePrefixListsIpv4Ipv4EntryInner(val *RoutePrefixListsIpv4Ipv4EntryInner) *NullableRoutePrefixListsIpv4Ipv4EntryInner {
	return &NullableRoutePrefixListsIpv4Ipv4EntryInner{value: val, isSet: true}
}

func (v NullableRoutePrefixListsIpv4Ipv4EntryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutePrefixListsIpv4Ipv4EntryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
