/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the PbfRulesEnforceSymmetricReturn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PbfRulesEnforceSymmetricReturn{}

// PbfRulesEnforceSymmetricReturn struct for PbfRulesEnforceSymmetricReturn
type PbfRulesEnforceSymmetricReturn struct {
	// Enforce symmetric return?
	Enabled *bool `json:"enabled,omitempty"`
	// Next hop IP addresses
	NexthopAddressList   []PbfRulesEnforceSymmetricReturnNexthopAddressListInner `json:"nexthop_address_list,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PbfRulesEnforceSymmetricReturn PbfRulesEnforceSymmetricReturn

// NewPbfRulesEnforceSymmetricReturn instantiates a new PbfRulesEnforceSymmetricReturn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPbfRulesEnforceSymmetricReturn() *PbfRulesEnforceSymmetricReturn {
	this := PbfRulesEnforceSymmetricReturn{}
	return &this
}

// NewPbfRulesEnforceSymmetricReturnWithDefaults instantiates a new PbfRulesEnforceSymmetricReturn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPbfRulesEnforceSymmetricReturnWithDefaults() *PbfRulesEnforceSymmetricReturn {
	this := PbfRulesEnforceSymmetricReturn{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PbfRulesEnforceSymmetricReturn) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesEnforceSymmetricReturn) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PbfRulesEnforceSymmetricReturn) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PbfRulesEnforceSymmetricReturn) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetNexthopAddressList returns the NexthopAddressList field value if set, zero value otherwise.
func (o *PbfRulesEnforceSymmetricReturn) GetNexthopAddressList() []PbfRulesEnforceSymmetricReturnNexthopAddressListInner {
	if o == nil || IsNil(o.NexthopAddressList) {
		var ret []PbfRulesEnforceSymmetricReturnNexthopAddressListInner
		return ret
	}
	return o.NexthopAddressList
}

// GetNexthopAddressListOk returns a tuple with the NexthopAddressList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesEnforceSymmetricReturn) GetNexthopAddressListOk() ([]PbfRulesEnforceSymmetricReturnNexthopAddressListInner, bool) {
	if o == nil || IsNil(o.NexthopAddressList) {
		return nil, false
	}
	return o.NexthopAddressList, true
}

// HasNexthopAddressList returns a boolean if a field has been set.
func (o *PbfRulesEnforceSymmetricReturn) HasNexthopAddressList() bool {
	if o != nil && !IsNil(o.NexthopAddressList) {
		return true
	}

	return false
}

// SetNexthopAddressList gets a reference to the given []PbfRulesEnforceSymmetricReturnNexthopAddressListInner and assigns it to the NexthopAddressList field.
func (o *PbfRulesEnforceSymmetricReturn) SetNexthopAddressList(v []PbfRulesEnforceSymmetricReturnNexthopAddressListInner) {
	o.NexthopAddressList = v
}

func (o PbfRulesEnforceSymmetricReturn) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PbfRulesEnforceSymmetricReturn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.NexthopAddressList) {
		toSerialize["nexthop_address_list"] = o.NexthopAddressList
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PbfRulesEnforceSymmetricReturn) UnmarshalJSON(data []byte) (err error) {
	varPbfRulesEnforceSymmetricReturn := _PbfRulesEnforceSymmetricReturn{}

	err = json.Unmarshal(data, &varPbfRulesEnforceSymmetricReturn)

	if err != nil {
		return err
	}

	*o = PbfRulesEnforceSymmetricReturn(varPbfRulesEnforceSymmetricReturn)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "nexthop_address_list")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePbfRulesEnforceSymmetricReturn struct {
	value *PbfRulesEnforceSymmetricReturn
	isSet bool
}

func (v NullablePbfRulesEnforceSymmetricReturn) Get() *PbfRulesEnforceSymmetricReturn {
	return v.value
}

func (v *NullablePbfRulesEnforceSymmetricReturn) Set(val *PbfRulesEnforceSymmetricReturn) {
	v.value = val
	v.isSet = true
}

func (v NullablePbfRulesEnforceSymmetricReturn) IsSet() bool {
	return v.isSet
}

func (v *NullablePbfRulesEnforceSymmetricReturn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePbfRulesEnforceSymmetricReturn(val *PbfRulesEnforceSymmetricReturn) *NullablePbfRulesEnforceSymmetricReturn {
	return &NullablePbfRulesEnforceSymmetricReturn{value: val, isSet: true}
}

func (v NullablePbfRulesEnforceSymmetricReturn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePbfRulesEnforceSymmetricReturn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
