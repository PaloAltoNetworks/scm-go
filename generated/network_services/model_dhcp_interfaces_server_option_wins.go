/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the DhcpInterfacesServerOptionWins type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DhcpInterfacesServerOptionWins{}

// DhcpInterfacesServerOptionWins struct for DhcpInterfacesServerOptionWins
type DhcpInterfacesServerOptionWins struct {
	// Primary WINS server
	Primary *string `json:"primary,omitempty"`
	// Secondary WINS server
	Secondary            *string `json:"secondary,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DhcpInterfacesServerOptionWins DhcpInterfacesServerOptionWins

// NewDhcpInterfacesServerOptionWins instantiates a new DhcpInterfacesServerOptionWins object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpInterfacesServerOptionWins() *DhcpInterfacesServerOptionWins {
	this := DhcpInterfacesServerOptionWins{}
	return &this
}

// NewDhcpInterfacesServerOptionWinsWithDefaults instantiates a new DhcpInterfacesServerOptionWins object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpInterfacesServerOptionWinsWithDefaults() *DhcpInterfacesServerOptionWins {
	this := DhcpInterfacesServerOptionWins{}
	return &this
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionWins) GetPrimary() string {
	if o == nil || IsNil(o.Primary) {
		var ret string
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionWins) GetPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionWins) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given string and assigns it to the Primary field.
func (o *DhcpInterfacesServerOptionWins) SetPrimary(v string) {
	o.Primary = &v
}

// GetSecondary returns the Secondary field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionWins) GetSecondary() string {
	if o == nil || IsNil(o.Secondary) {
		var ret string
		return ret
	}
	return *o.Secondary
}

// GetSecondaryOk returns a tuple with the Secondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionWins) GetSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.Secondary) {
		return nil, false
	}
	return o.Secondary, true
}

// HasSecondary returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionWins) HasSecondary() bool {
	if o != nil && !IsNil(o.Secondary) {
		return true
	}

	return false
}

// SetSecondary gets a reference to the given string and assigns it to the Secondary field.
func (o *DhcpInterfacesServerOptionWins) SetSecondary(v string) {
	o.Secondary = &v
}

func (o DhcpInterfacesServerOptionWins) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DhcpInterfacesServerOptionWins) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	if !IsNil(o.Secondary) {
		toSerialize["secondary"] = o.Secondary
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DhcpInterfacesServerOptionWins) UnmarshalJSON(data []byte) (err error) {
	varDhcpInterfacesServerOptionWins := _DhcpInterfacesServerOptionWins{}

	err = json.Unmarshal(data, &varDhcpInterfacesServerOptionWins)

	if err != nil {
		return err
	}

	*o = DhcpInterfacesServerOptionWins(varDhcpInterfacesServerOptionWins)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "primary")
		delete(additionalProperties, "secondary")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDhcpInterfacesServerOptionWins struct {
	value *DhcpInterfacesServerOptionWins
	isSet bool
}

func (v NullableDhcpInterfacesServerOptionWins) Get() *DhcpInterfacesServerOptionWins {
	return v.value
}

func (v *NullableDhcpInterfacesServerOptionWins) Set(val *DhcpInterfacesServerOptionWins) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpInterfacesServerOptionWins) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpInterfacesServerOptionWins) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpInterfacesServerOptionWins(val *DhcpInterfacesServerOptionWins) *NullableDhcpInterfacesServerOptionWins {
	return &NullableDhcpInterfacesServerOptionWins{value: val, isSet: true}
}

func (v NullableDhcpInterfacesServerOptionWins) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpInterfacesServerOptionWins) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
