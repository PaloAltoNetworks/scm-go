/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the Layer2Subinterfaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Layer2Subinterfaces{}

// Layer2Subinterfaces struct for Layer2Subinterfaces
type Layer2Subinterfaces struct {
	// Description
	Comment *string `json:"comment,omitempty"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// UUID of the resource
	Id *string `json:"id,omitempty"`
	// L2 sub-interface name
	Name string `json:"name"`
	// Parent interface
	ParentInterface *string `json:"parent_interface,omitempty"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// VLAN tag
	VlanTag              string `json:"vlan_tag" validate:"regexp=^([1-9]\\\\d{0,2}|[1-3]\\\\d{3}|40[0-8]\\\\d|409[0-6])$"`
	AdditionalProperties map[string]interface{}
}

type _Layer2Subinterfaces Layer2Subinterfaces

// NewLayer2Subinterfaces instantiates a new Layer2Subinterfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayer2Subinterfaces(name string, vlanTag string) *Layer2Subinterfaces {
	this := Layer2Subinterfaces{}
	this.Name = name
	this.VlanTag = vlanTag
	return &this
}

// NewLayer2SubinterfacesWithDefaults instantiates a new Layer2Subinterfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayer2SubinterfacesWithDefaults() *Layer2Subinterfaces {
	this := Layer2Subinterfaces{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Layer2Subinterfaces) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Layer2Subinterfaces) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Layer2Subinterfaces) SetComment(v string) {
	o.Comment = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *Layer2Subinterfaces) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *Layer2Subinterfaces) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *Layer2Subinterfaces) SetDevice(v string) {
	o.Device = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *Layer2Subinterfaces) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *Layer2Subinterfaces) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *Layer2Subinterfaces) SetFolder(v string) {
	o.Folder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Layer2Subinterfaces) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Layer2Subinterfaces) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Layer2Subinterfaces) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *Layer2Subinterfaces) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Layer2Subinterfaces) SetName(v string) {
	o.Name = v
}

// GetParentInterface returns the ParentInterface field value if set, zero value otherwise.
func (o *Layer2Subinterfaces) GetParentInterface() string {
	if o == nil || IsNil(o.ParentInterface) {
		var ret string
		return ret
	}
	return *o.ParentInterface
}

// GetParentInterfaceOk returns a tuple with the ParentInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetParentInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.ParentInterface) {
		return nil, false
	}
	return o.ParentInterface, true
}

// HasParentInterface returns a boolean if a field has been set.
func (o *Layer2Subinterfaces) HasParentInterface() bool {
	if o != nil && !IsNil(o.ParentInterface) {
		return true
	}

	return false
}

// SetParentInterface gets a reference to the given string and assigns it to the ParentInterface field.
func (o *Layer2Subinterfaces) SetParentInterface(v string) {
	o.ParentInterface = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *Layer2Subinterfaces) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *Layer2Subinterfaces) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *Layer2Subinterfaces) SetSnippet(v string) {
	o.Snippet = &v
}

// GetVlanTag returns the VlanTag field value
func (o *Layer2Subinterfaces) GetVlanTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VlanTag
}

// GetVlanTagOk returns a tuple with the VlanTag field value
// and a boolean to check if the value has been set.
func (o *Layer2Subinterfaces) GetVlanTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VlanTag, true
}

// SetVlanTag sets field value
func (o *Layer2Subinterfaces) SetVlanTag(v string) {
	o.VlanTag = v
}

func (o Layer2Subinterfaces) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Layer2Subinterfaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.ParentInterface) {
		toSerialize["parent_interface"] = o.ParentInterface
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	toSerialize["vlan_tag"] = o.VlanTag

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Layer2Subinterfaces) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"vlan_tag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLayer2Subinterfaces := _Layer2Subinterfaces{}

	err = json.Unmarshal(data, &varLayer2Subinterfaces)

	if err != nil {
		return err
	}

	*o = Layer2Subinterfaces(varLayer2Subinterfaces)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "comment")
		delete(additionalProperties, "device")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "parent_interface")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "vlan_tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLayer2Subinterfaces struct {
	value *Layer2Subinterfaces
	isSet bool
}

func (v NullableLayer2Subinterfaces) Get() *Layer2Subinterfaces {
	return v.value
}

func (v *NullableLayer2Subinterfaces) Set(val *Layer2Subinterfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableLayer2Subinterfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableLayer2Subinterfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayer2Subinterfaces(val *Layer2Subinterfaces) *NullableLayer2Subinterfaces {
	return &NullableLayer2Subinterfaces{value: val, isSet: true}
}

func (v NullableLayer2Subinterfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayer2Subinterfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
