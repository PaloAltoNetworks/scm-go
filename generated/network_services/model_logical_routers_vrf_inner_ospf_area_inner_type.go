/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerOspfAreaInnerType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfAreaInnerType{}

// LogicalRoutersVrfInnerOspfAreaInnerType struct for LogicalRoutersVrfInnerOspfAreaInnerType
type LogicalRoutersVrfInnerOspfAreaInnerType struct {
	Normal               *LogicalRoutersVrfInnerOspfAreaInnerTypeNormal `json:"normal,omitempty"`
	Nssa                 *LogicalRoutersVrfInnerOspfAreaInnerTypeNssa   `json:"nssa,omitempty"`
	Stub                 *LogicalRoutersVrfInnerOspfAreaInnerTypeStub   `json:"stub,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfAreaInnerType LogicalRoutersVrfInnerOspfAreaInnerType

// NewLogicalRoutersVrfInnerOspfAreaInnerType instantiates a new LogicalRoutersVrfInnerOspfAreaInnerType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfAreaInnerType() *LogicalRoutersVrfInnerOspfAreaInnerType {
	this := LogicalRoutersVrfInnerOspfAreaInnerType{}
	return &this
}

// NewLogicalRoutersVrfInnerOspfAreaInnerTypeWithDefaults instantiates a new LogicalRoutersVrfInnerOspfAreaInnerType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfAreaInnerTypeWithDefaults() *LogicalRoutersVrfInnerOspfAreaInnerType {
	this := LogicalRoutersVrfInnerOspfAreaInnerType{}
	return &this
}

// GetNormal returns the Normal field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) GetNormal() LogicalRoutersVrfInnerOspfAreaInnerTypeNormal {
	if o == nil || IsNil(o.Normal) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerTypeNormal
		return ret
	}
	return *o.Normal
}

// GetNormalOk returns a tuple with the Normal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) GetNormalOk() (*LogicalRoutersVrfInnerOspfAreaInnerTypeNormal, bool) {
	if o == nil || IsNil(o.Normal) {
		return nil, false
	}
	return o.Normal, true
}

// HasNormal returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) HasNormal() bool {
	if o != nil && !IsNil(o.Normal) {
		return true
	}

	return false
}

// SetNormal gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerTypeNormal and assigns it to the Normal field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) SetNormal(v LogicalRoutersVrfInnerOspfAreaInnerTypeNormal) {
	o.Normal = &v
}

// GetNssa returns the Nssa field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) GetNssa() LogicalRoutersVrfInnerOspfAreaInnerTypeNssa {
	if o == nil || IsNil(o.Nssa) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerTypeNssa
		return ret
	}
	return *o.Nssa
}

// GetNssaOk returns a tuple with the Nssa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) GetNssaOk() (*LogicalRoutersVrfInnerOspfAreaInnerTypeNssa, bool) {
	if o == nil || IsNil(o.Nssa) {
		return nil, false
	}
	return o.Nssa, true
}

// HasNssa returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) HasNssa() bool {
	if o != nil && !IsNil(o.Nssa) {
		return true
	}

	return false
}

// SetNssa gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerTypeNssa and assigns it to the Nssa field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) SetNssa(v LogicalRoutersVrfInnerOspfAreaInnerTypeNssa) {
	o.Nssa = &v
}

// GetStub returns the Stub field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) GetStub() LogicalRoutersVrfInnerOspfAreaInnerTypeStub {
	if o == nil || IsNil(o.Stub) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerTypeStub
		return ret
	}
	return *o.Stub
}

// GetStubOk returns a tuple with the Stub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) GetStubOk() (*LogicalRoutersVrfInnerOspfAreaInnerTypeStub, bool) {
	if o == nil || IsNil(o.Stub) {
		return nil, false
	}
	return o.Stub, true
}

// HasStub returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) HasStub() bool {
	if o != nil && !IsNil(o.Stub) {
		return true
	}

	return false
}

// SetStub gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerTypeStub and assigns it to the Stub field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerType) SetStub(v LogicalRoutersVrfInnerOspfAreaInnerTypeStub) {
	o.Stub = &v
}

func (o LogicalRoutersVrfInnerOspfAreaInnerType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfAreaInnerType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Normal) {
		toSerialize["normal"] = o.Normal
	}
	if !IsNil(o.Nssa) {
		toSerialize["nssa"] = o.Nssa
	}
	if !IsNil(o.Stub) {
		toSerialize["stub"] = o.Stub
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfAreaInnerType) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerOspfAreaInnerType := _LogicalRoutersVrfInnerOspfAreaInnerType{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfAreaInnerType)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfAreaInnerType(varLogicalRoutersVrfInnerOspfAreaInnerType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "normal")
		delete(additionalProperties, "nssa")
		delete(additionalProperties, "stub")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfAreaInnerType struct {
	value *LogicalRoutersVrfInnerOspfAreaInnerType
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerType) Get() *LogicalRoutersVrfInnerOspfAreaInnerType {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerType) Set(val *LogicalRoutersVrfInnerOspfAreaInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfAreaInnerType(val *LogicalRoutersVrfInnerOspfAreaInnerType) *NullableLogicalRoutersVrfInnerOspfAreaInnerType {
	return &NullableLogicalRoutersVrfInnerOspfAreaInnerType{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
