/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the RouteAccessListsTypeIpv4Ipv4EntryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteAccessListsTypeIpv4Ipv4EntryInner{}

// RouteAccessListsTypeIpv4Ipv4EntryInner struct for RouteAccessListsTypeIpv4Ipv4EntryInner
type RouteAccessListsTypeIpv4Ipv4EntryInner struct {
	// Action
	Action             *string                                                   `json:"action,omitempty"`
	DestinationAddress *RouteAccessListsTypeIpv4Ipv4EntryInnerDestinationAddress `json:"destination_address,omitempty"`
	// Sequence number
	Name                 *int32                                               `json:"name,omitempty"`
	SourceAddress        *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress `json:"source_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RouteAccessListsTypeIpv4Ipv4EntryInner RouteAccessListsTypeIpv4Ipv4EntryInner

// NewRouteAccessListsTypeIpv4Ipv4EntryInner instantiates a new RouteAccessListsTypeIpv4Ipv4EntryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteAccessListsTypeIpv4Ipv4EntryInner() *RouteAccessListsTypeIpv4Ipv4EntryInner {
	this := RouteAccessListsTypeIpv4Ipv4EntryInner{}
	return &this
}

// NewRouteAccessListsTypeIpv4Ipv4EntryInnerWithDefaults instantiates a new RouteAccessListsTypeIpv4Ipv4EntryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteAccessListsTypeIpv4Ipv4EntryInnerWithDefaults() *RouteAccessListsTypeIpv4Ipv4EntryInner {
	this := RouteAccessListsTypeIpv4Ipv4EntryInner{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) SetAction(v string) {
	o.Action = &v
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetDestinationAddress() RouteAccessListsTypeIpv4Ipv4EntryInnerDestinationAddress {
	if o == nil || IsNil(o.DestinationAddress) {
		var ret RouteAccessListsTypeIpv4Ipv4EntryInnerDestinationAddress
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetDestinationAddressOk() (*RouteAccessListsTypeIpv4Ipv4EntryInnerDestinationAddress, bool) {
	if o == nil || IsNil(o.DestinationAddress) {
		return nil, false
	}
	return o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) HasDestinationAddress() bool {
	if o != nil && !IsNil(o.DestinationAddress) {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given RouteAccessListsTypeIpv4Ipv4EntryInnerDestinationAddress and assigns it to the DestinationAddress field.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) SetDestinationAddress(v RouteAccessListsTypeIpv4Ipv4EntryInnerDestinationAddress) {
	o.DestinationAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetName() int32 {
	if o == nil || IsNil(o.Name) {
		var ret int32
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetNameOk() (*int32, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given int32 and assigns it to the Name field.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) SetName(v int32) {
	o.Name = &v
}

// GetSourceAddress returns the SourceAddress field value if set, zero value otherwise.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetSourceAddress() RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress {
	if o == nil || IsNil(o.SourceAddress) {
		var ret RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress
		return ret
	}
	return *o.SourceAddress
}

// GetSourceAddressOk returns a tuple with the SourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) GetSourceAddressOk() (*RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress, bool) {
	if o == nil || IsNil(o.SourceAddress) {
		return nil, false
	}
	return o.SourceAddress, true
}

// HasSourceAddress returns a boolean if a field has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) HasSourceAddress() bool {
	if o != nil && !IsNil(o.SourceAddress) {
		return true
	}

	return false
}

// SetSourceAddress gets a reference to the given RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress and assigns it to the SourceAddress field.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) SetSourceAddress(v RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) {
	o.SourceAddress = &v
}

func (o RouteAccessListsTypeIpv4Ipv4EntryInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteAccessListsTypeIpv4Ipv4EntryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.DestinationAddress) {
		toSerialize["destination_address"] = o.DestinationAddress
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SourceAddress) {
		toSerialize["source_address"] = o.SourceAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RouteAccessListsTypeIpv4Ipv4EntryInner) UnmarshalJSON(data []byte) (err error) {
	varRouteAccessListsTypeIpv4Ipv4EntryInner := _RouteAccessListsTypeIpv4Ipv4EntryInner{}

	err = json.Unmarshal(data, &varRouteAccessListsTypeIpv4Ipv4EntryInner)

	if err != nil {
		return err
	}

	*o = RouteAccessListsTypeIpv4Ipv4EntryInner(varRouteAccessListsTypeIpv4Ipv4EntryInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "destination_address")
		delete(additionalProperties, "name")
		delete(additionalProperties, "source_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRouteAccessListsTypeIpv4Ipv4EntryInner struct {
	value *RouteAccessListsTypeIpv4Ipv4EntryInner
	isSet bool
}

func (v NullableRouteAccessListsTypeIpv4Ipv4EntryInner) Get() *RouteAccessListsTypeIpv4Ipv4EntryInner {
	return v.value
}

func (v *NullableRouteAccessListsTypeIpv4Ipv4EntryInner) Set(val *RouteAccessListsTypeIpv4Ipv4EntryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteAccessListsTypeIpv4Ipv4EntryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteAccessListsTypeIpv4Ipv4EntryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteAccessListsTypeIpv4Ipv4EntryInner(val *RouteAccessListsTypeIpv4Ipv4EntryInner) *NullableRouteAccessListsTypeIpv4Ipv4EntryInner {
	return &NullableRouteAccessListsTypeIpv4Ipv4EntryInner{value: val, isSet: true}
}

func (v NullableRouteAccessListsTypeIpv4Ipv4EntryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteAccessListsTypeIpv4Ipv4EntryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
