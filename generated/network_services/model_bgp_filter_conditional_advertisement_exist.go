/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpFilterConditionalAdvertisementExist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpFilterConditionalAdvertisementExist{}

// BgpFilterConditionalAdvertisementExist struct for BgpFilterConditionalAdvertisementExist
type BgpFilterConditionalAdvertisementExist struct {
	AdvertiseMap         *string `json:"advertise_map,omitempty"`
	ExistMap             *string `json:"exist_map,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpFilterConditionalAdvertisementExist BgpFilterConditionalAdvertisementExist

// NewBgpFilterConditionalAdvertisementExist instantiates a new BgpFilterConditionalAdvertisementExist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpFilterConditionalAdvertisementExist() *BgpFilterConditionalAdvertisementExist {
	this := BgpFilterConditionalAdvertisementExist{}
	return &this
}

// NewBgpFilterConditionalAdvertisementExistWithDefaults instantiates a new BgpFilterConditionalAdvertisementExist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpFilterConditionalAdvertisementExistWithDefaults() *BgpFilterConditionalAdvertisementExist {
	this := BgpFilterConditionalAdvertisementExist{}
	return &this
}

// GetAdvertiseMap returns the AdvertiseMap field value if set, zero value otherwise.
func (o *BgpFilterConditionalAdvertisementExist) GetAdvertiseMap() string {
	if o == nil || IsNil(o.AdvertiseMap) {
		var ret string
		return ret
	}
	return *o.AdvertiseMap
}

// GetAdvertiseMapOk returns a tuple with the AdvertiseMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpFilterConditionalAdvertisementExist) GetAdvertiseMapOk() (*string, bool) {
	if o == nil || IsNil(o.AdvertiseMap) {
		return nil, false
	}
	return o.AdvertiseMap, true
}

// HasAdvertiseMap returns a boolean if a field has been set.
func (o *BgpFilterConditionalAdvertisementExist) HasAdvertiseMap() bool {
	if o != nil && !IsNil(o.AdvertiseMap) {
		return true
	}

	return false
}

// SetAdvertiseMap gets a reference to the given string and assigns it to the AdvertiseMap field.
func (o *BgpFilterConditionalAdvertisementExist) SetAdvertiseMap(v string) {
	o.AdvertiseMap = &v
}

// GetExistMap returns the ExistMap field value if set, zero value otherwise.
func (o *BgpFilterConditionalAdvertisementExist) GetExistMap() string {
	if o == nil || IsNil(o.ExistMap) {
		var ret string
		return ret
	}
	return *o.ExistMap
}

// GetExistMapOk returns a tuple with the ExistMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpFilterConditionalAdvertisementExist) GetExistMapOk() (*string, bool) {
	if o == nil || IsNil(o.ExistMap) {
		return nil, false
	}
	return o.ExistMap, true
}

// HasExistMap returns a boolean if a field has been set.
func (o *BgpFilterConditionalAdvertisementExist) HasExistMap() bool {
	if o != nil && !IsNil(o.ExistMap) {
		return true
	}

	return false
}

// SetExistMap gets a reference to the given string and assigns it to the ExistMap field.
func (o *BgpFilterConditionalAdvertisementExist) SetExistMap(v string) {
	o.ExistMap = &v
}

func (o BgpFilterConditionalAdvertisementExist) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpFilterConditionalAdvertisementExist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvertiseMap) {
		toSerialize["advertise_map"] = o.AdvertiseMap
	}
	if !IsNil(o.ExistMap) {
		toSerialize["exist_map"] = o.ExistMap
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpFilterConditionalAdvertisementExist) UnmarshalJSON(data []byte) (err error) {
	varBgpFilterConditionalAdvertisementExist := _BgpFilterConditionalAdvertisementExist{}

	err = json.Unmarshal(data, &varBgpFilterConditionalAdvertisementExist)

	if err != nil {
		return err
	}

	*o = BgpFilterConditionalAdvertisementExist(varBgpFilterConditionalAdvertisementExist)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "advertise_map")
		delete(additionalProperties, "exist_map")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpFilterConditionalAdvertisementExist struct {
	value *BgpFilterConditionalAdvertisementExist
	isSet bool
}

func (v NullableBgpFilterConditionalAdvertisementExist) Get() *BgpFilterConditionalAdvertisementExist {
	return v.value
}

func (v *NullableBgpFilterConditionalAdvertisementExist) Set(val *BgpFilterConditionalAdvertisementExist) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpFilterConditionalAdvertisementExist) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpFilterConditionalAdvertisementExist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpFilterConditionalAdvertisementExist(val *BgpFilterConditionalAdvertisementExist) *NullableBgpFilterConditionalAdvertisementExist {
	return &NullableBgpFilterConditionalAdvertisementExist{value: val, isSet: true}
}

func (v NullableBgpFilterConditionalAdvertisementExist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpFilterConditionalAdvertisementExist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
