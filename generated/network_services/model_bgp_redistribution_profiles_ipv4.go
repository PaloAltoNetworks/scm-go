/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpRedistributionProfilesIpv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpRedistributionProfilesIpv4{}

// BgpRedistributionProfilesIpv4 struct for BgpRedistributionProfilesIpv4
type BgpRedistributionProfilesIpv4 struct {
	Unicast              *BgpRedistributionProfilesIpv4Unicast `json:"unicast,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpRedistributionProfilesIpv4 BgpRedistributionProfilesIpv4

// NewBgpRedistributionProfilesIpv4 instantiates a new BgpRedistributionProfilesIpv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpRedistributionProfilesIpv4() *BgpRedistributionProfilesIpv4 {
	this := BgpRedistributionProfilesIpv4{}
	return &this
}

// NewBgpRedistributionProfilesIpv4WithDefaults instantiates a new BgpRedistributionProfilesIpv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpRedistributionProfilesIpv4WithDefaults() *BgpRedistributionProfilesIpv4 {
	this := BgpRedistributionProfilesIpv4{}
	return &this
}

// GetUnicast returns the Unicast field value if set, zero value otherwise.
func (o *BgpRedistributionProfilesIpv4) GetUnicast() BgpRedistributionProfilesIpv4Unicast {
	if o == nil || IsNil(o.Unicast) {
		var ret BgpRedistributionProfilesIpv4Unicast
		return ret
	}
	return *o.Unicast
}

// GetUnicastOk returns a tuple with the Unicast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRedistributionProfilesIpv4) GetUnicastOk() (*BgpRedistributionProfilesIpv4Unicast, bool) {
	if o == nil || IsNil(o.Unicast) {
		return nil, false
	}
	return o.Unicast, true
}

// HasUnicast returns a boolean if a field has been set.
func (o *BgpRedistributionProfilesIpv4) HasUnicast() bool {
	if o != nil && !IsNil(o.Unicast) {
		return true
	}

	return false
}

// SetUnicast gets a reference to the given BgpRedistributionProfilesIpv4Unicast and assigns it to the Unicast field.
func (o *BgpRedistributionProfilesIpv4) SetUnicast(v BgpRedistributionProfilesIpv4Unicast) {
	o.Unicast = &v
}

func (o BgpRedistributionProfilesIpv4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpRedistributionProfilesIpv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Unicast) {
		toSerialize["unicast"] = o.Unicast
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpRedistributionProfilesIpv4) UnmarshalJSON(data []byte) (err error) {
	varBgpRedistributionProfilesIpv4 := _BgpRedistributionProfilesIpv4{}

	err = json.Unmarshal(data, &varBgpRedistributionProfilesIpv4)

	if err != nil {
		return err
	}

	*o = BgpRedistributionProfilesIpv4(varBgpRedistributionProfilesIpv4)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "unicast")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpRedistributionProfilesIpv4 struct {
	value *BgpRedistributionProfilesIpv4
	isSet bool
}

func (v NullableBgpRedistributionProfilesIpv4) Get() *BgpRedistributionProfilesIpv4 {
	return v.value
}

func (v *NullableBgpRedistributionProfilesIpv4) Set(val *BgpRedistributionProfilesIpv4) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRedistributionProfilesIpv4) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRedistributionProfilesIpv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRedistributionProfilesIpv4(val *BgpRedistributionProfilesIpv4) *NullableBgpRedistributionProfilesIpv4 {
	return &NullableBgpRedistributionProfilesIpv4{value: val, isSet: true}
}

func (v NullableBgpRedistributionProfilesIpv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRedistributionProfilesIpv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
