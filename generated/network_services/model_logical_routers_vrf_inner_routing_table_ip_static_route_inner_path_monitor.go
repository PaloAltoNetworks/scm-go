/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor{}

// LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor struct for LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor
type LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor struct {
	Enable               *bool                                                                                     `json:"enable,omitempty"`
	FailureCondition     *string                                                                                   `json:"failure_condition,omitempty"`
	HoldTime             *int32                                                                                    `json:"hold_time,omitempty"`
	MonitorDestinations  []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorMonitorDestinationsInner `json:"monitor_destinations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor

// NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor instantiates a new LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor() *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor {
	this := LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor{}
	return &this
}

// NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorWithDefaults instantiates a new LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorWithDefaults() *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor {
	this := LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) SetEnable(v bool) {
	o.Enable = &v
}

// GetFailureCondition returns the FailureCondition field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetFailureCondition() string {
	if o == nil || IsNil(o.FailureCondition) {
		var ret string
		return ret
	}
	return *o.FailureCondition
}

// GetFailureConditionOk returns a tuple with the FailureCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetFailureConditionOk() (*string, bool) {
	if o == nil || IsNil(o.FailureCondition) {
		return nil, false
	}
	return o.FailureCondition, true
}

// HasFailureCondition returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) HasFailureCondition() bool {
	if o != nil && !IsNil(o.FailureCondition) {
		return true
	}

	return false
}

// SetFailureCondition gets a reference to the given string and assigns it to the FailureCondition field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) SetFailureCondition(v string) {
	o.FailureCondition = &v
}

// GetHoldTime returns the HoldTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetHoldTime() int32 {
	if o == nil || IsNil(o.HoldTime) {
		var ret int32
		return ret
	}
	return *o.HoldTime
}

// GetHoldTimeOk returns a tuple with the HoldTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetHoldTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldTime) {
		return nil, false
	}
	return o.HoldTime, true
}

// HasHoldTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) HasHoldTime() bool {
	if o != nil && !IsNil(o.HoldTime) {
		return true
	}

	return false
}

// SetHoldTime gets a reference to the given int32 and assigns it to the HoldTime field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) SetHoldTime(v int32) {
	o.HoldTime = &v
}

// GetMonitorDestinations returns the MonitorDestinations field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetMonitorDestinations() []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorMonitorDestinationsInner {
	if o == nil || IsNil(o.MonitorDestinations) {
		var ret []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorMonitorDestinationsInner
		return ret
	}
	return o.MonitorDestinations
}

// GetMonitorDestinationsOk returns a tuple with the MonitorDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) GetMonitorDestinationsOk() ([]LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorMonitorDestinationsInner, bool) {
	if o == nil || IsNil(o.MonitorDestinations) {
		return nil, false
	}
	return o.MonitorDestinations, true
}

// HasMonitorDestinations returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) HasMonitorDestinations() bool {
	if o != nil && !IsNil(o.MonitorDestinations) {
		return true
	}

	return false
}

// SetMonitorDestinations gets a reference to the given []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorMonitorDestinationsInner and assigns it to the MonitorDestinations field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) SetMonitorDestinations(v []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitorMonitorDestinationsInner) {
	o.MonitorDestinations = v
}

func (o LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.FailureCondition) {
		toSerialize["failure_condition"] = o.FailureCondition
	}
	if !IsNil(o.HoldTime) {
		toSerialize["hold_time"] = o.HoldTime
	}
	if !IsNil(o.MonitorDestinations) {
		toSerialize["monitor_destinations"] = o.MonitorDestinations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor := _LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor(varLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "failure_condition")
		delete(additionalProperties, "hold_time")
		delete(additionalProperties, "monitor_destinations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor struct {
	value *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) Get() *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) Set(val *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor(val *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor {
	return &NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
