/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerBgpAggregate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerBgpAggregate{}

// LogicalRoutersVrfInnerBgpAggregate struct for LogicalRoutersVrfInnerBgpAggregate
type LogicalRoutersVrfInnerBgpAggregate struct {
	AggregateMed         *bool `json:"aggregate_med,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerBgpAggregate LogicalRoutersVrfInnerBgpAggregate

// NewLogicalRoutersVrfInnerBgpAggregate instantiates a new LogicalRoutersVrfInnerBgpAggregate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerBgpAggregate() *LogicalRoutersVrfInnerBgpAggregate {
	this := LogicalRoutersVrfInnerBgpAggregate{}
	return &this
}

// NewLogicalRoutersVrfInnerBgpAggregateWithDefaults instantiates a new LogicalRoutersVrfInnerBgpAggregate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerBgpAggregateWithDefaults() *LogicalRoutersVrfInnerBgpAggregate {
	this := LogicalRoutersVrfInnerBgpAggregate{}
	return &this
}

// GetAggregateMed returns the AggregateMed field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpAggregate) GetAggregateMed() bool {
	if o == nil || IsNil(o.AggregateMed) {
		var ret bool
		return ret
	}
	return *o.AggregateMed
}

// GetAggregateMedOk returns a tuple with the AggregateMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpAggregate) GetAggregateMedOk() (*bool, bool) {
	if o == nil || IsNil(o.AggregateMed) {
		return nil, false
	}
	return o.AggregateMed, true
}

// HasAggregateMed returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpAggregate) HasAggregateMed() bool {
	if o != nil && !IsNil(o.AggregateMed) {
		return true
	}

	return false
}

// SetAggregateMed gets a reference to the given bool and assigns it to the AggregateMed field.
func (o *LogicalRoutersVrfInnerBgpAggregate) SetAggregateMed(v bool) {
	o.AggregateMed = &v
}

func (o LogicalRoutersVrfInnerBgpAggregate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerBgpAggregate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AggregateMed) {
		toSerialize["aggregate_med"] = o.AggregateMed
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerBgpAggregate) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerBgpAggregate := _LogicalRoutersVrfInnerBgpAggregate{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerBgpAggregate)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerBgpAggregate(varLogicalRoutersVrfInnerBgpAggregate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aggregate_med")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerBgpAggregate struct {
	value *LogicalRoutersVrfInnerBgpAggregate
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerBgpAggregate) Get() *LogicalRoutersVrfInnerBgpAggregate {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerBgpAggregate) Set(val *LogicalRoutersVrfInnerBgpAggregate) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerBgpAggregate) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerBgpAggregate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerBgpAggregate(val *LogicalRoutersVrfInnerBgpAggregate) *NullableLogicalRoutersVrfInnerBgpAggregate {
	return &NullableLogicalRoutersVrfInnerBgpAggregate{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerBgpAggregate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerBgpAggregate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
