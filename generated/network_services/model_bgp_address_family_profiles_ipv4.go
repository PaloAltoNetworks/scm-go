/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the BgpAddressFamilyProfilesIpv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpAddressFamilyProfilesIpv4{}

// BgpAddressFamilyProfilesIpv4 struct for BgpAddressFamilyProfilesIpv4
type BgpAddressFamilyProfilesIpv4 struct {
	Ipv4                 BgpAddressFamilyProfilesIpv4Ipv4 `json:"ipv4"`
	AdditionalProperties map[string]interface{}
}

type _BgpAddressFamilyProfilesIpv4 BgpAddressFamilyProfilesIpv4

// NewBgpAddressFamilyProfilesIpv4 instantiates a new BgpAddressFamilyProfilesIpv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpAddressFamilyProfilesIpv4(ipv4 BgpAddressFamilyProfilesIpv4Ipv4) *BgpAddressFamilyProfilesIpv4 {
	this := BgpAddressFamilyProfilesIpv4{}
	this.Ipv4 = ipv4
	return &this
}

// NewBgpAddressFamilyProfilesIpv4WithDefaults instantiates a new BgpAddressFamilyProfilesIpv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpAddressFamilyProfilesIpv4WithDefaults() *BgpAddressFamilyProfilesIpv4 {
	this := BgpAddressFamilyProfilesIpv4{}
	return &this
}

// GetIpv4 returns the Ipv4 field value
func (o *BgpAddressFamilyProfilesIpv4) GetIpv4() BgpAddressFamilyProfilesIpv4Ipv4 {
	if o == nil {
		var ret BgpAddressFamilyProfilesIpv4Ipv4
		return ret
	}

	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value
// and a boolean to check if the value has been set.
func (o *BgpAddressFamilyProfilesIpv4) GetIpv4Ok() (*BgpAddressFamilyProfilesIpv4Ipv4, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv4, true
}

// SetIpv4 sets field value
func (o *BgpAddressFamilyProfilesIpv4) SetIpv4(v BgpAddressFamilyProfilesIpv4Ipv4) {
	o.Ipv4 = v
}

func (o BgpAddressFamilyProfilesIpv4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpAddressFamilyProfilesIpv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ipv4"] = o.Ipv4

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpAddressFamilyProfilesIpv4) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ipv4",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBgpAddressFamilyProfilesIpv4 := _BgpAddressFamilyProfilesIpv4{}

	err = json.Unmarshal(data, &varBgpAddressFamilyProfilesIpv4)

	if err != nil {
		return err
	}

	*o = BgpAddressFamilyProfilesIpv4(varBgpAddressFamilyProfilesIpv4)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ipv4")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpAddressFamilyProfilesIpv4 struct {
	value *BgpAddressFamilyProfilesIpv4
	isSet bool
}

func (v NullableBgpAddressFamilyProfilesIpv4) Get() *BgpAddressFamilyProfilesIpv4 {
	return v.value
}

func (v *NullableBgpAddressFamilyProfilesIpv4) Set(val *BgpAddressFamilyProfilesIpv4) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpAddressFamilyProfilesIpv4) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpAddressFamilyProfilesIpv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpAddressFamilyProfilesIpv4(val *BgpAddressFamilyProfilesIpv4) *NullableBgpAddressFamilyProfilesIpv4 {
	return &NullableBgpAddressFamilyProfilesIpv4{value: val, isSet: true}
}

func (v NullableBgpAddressFamilyProfilesIpv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpAddressFamilyProfilesIpv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
