/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerMulticastMsdpPeerInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastMsdpPeerInner{}

// LogicalRoutersVrfInnerMulticastMsdpPeerInner struct for LogicalRoutersVrfInnerMulticastMsdpPeerInner
type LogicalRoutersVrfInnerMulticastMsdpPeerInner struct {
	Authentication       *string                                                       `json:"authentication,omitempty"`
	Enable               *bool                                                         `json:"enable,omitempty"`
	InboundSaFilter      *string                                                       `json:"inbound_sa_filter,omitempty"`
	LocalAddress         *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress `json:"local_address,omitempty"`
	MaxSa                *int32                                                        `json:"max_sa,omitempty"`
	Name                 string                                                        `json:"name"`
	OutboundSaFilter     *string                                                       `json:"outbound_sa_filter,omitempty"`
	PeerAddress          *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress  `json:"peer_address,omitempty"`
	PeerAs               *string                                                       `json:"peer_as,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastMsdpPeerInner LogicalRoutersVrfInnerMulticastMsdpPeerInner

// NewLogicalRoutersVrfInnerMulticastMsdpPeerInner instantiates a new LogicalRoutersVrfInnerMulticastMsdpPeerInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastMsdpPeerInner(name string) *LogicalRoutersVrfInnerMulticastMsdpPeerInner {
	this := LogicalRoutersVrfInnerMulticastMsdpPeerInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerMulticastMsdpPeerInnerWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastMsdpPeerInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastMsdpPeerInnerWithDefaults() *LogicalRoutersVrfInnerMulticastMsdpPeerInner {
	this := LogicalRoutersVrfInnerMulticastMsdpPeerInner{}
	return &this
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetInboundSaFilter returns the InboundSaFilter field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetInboundSaFilter() string {
	if o == nil || IsNil(o.InboundSaFilter) {
		var ret string
		return ret
	}
	return *o.InboundSaFilter
}

// GetInboundSaFilterOk returns a tuple with the InboundSaFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetInboundSaFilterOk() (*string, bool) {
	if o == nil || IsNil(o.InboundSaFilter) {
		return nil, false
	}
	return o.InboundSaFilter, true
}

// HasInboundSaFilter returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasInboundSaFilter() bool {
	if o != nil && !IsNil(o.InboundSaFilter) {
		return true
	}

	return false
}

// SetInboundSaFilter gets a reference to the given string and assigns it to the InboundSaFilter field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetInboundSaFilter(v string) {
	o.InboundSaFilter = &v
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetLocalAddress() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress {
	if o == nil || IsNil(o.LocalAddress) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress
		return ret
	}
	return *o.LocalAddress
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetLocalAddressOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress, bool) {
	if o == nil || IsNil(o.LocalAddress) {
		return nil, false
	}
	return o.LocalAddress, true
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasLocalAddress() bool {
	if o != nil && !IsNil(o.LocalAddress) {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress and assigns it to the LocalAddress field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetLocalAddress(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress) {
	o.LocalAddress = &v
}

// GetMaxSa returns the MaxSa field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetMaxSa() int32 {
	if o == nil || IsNil(o.MaxSa) {
		var ret int32
		return ret
	}
	return *o.MaxSa
}

// GetMaxSaOk returns a tuple with the MaxSa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetMaxSaOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSa) {
		return nil, false
	}
	return o.MaxSa, true
}

// HasMaxSa returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasMaxSa() bool {
	if o != nil && !IsNil(o.MaxSa) {
		return true
	}

	return false
}

// SetMaxSa gets a reference to the given int32 and assigns it to the MaxSa field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetMaxSa(v int32) {
	o.MaxSa = &v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetName(v string) {
	o.Name = v
}

// GetOutboundSaFilter returns the OutboundSaFilter field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetOutboundSaFilter() string {
	if o == nil || IsNil(o.OutboundSaFilter) {
		var ret string
		return ret
	}
	return *o.OutboundSaFilter
}

// GetOutboundSaFilterOk returns a tuple with the OutboundSaFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetOutboundSaFilterOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundSaFilter) {
		return nil, false
	}
	return o.OutboundSaFilter, true
}

// HasOutboundSaFilter returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasOutboundSaFilter() bool {
	if o != nil && !IsNil(o.OutboundSaFilter) {
		return true
	}

	return false
}

// SetOutboundSaFilter gets a reference to the given string and assigns it to the OutboundSaFilter field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetOutboundSaFilter(v string) {
	o.OutboundSaFilter = &v
}

// GetPeerAddress returns the PeerAddress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetPeerAddress() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress {
	if o == nil || IsNil(o.PeerAddress) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress
		return ret
	}
	return *o.PeerAddress
}

// GetPeerAddressOk returns a tuple with the PeerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetPeerAddressOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress, bool) {
	if o == nil || IsNil(o.PeerAddress) {
		return nil, false
	}
	return o.PeerAddress, true
}

// HasPeerAddress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasPeerAddress() bool {
	if o != nil && !IsNil(o.PeerAddress) {
		return true
	}

	return false
}

// SetPeerAddress gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress and assigns it to the PeerAddress field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetPeerAddress(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress) {
	o.PeerAddress = &v
}

// GetPeerAs returns the PeerAs field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetPeerAs() string {
	if o == nil || IsNil(o.PeerAs) {
		var ret string
		return ret
	}
	return *o.PeerAs
}

// GetPeerAsOk returns a tuple with the PeerAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) GetPeerAsOk() (*string, bool) {
	if o == nil || IsNil(o.PeerAs) {
		return nil, false
	}
	return o.PeerAs, true
}

// HasPeerAs returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) HasPeerAs() bool {
	if o != nil && !IsNil(o.PeerAs) {
		return true
	}

	return false
}

// SetPeerAs gets a reference to the given string and assigns it to the PeerAs field.
func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) SetPeerAs(v string) {
	o.PeerAs = &v
}

func (o LogicalRoutersVrfInnerMulticastMsdpPeerInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastMsdpPeerInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.InboundSaFilter) {
		toSerialize["inbound_sa_filter"] = o.InboundSaFilter
	}
	if !IsNil(o.LocalAddress) {
		toSerialize["local_address"] = o.LocalAddress
	}
	if !IsNil(o.MaxSa) {
		toSerialize["max_sa"] = o.MaxSa
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.OutboundSaFilter) {
		toSerialize["outbound_sa_filter"] = o.OutboundSaFilter
	}
	if !IsNil(o.PeerAddress) {
		toSerialize["peer_address"] = o.PeerAddress
	}
	if !IsNil(o.PeerAs) {
		toSerialize["peer_as"] = o.PeerAs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastMsdpPeerInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerMulticastMsdpPeerInner := _LogicalRoutersVrfInnerMulticastMsdpPeerInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastMsdpPeerInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastMsdpPeerInner(varLogicalRoutersVrfInnerMulticastMsdpPeerInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "inbound_sa_filter")
		delete(additionalProperties, "local_address")
		delete(additionalProperties, "max_sa")
		delete(additionalProperties, "name")
		delete(additionalProperties, "outbound_sa_filter")
		delete(additionalProperties, "peer_address")
		delete(additionalProperties, "peer_as")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner struct {
	value *LogicalRoutersVrfInnerMulticastMsdpPeerInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner) Get() *LogicalRoutersVrfInnerMulticastMsdpPeerInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner) Set(val *LogicalRoutersVrfInnerMulticastMsdpPeerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastMsdpPeerInner(val *LogicalRoutersVrfInnerMulticastMsdpPeerInner) *NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner {
	return &NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastMsdpPeerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
