/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LoopbackInterfacesIpv6AddressInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoopbackInterfacesIpv6AddressInner{}

// LoopbackInterfacesIpv6AddressInner struct for LoopbackInterfacesIpv6AddressInner
type LoopbackInterfacesIpv6AddressInner struct {
	// Enable Address on Interface
	EnableOnInterface *bool `json:"enable_on_interface,omitempty"`
	// Interface ID
	InterfaceId *string `json:"interface_id,omitempty"`
	// IPv6 Address
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoopbackInterfacesIpv6AddressInner LoopbackInterfacesIpv6AddressInner

// NewLoopbackInterfacesIpv6AddressInner instantiates a new LoopbackInterfacesIpv6AddressInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoopbackInterfacesIpv6AddressInner() *LoopbackInterfacesIpv6AddressInner {
	this := LoopbackInterfacesIpv6AddressInner{}
	var enableOnInterface bool = true
	this.EnableOnInterface = &enableOnInterface
	var interfaceId string = "EUI-64"
	this.InterfaceId = &interfaceId
	return &this
}

// NewLoopbackInterfacesIpv6AddressInnerWithDefaults instantiates a new LoopbackInterfacesIpv6AddressInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoopbackInterfacesIpv6AddressInnerWithDefaults() *LoopbackInterfacesIpv6AddressInner {
	this := LoopbackInterfacesIpv6AddressInner{}
	var enableOnInterface bool = true
	this.EnableOnInterface = &enableOnInterface
	var interfaceId string = "EUI-64"
	this.InterfaceId = &interfaceId
	return &this
}

// GetEnableOnInterface returns the EnableOnInterface field value if set, zero value otherwise.
func (o *LoopbackInterfacesIpv6AddressInner) GetEnableOnInterface() bool {
	if o == nil || IsNil(o.EnableOnInterface) {
		var ret bool
		return ret
	}
	return *o.EnableOnInterface
}

// GetEnableOnInterfaceOk returns a tuple with the EnableOnInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoopbackInterfacesIpv6AddressInner) GetEnableOnInterfaceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableOnInterface) {
		return nil, false
	}
	return o.EnableOnInterface, true
}

// HasEnableOnInterface returns a boolean if a field has been set.
func (o *LoopbackInterfacesIpv6AddressInner) HasEnableOnInterface() bool {
	if o != nil && !IsNil(o.EnableOnInterface) {
		return true
	}

	return false
}

// SetEnableOnInterface gets a reference to the given bool and assigns it to the EnableOnInterface field.
func (o *LoopbackInterfacesIpv6AddressInner) SetEnableOnInterface(v bool) {
	o.EnableOnInterface = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *LoopbackInterfacesIpv6AddressInner) GetInterfaceId() string {
	if o == nil || IsNil(o.InterfaceId) {
		var ret string
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoopbackInterfacesIpv6AddressInner) GetInterfaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *LoopbackInterfacesIpv6AddressInner) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given string and assigns it to the InterfaceId field.
func (o *LoopbackInterfacesIpv6AddressInner) SetInterfaceId(v string) {
	o.InterfaceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoopbackInterfacesIpv6AddressInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoopbackInterfacesIpv6AddressInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoopbackInterfacesIpv6AddressInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoopbackInterfacesIpv6AddressInner) SetName(v string) {
	o.Name = &v
}

func (o LoopbackInterfacesIpv6AddressInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoopbackInterfacesIpv6AddressInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableOnInterface) {
		toSerialize["enable_on_interface"] = o.EnableOnInterface
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoopbackInterfacesIpv6AddressInner) UnmarshalJSON(data []byte) (err error) {
	varLoopbackInterfacesIpv6AddressInner := _LoopbackInterfacesIpv6AddressInner{}

	err = json.Unmarshal(data, &varLoopbackInterfacesIpv6AddressInner)

	if err != nil {
		return err
	}

	*o = LoopbackInterfacesIpv6AddressInner(varLoopbackInterfacesIpv6AddressInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable_on_interface")
		delete(additionalProperties, "interface_id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoopbackInterfacesIpv6AddressInner struct {
	value *LoopbackInterfacesIpv6AddressInner
	isSet bool
}

func (v NullableLoopbackInterfacesIpv6AddressInner) Get() *LoopbackInterfacesIpv6AddressInner {
	return v.value
}

func (v *NullableLoopbackInterfacesIpv6AddressInner) Set(val *LoopbackInterfacesIpv6AddressInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLoopbackInterfacesIpv6AddressInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLoopbackInterfacesIpv6AddressInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoopbackInterfacesIpv6AddressInner(val *LoopbackInterfacesIpv6AddressInner) *NullableLoopbackInterfacesIpv6AddressInner {
	return &NullableLoopbackInterfacesIpv6AddressInner{value: val, isSet: true}
}

func (v NullableLoopbackInterfacesIpv6AddressInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoopbackInterfacesIpv6AddressInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
