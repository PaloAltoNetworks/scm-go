/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpAddressFamilyMaximumPrefixAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpAddressFamilyMaximumPrefixAction{}

// BgpAddressFamilyMaximumPrefixAction struct for BgpAddressFamilyMaximumPrefixAction
type BgpAddressFamilyMaximumPrefixAction struct {
	Restart              *BgpAddressFamilyMaximumPrefixActionRestart `json:"restart,omitempty"`
	WarningOnly          map[string]interface{}                      `json:"warning_only,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpAddressFamilyMaximumPrefixAction BgpAddressFamilyMaximumPrefixAction

// NewBgpAddressFamilyMaximumPrefixAction instantiates a new BgpAddressFamilyMaximumPrefixAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpAddressFamilyMaximumPrefixAction() *BgpAddressFamilyMaximumPrefixAction {
	this := BgpAddressFamilyMaximumPrefixAction{}
	return &this
}

// NewBgpAddressFamilyMaximumPrefixActionWithDefaults instantiates a new BgpAddressFamilyMaximumPrefixAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpAddressFamilyMaximumPrefixActionWithDefaults() *BgpAddressFamilyMaximumPrefixAction {
	this := BgpAddressFamilyMaximumPrefixAction{}
	return &this
}

// GetRestart returns the Restart field value if set, zero value otherwise.
func (o *BgpAddressFamilyMaximumPrefixAction) GetRestart() BgpAddressFamilyMaximumPrefixActionRestart {
	if o == nil || IsNil(o.Restart) {
		var ret BgpAddressFamilyMaximumPrefixActionRestart
		return ret
	}
	return *o.Restart
}

// GetRestartOk returns a tuple with the Restart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpAddressFamilyMaximumPrefixAction) GetRestartOk() (*BgpAddressFamilyMaximumPrefixActionRestart, bool) {
	if o == nil || IsNil(o.Restart) {
		return nil, false
	}
	return o.Restart, true
}

// HasRestart returns a boolean if a field has been set.
func (o *BgpAddressFamilyMaximumPrefixAction) HasRestart() bool {
	if o != nil && !IsNil(o.Restart) {
		return true
	}

	return false
}

// SetRestart gets a reference to the given BgpAddressFamilyMaximumPrefixActionRestart and assigns it to the Restart field.
func (o *BgpAddressFamilyMaximumPrefixAction) SetRestart(v BgpAddressFamilyMaximumPrefixActionRestart) {
	o.Restart = &v
}

// GetWarningOnly returns the WarningOnly field value if set, zero value otherwise.
func (o *BgpAddressFamilyMaximumPrefixAction) GetWarningOnly() map[string]interface{} {
	if o == nil || IsNil(o.WarningOnly) {
		var ret map[string]interface{}
		return ret
	}
	return o.WarningOnly
}

// GetWarningOnlyOk returns a tuple with the WarningOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpAddressFamilyMaximumPrefixAction) GetWarningOnlyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WarningOnly) {
		return map[string]interface{}{}, false
	}
	return o.WarningOnly, true
}

// HasWarningOnly returns a boolean if a field has been set.
func (o *BgpAddressFamilyMaximumPrefixAction) HasWarningOnly() bool {
	if o != nil && !IsNil(o.WarningOnly) {
		return true
	}

	return false
}

// SetWarningOnly gets a reference to the given map[string]interface{} and assigns it to the WarningOnly field.
func (o *BgpAddressFamilyMaximumPrefixAction) SetWarningOnly(v map[string]interface{}) {
	o.WarningOnly = v
}

func (o BgpAddressFamilyMaximumPrefixAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpAddressFamilyMaximumPrefixAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Restart) {
		toSerialize["restart"] = o.Restart
	}
	if !IsNil(o.WarningOnly) {
		toSerialize["warning_only"] = o.WarningOnly
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpAddressFamilyMaximumPrefixAction) UnmarshalJSON(data []byte) (err error) {
	varBgpAddressFamilyMaximumPrefixAction := _BgpAddressFamilyMaximumPrefixAction{}

	err = json.Unmarshal(data, &varBgpAddressFamilyMaximumPrefixAction)

	if err != nil {
		return err
	}

	*o = BgpAddressFamilyMaximumPrefixAction(varBgpAddressFamilyMaximumPrefixAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "restart")
		delete(additionalProperties, "warning_only")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpAddressFamilyMaximumPrefixAction struct {
	value *BgpAddressFamilyMaximumPrefixAction
	isSet bool
}

func (v NullableBgpAddressFamilyMaximumPrefixAction) Get() *BgpAddressFamilyMaximumPrefixAction {
	return v.value
}

func (v *NullableBgpAddressFamilyMaximumPrefixAction) Set(val *BgpAddressFamilyMaximumPrefixAction) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpAddressFamilyMaximumPrefixAction) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpAddressFamilyMaximumPrefixAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpAddressFamilyMaximumPrefixAction(val *BgpAddressFamilyMaximumPrefixAction) *NullableBgpAddressFamilyMaximumPrefixAction {
	return &NullableBgpAddressFamilyMaximumPrefixAction{value: val, isSet: true}
}

func (v NullableBgpAddressFamilyMaximumPrefixAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpAddressFamilyMaximumPrefixAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
