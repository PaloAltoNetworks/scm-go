/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the SdwanPathQualityProfilesMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdwanPathQualityProfilesMetric{}

// SdwanPathQualityProfilesMetric struct for SdwanPathQualityProfilesMetric
type SdwanPathQualityProfilesMetric struct {
	Jitter               SdwanPathQualityProfilesMetricJitter  `json:"jitter"`
	Latency              SdwanPathQualityProfilesMetricLatency `json:"latency"`
	PktLoss              SdwanPathQualityProfilesMetricPktLoss `json:"pkt-loss"`
	AdditionalProperties map[string]interface{}
}

type _SdwanPathQualityProfilesMetric SdwanPathQualityProfilesMetric

// NewSdwanPathQualityProfilesMetric instantiates a new SdwanPathQualityProfilesMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdwanPathQualityProfilesMetric(jitter SdwanPathQualityProfilesMetricJitter, latency SdwanPathQualityProfilesMetricLatency, pktLoss SdwanPathQualityProfilesMetricPktLoss) *SdwanPathQualityProfilesMetric {
	this := SdwanPathQualityProfilesMetric{}
	this.Jitter = jitter
	this.Latency = latency
	this.PktLoss = pktLoss
	return &this
}

// NewSdwanPathQualityProfilesMetricWithDefaults instantiates a new SdwanPathQualityProfilesMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdwanPathQualityProfilesMetricWithDefaults() *SdwanPathQualityProfilesMetric {
	this := SdwanPathQualityProfilesMetric{}
	return &this
}

// GetJitter returns the Jitter field value
func (o *SdwanPathQualityProfilesMetric) GetJitter() SdwanPathQualityProfilesMetricJitter {
	if o == nil {
		var ret SdwanPathQualityProfilesMetricJitter
		return ret
	}

	return o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value
// and a boolean to check if the value has been set.
func (o *SdwanPathQualityProfilesMetric) GetJitterOk() (*SdwanPathQualityProfilesMetricJitter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jitter, true
}

// SetJitter sets field value
func (o *SdwanPathQualityProfilesMetric) SetJitter(v SdwanPathQualityProfilesMetricJitter) {
	o.Jitter = v
}

// GetLatency returns the Latency field value
func (o *SdwanPathQualityProfilesMetric) GetLatency() SdwanPathQualityProfilesMetricLatency {
	if o == nil {
		var ret SdwanPathQualityProfilesMetricLatency
		return ret
	}

	return o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value
// and a boolean to check if the value has been set.
func (o *SdwanPathQualityProfilesMetric) GetLatencyOk() (*SdwanPathQualityProfilesMetricLatency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latency, true
}

// SetLatency sets field value
func (o *SdwanPathQualityProfilesMetric) SetLatency(v SdwanPathQualityProfilesMetricLatency) {
	o.Latency = v
}

// GetPktLoss returns the PktLoss field value
func (o *SdwanPathQualityProfilesMetric) GetPktLoss() SdwanPathQualityProfilesMetricPktLoss {
	if o == nil {
		var ret SdwanPathQualityProfilesMetricPktLoss
		return ret
	}

	return o.PktLoss
}

// GetPktLossOk returns a tuple with the PktLoss field value
// and a boolean to check if the value has been set.
func (o *SdwanPathQualityProfilesMetric) GetPktLossOk() (*SdwanPathQualityProfilesMetricPktLoss, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PktLoss, true
}

// SetPktLoss sets field value
func (o *SdwanPathQualityProfilesMetric) SetPktLoss(v SdwanPathQualityProfilesMetricPktLoss) {
	o.PktLoss = v
}

func (o SdwanPathQualityProfilesMetric) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdwanPathQualityProfilesMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jitter"] = o.Jitter
	toSerialize["latency"] = o.Latency
	toSerialize["pkt-loss"] = o.PktLoss

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SdwanPathQualityProfilesMetric) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jitter",
		"latency",
		"pkt-loss",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSdwanPathQualityProfilesMetric := _SdwanPathQualityProfilesMetric{}

	err = json.Unmarshal(data, &varSdwanPathQualityProfilesMetric)

	if err != nil {
		return err
	}

	*o = SdwanPathQualityProfilesMetric(varSdwanPathQualityProfilesMetric)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "jitter")
		delete(additionalProperties, "latency")
		delete(additionalProperties, "pkt-loss")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSdwanPathQualityProfilesMetric struct {
	value *SdwanPathQualityProfilesMetric
	isSet bool
}

func (v NullableSdwanPathQualityProfilesMetric) Get() *SdwanPathQualityProfilesMetric {
	return v.value
}

func (v *NullableSdwanPathQualityProfilesMetric) Set(val *SdwanPathQualityProfilesMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableSdwanPathQualityProfilesMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableSdwanPathQualityProfilesMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdwanPathQualityProfilesMetric(val *SdwanPathQualityProfilesMetric) *NullableSdwanPathQualityProfilesMetric {
	return &NullableSdwanPathQualityProfilesMetric{value: val, isSet: true}
}

func (v NullableSdwanPathQualityProfilesMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdwanPathQualityProfilesMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
