/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerOspfAreaInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfAreaInner{}

// LogicalRoutersVrfInnerOspfAreaInner struct for LogicalRoutersVrfInnerOspfAreaInner
type LogicalRoutersVrfInnerOspfAreaInner struct {
	Authentication       *string                                                        `json:"authentication,omitempty"`
	Interface            []LogicalRoutersVrfInnerOspfAreaInnerInterfaceInner            `json:"interface,omitempty"`
	Name                 string                                                         `json:"name"`
	Range                []LogicalRoutersVrfInnerOspfAreaInnerRangeInner                `json:"range,omitempty"`
	Type                 *LogicalRoutersVrfInnerOspfAreaInnerType                       `json:"type,omitempty"`
	VirtualLink          []LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner          `json:"virtual_link,omitempty"`
	VrRange              []LogicalRoutersVrfInnerOspfAreaInnerTypeNssaNssaExtRangeInner `json:"vr_range,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfAreaInner LogicalRoutersVrfInnerOspfAreaInner

// NewLogicalRoutersVrfInnerOspfAreaInner instantiates a new LogicalRoutersVrfInnerOspfAreaInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfAreaInner(name string) *LogicalRoutersVrfInnerOspfAreaInner {
	this := LogicalRoutersVrfInnerOspfAreaInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerOspfAreaInnerWithDefaults instantiates a new LogicalRoutersVrfInnerOspfAreaInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfAreaInnerWithDefaults() *LogicalRoutersVrfInnerOspfAreaInner {
	this := LogicalRoutersVrfInnerOspfAreaInner{}
	return &this
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetInterface() []LogicalRoutersVrfInnerOspfAreaInnerInterfaceInner {
	if o == nil || IsNil(o.Interface) {
		var ret []LogicalRoutersVrfInnerOspfAreaInnerInterfaceInner
		return ret
	}
	return o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetInterfaceOk() ([]LogicalRoutersVrfInnerOspfAreaInnerInterfaceInner, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given []LogicalRoutersVrfInnerOspfAreaInnerInterfaceInner and assigns it to the Interface field.
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetInterface(v []LogicalRoutersVrfInnerOspfAreaInnerInterfaceInner) {
	o.Interface = v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetName(v string) {
	o.Name = v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetRange() []LogicalRoutersVrfInnerOspfAreaInnerRangeInner {
	if o == nil || IsNil(o.Range) {
		var ret []LogicalRoutersVrfInnerOspfAreaInnerRangeInner
		return ret
	}
	return o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetRangeOk() ([]LogicalRoutersVrfInnerOspfAreaInnerRangeInner, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given []LogicalRoutersVrfInnerOspfAreaInnerRangeInner and assigns it to the Range field.
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetRange(v []LogicalRoutersVrfInnerOspfAreaInnerRangeInner) {
	o.Range = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetType() LogicalRoutersVrfInnerOspfAreaInnerType {
	if o == nil || IsNil(o.Type) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetTypeOk() (*LogicalRoutersVrfInnerOspfAreaInnerType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerType and assigns it to the Type field.
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetType(v LogicalRoutersVrfInnerOspfAreaInnerType) {
	o.Type = &v
}

// GetVirtualLink returns the VirtualLink field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetVirtualLink() []LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner {
	if o == nil || IsNil(o.VirtualLink) {
		var ret []LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner
		return ret
	}
	return o.VirtualLink
}

// GetVirtualLinkOk returns a tuple with the VirtualLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetVirtualLinkOk() ([]LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner, bool) {
	if o == nil || IsNil(o.VirtualLink) {
		return nil, false
	}
	return o.VirtualLink, true
}

// HasVirtualLink returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) HasVirtualLink() bool {
	if o != nil && !IsNil(o.VirtualLink) {
		return true
	}

	return false
}

// SetVirtualLink gets a reference to the given []LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner and assigns it to the VirtualLink field.
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetVirtualLink(v []LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) {
	o.VirtualLink = v
}

// GetVrRange returns the VrRange field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetVrRange() []LogicalRoutersVrfInnerOspfAreaInnerTypeNssaNssaExtRangeInner {
	if o == nil || IsNil(o.VrRange) {
		var ret []LogicalRoutersVrfInnerOspfAreaInnerTypeNssaNssaExtRangeInner
		return ret
	}
	return o.VrRange
}

// GetVrRangeOk returns a tuple with the VrRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) GetVrRangeOk() ([]LogicalRoutersVrfInnerOspfAreaInnerTypeNssaNssaExtRangeInner, bool) {
	if o == nil || IsNil(o.VrRange) {
		return nil, false
	}
	return o.VrRange, true
}

// HasVrRange returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInner) HasVrRange() bool {
	if o != nil && !IsNil(o.VrRange) {
		return true
	}

	return false
}

// SetVrRange gets a reference to the given []LogicalRoutersVrfInnerOspfAreaInnerTypeNssaNssaExtRangeInner and assigns it to the VrRange field.
func (o *LogicalRoutersVrfInnerOspfAreaInner) SetVrRange(v []LogicalRoutersVrfInnerOspfAreaInnerTypeNssaNssaExtRangeInner) {
	o.VrRange = v
}

func (o LogicalRoutersVrfInnerOspfAreaInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfAreaInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VirtualLink) {
		toSerialize["virtual_link"] = o.VirtualLink
	}
	if !IsNil(o.VrRange) {
		toSerialize["vr_range"] = o.VrRange
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfAreaInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerOspfAreaInner := _LogicalRoutersVrfInnerOspfAreaInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfAreaInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfAreaInner(varLogicalRoutersVrfInnerOspfAreaInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "name")
		delete(additionalProperties, "range")
		delete(additionalProperties, "type")
		delete(additionalProperties, "virtual_link")
		delete(additionalProperties, "vr_range")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfAreaInner struct {
	value *LogicalRoutersVrfInnerOspfAreaInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInner) Get() *LogicalRoutersVrfInnerOspfAreaInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInner) Set(val *LogicalRoutersVrfInnerOspfAreaInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfAreaInner(val *LogicalRoutersVrfInnerOspfAreaInner) *NullableLogicalRoutersVrfInnerOspfAreaInner {
	return &NullableLogicalRoutersVrfInnerOspfAreaInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
