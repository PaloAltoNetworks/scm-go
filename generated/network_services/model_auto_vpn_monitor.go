/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the AutoVpnMonitor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoVpnMonitor{}

// AutoVpnMonitor struct for AutoVpnMonitor
type AutoVpnMonitor struct {
	// Connection type
	ConnectionType *string `json:"connection_type,omitempty"`
	// Branch firewall serial number
	DestinationDevice *string `json:"destination_device,omitempty"`
	// IKE gateway name
	IkeGatewayName *string `json:"ike_gateway_name,omitempty"`
	// IKE security association result
	IkeSaResult *string `json:"ike_sa_result,omitempty"`
	// IKE security association status
	IkeSaStatus *string `json:"ike_sa_status,omitempty"`
	// IPSec security association result
	IpsecSaResult *string `json:"ipsec_sa_result,omitempty"`
	// IPSec security association status
	IpsecSaStatus *string `json:"ipsec_sa_status,omitempty"`
	// Hub firewall interface
	LocalIntf *string `json:"local_intf,omitempty"`
	// Branch firewall interface
	PeerIntf *string `json:"peer_intf,omitempty"`
	// Hub firewall serial number
	SourceDevice *string `json:"source_device,omitempty"`
	// Timestamp
	Ts *string `json:"ts,omitempty"`
	// Hub tunnel IP address
	TunnelIp *string `json:"tunnel_ip,omitempty"`
	// Tunnel name
	TunnelName *string `json:"tunnel_name,omitempty"`
	// Tunnel result
	TunnelResult *string `json:"tunnel_result,omitempty"`
	// Tunnel status
	TunnelStatus *string `json:"tunnel_status,omitempty"`
	// VPN cluster
	VpnCluster           *string `json:"vpn_cluster,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AutoVpnMonitor AutoVpnMonitor

// NewAutoVpnMonitor instantiates a new AutoVpnMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoVpnMonitor() *AutoVpnMonitor {
	this := AutoVpnMonitor{}
	return &this
}

// NewAutoVpnMonitorWithDefaults instantiates a new AutoVpnMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoVpnMonitorWithDefaults() *AutoVpnMonitor {
	this := AutoVpnMonitor{}
	return &this
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *AutoVpnMonitor) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetDestinationDevice returns the DestinationDevice field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetDestinationDevice() string {
	if o == nil || IsNil(o.DestinationDevice) {
		var ret string
		return ret
	}
	return *o.DestinationDevice
}

// GetDestinationDeviceOk returns a tuple with the DestinationDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetDestinationDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationDevice) {
		return nil, false
	}
	return o.DestinationDevice, true
}

// HasDestinationDevice returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasDestinationDevice() bool {
	if o != nil && !IsNil(o.DestinationDevice) {
		return true
	}

	return false
}

// SetDestinationDevice gets a reference to the given string and assigns it to the DestinationDevice field.
func (o *AutoVpnMonitor) SetDestinationDevice(v string) {
	o.DestinationDevice = &v
}

// GetIkeGatewayName returns the IkeGatewayName field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetIkeGatewayName() string {
	if o == nil || IsNil(o.IkeGatewayName) {
		var ret string
		return ret
	}
	return *o.IkeGatewayName
}

// GetIkeGatewayNameOk returns a tuple with the IkeGatewayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetIkeGatewayNameOk() (*string, bool) {
	if o == nil || IsNil(o.IkeGatewayName) {
		return nil, false
	}
	return o.IkeGatewayName, true
}

// HasIkeGatewayName returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasIkeGatewayName() bool {
	if o != nil && !IsNil(o.IkeGatewayName) {
		return true
	}

	return false
}

// SetIkeGatewayName gets a reference to the given string and assigns it to the IkeGatewayName field.
func (o *AutoVpnMonitor) SetIkeGatewayName(v string) {
	o.IkeGatewayName = &v
}

// GetIkeSaResult returns the IkeSaResult field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetIkeSaResult() string {
	if o == nil || IsNil(o.IkeSaResult) {
		var ret string
		return ret
	}
	return *o.IkeSaResult
}

// GetIkeSaResultOk returns a tuple with the IkeSaResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetIkeSaResultOk() (*string, bool) {
	if o == nil || IsNil(o.IkeSaResult) {
		return nil, false
	}
	return o.IkeSaResult, true
}

// HasIkeSaResult returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasIkeSaResult() bool {
	if o != nil && !IsNil(o.IkeSaResult) {
		return true
	}

	return false
}

// SetIkeSaResult gets a reference to the given string and assigns it to the IkeSaResult field.
func (o *AutoVpnMonitor) SetIkeSaResult(v string) {
	o.IkeSaResult = &v
}

// GetIkeSaStatus returns the IkeSaStatus field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetIkeSaStatus() string {
	if o == nil || IsNil(o.IkeSaStatus) {
		var ret string
		return ret
	}
	return *o.IkeSaStatus
}

// GetIkeSaStatusOk returns a tuple with the IkeSaStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetIkeSaStatusOk() (*string, bool) {
	if o == nil || IsNil(o.IkeSaStatus) {
		return nil, false
	}
	return o.IkeSaStatus, true
}

// HasIkeSaStatus returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasIkeSaStatus() bool {
	if o != nil && !IsNil(o.IkeSaStatus) {
		return true
	}

	return false
}

// SetIkeSaStatus gets a reference to the given string and assigns it to the IkeSaStatus field.
func (o *AutoVpnMonitor) SetIkeSaStatus(v string) {
	o.IkeSaStatus = &v
}

// GetIpsecSaResult returns the IpsecSaResult field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetIpsecSaResult() string {
	if o == nil || IsNil(o.IpsecSaResult) {
		var ret string
		return ret
	}
	return *o.IpsecSaResult
}

// GetIpsecSaResultOk returns a tuple with the IpsecSaResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetIpsecSaResultOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecSaResult) {
		return nil, false
	}
	return o.IpsecSaResult, true
}

// HasIpsecSaResult returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasIpsecSaResult() bool {
	if o != nil && !IsNil(o.IpsecSaResult) {
		return true
	}

	return false
}

// SetIpsecSaResult gets a reference to the given string and assigns it to the IpsecSaResult field.
func (o *AutoVpnMonitor) SetIpsecSaResult(v string) {
	o.IpsecSaResult = &v
}

// GetIpsecSaStatus returns the IpsecSaStatus field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetIpsecSaStatus() string {
	if o == nil || IsNil(o.IpsecSaStatus) {
		var ret string
		return ret
	}
	return *o.IpsecSaStatus
}

// GetIpsecSaStatusOk returns a tuple with the IpsecSaStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetIpsecSaStatusOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecSaStatus) {
		return nil, false
	}
	return o.IpsecSaStatus, true
}

// HasIpsecSaStatus returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasIpsecSaStatus() bool {
	if o != nil && !IsNil(o.IpsecSaStatus) {
		return true
	}

	return false
}

// SetIpsecSaStatus gets a reference to the given string and assigns it to the IpsecSaStatus field.
func (o *AutoVpnMonitor) SetIpsecSaStatus(v string) {
	o.IpsecSaStatus = &v
}

// GetLocalIntf returns the LocalIntf field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetLocalIntf() string {
	if o == nil || IsNil(o.LocalIntf) {
		var ret string
		return ret
	}
	return *o.LocalIntf
}

// GetLocalIntfOk returns a tuple with the LocalIntf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetLocalIntfOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIntf) {
		return nil, false
	}
	return o.LocalIntf, true
}

// HasLocalIntf returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasLocalIntf() bool {
	if o != nil && !IsNil(o.LocalIntf) {
		return true
	}

	return false
}

// SetLocalIntf gets a reference to the given string and assigns it to the LocalIntf field.
func (o *AutoVpnMonitor) SetLocalIntf(v string) {
	o.LocalIntf = &v
}

// GetPeerIntf returns the PeerIntf field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetPeerIntf() string {
	if o == nil || IsNil(o.PeerIntf) {
		var ret string
		return ret
	}
	return *o.PeerIntf
}

// GetPeerIntfOk returns a tuple with the PeerIntf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetPeerIntfOk() (*string, bool) {
	if o == nil || IsNil(o.PeerIntf) {
		return nil, false
	}
	return o.PeerIntf, true
}

// HasPeerIntf returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasPeerIntf() bool {
	if o != nil && !IsNil(o.PeerIntf) {
		return true
	}

	return false
}

// SetPeerIntf gets a reference to the given string and assigns it to the PeerIntf field.
func (o *AutoVpnMonitor) SetPeerIntf(v string) {
	o.PeerIntf = &v
}

// GetSourceDevice returns the SourceDevice field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetSourceDevice() string {
	if o == nil || IsNil(o.SourceDevice) {
		var ret string
		return ret
	}
	return *o.SourceDevice
}

// GetSourceDeviceOk returns a tuple with the SourceDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetSourceDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.SourceDevice) {
		return nil, false
	}
	return o.SourceDevice, true
}

// HasSourceDevice returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasSourceDevice() bool {
	if o != nil && !IsNil(o.SourceDevice) {
		return true
	}

	return false
}

// SetSourceDevice gets a reference to the given string and assigns it to the SourceDevice field.
func (o *AutoVpnMonitor) SetSourceDevice(v string) {
	o.SourceDevice = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *AutoVpnMonitor) SetTs(v string) {
	o.Ts = &v
}

// GetTunnelIp returns the TunnelIp field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetTunnelIp() string {
	if o == nil || IsNil(o.TunnelIp) {
		var ret string
		return ret
	}
	return *o.TunnelIp
}

// GetTunnelIpOk returns a tuple with the TunnelIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetTunnelIpOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelIp) {
		return nil, false
	}
	return o.TunnelIp, true
}

// HasTunnelIp returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasTunnelIp() bool {
	if o != nil && !IsNil(o.TunnelIp) {
		return true
	}

	return false
}

// SetTunnelIp gets a reference to the given string and assigns it to the TunnelIp field.
func (o *AutoVpnMonitor) SetTunnelIp(v string) {
	o.TunnelIp = &v
}

// GetTunnelName returns the TunnelName field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetTunnelName() string {
	if o == nil || IsNil(o.TunnelName) {
		var ret string
		return ret
	}
	return *o.TunnelName
}

// GetTunnelNameOk returns a tuple with the TunnelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetTunnelNameOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelName) {
		return nil, false
	}
	return o.TunnelName, true
}

// HasTunnelName returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasTunnelName() bool {
	if o != nil && !IsNil(o.TunnelName) {
		return true
	}

	return false
}

// SetTunnelName gets a reference to the given string and assigns it to the TunnelName field.
func (o *AutoVpnMonitor) SetTunnelName(v string) {
	o.TunnelName = &v
}

// GetTunnelResult returns the TunnelResult field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetTunnelResult() string {
	if o == nil || IsNil(o.TunnelResult) {
		var ret string
		return ret
	}
	return *o.TunnelResult
}

// GetTunnelResultOk returns a tuple with the TunnelResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetTunnelResultOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelResult) {
		return nil, false
	}
	return o.TunnelResult, true
}

// HasTunnelResult returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasTunnelResult() bool {
	if o != nil && !IsNil(o.TunnelResult) {
		return true
	}

	return false
}

// SetTunnelResult gets a reference to the given string and assigns it to the TunnelResult field.
func (o *AutoVpnMonitor) SetTunnelResult(v string) {
	o.TunnelResult = &v
}

// GetTunnelStatus returns the TunnelStatus field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetTunnelStatus() string {
	if o == nil || IsNil(o.TunnelStatus) {
		var ret string
		return ret
	}
	return *o.TunnelStatus
}

// GetTunnelStatusOk returns a tuple with the TunnelStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetTunnelStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelStatus) {
		return nil, false
	}
	return o.TunnelStatus, true
}

// HasTunnelStatus returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasTunnelStatus() bool {
	if o != nil && !IsNil(o.TunnelStatus) {
		return true
	}

	return false
}

// SetTunnelStatus gets a reference to the given string and assigns it to the TunnelStatus field.
func (o *AutoVpnMonitor) SetTunnelStatus(v string) {
	o.TunnelStatus = &v
}

// GetVpnCluster returns the VpnCluster field value if set, zero value otherwise.
func (o *AutoVpnMonitor) GetVpnCluster() string {
	if o == nil || IsNil(o.VpnCluster) {
		var ret string
		return ret
	}
	return *o.VpnCluster
}

// GetVpnClusterOk returns a tuple with the VpnCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnMonitor) GetVpnClusterOk() (*string, bool) {
	if o == nil || IsNil(o.VpnCluster) {
		return nil, false
	}
	return o.VpnCluster, true
}

// HasVpnCluster returns a boolean if a field has been set.
func (o *AutoVpnMonitor) HasVpnCluster() bool {
	if o != nil && !IsNil(o.VpnCluster) {
		return true
	}

	return false
}

// SetVpnCluster gets a reference to the given string and assigns it to the VpnCluster field.
func (o *AutoVpnMonitor) SetVpnCluster(v string) {
	o.VpnCluster = &v
}

func (o AutoVpnMonitor) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoVpnMonitor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionType) {
		toSerialize["connection_type"] = o.ConnectionType
	}
	if !IsNil(o.DestinationDevice) {
		toSerialize["destination_device"] = o.DestinationDevice
	}
	if !IsNil(o.IkeGatewayName) {
		toSerialize["ike_gateway_name"] = o.IkeGatewayName
	}
	if !IsNil(o.IkeSaResult) {
		toSerialize["ike_sa_result"] = o.IkeSaResult
	}
	if !IsNil(o.IkeSaStatus) {
		toSerialize["ike_sa_status"] = o.IkeSaStatus
	}
	if !IsNil(o.IpsecSaResult) {
		toSerialize["ipsec_sa_result"] = o.IpsecSaResult
	}
	if !IsNil(o.IpsecSaStatus) {
		toSerialize["ipsec_sa_status"] = o.IpsecSaStatus
	}
	if !IsNil(o.LocalIntf) {
		toSerialize["local_intf"] = o.LocalIntf
	}
	if !IsNil(o.PeerIntf) {
		toSerialize["peer_intf"] = o.PeerIntf
	}
	if !IsNil(o.SourceDevice) {
		toSerialize["source_device"] = o.SourceDevice
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.TunnelIp) {
		toSerialize["tunnel_ip"] = o.TunnelIp
	}
	if !IsNil(o.TunnelName) {
		toSerialize["tunnel_name"] = o.TunnelName
	}
	if !IsNil(o.TunnelResult) {
		toSerialize["tunnel_result"] = o.TunnelResult
	}
	if !IsNil(o.TunnelStatus) {
		toSerialize["tunnel_status"] = o.TunnelStatus
	}
	if !IsNil(o.VpnCluster) {
		toSerialize["vpn_cluster"] = o.VpnCluster
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AutoVpnMonitor) UnmarshalJSON(data []byte) (err error) {
	varAutoVpnMonitor := _AutoVpnMonitor{}

	err = json.Unmarshal(data, &varAutoVpnMonitor)

	if err != nil {
		return err
	}

	*o = AutoVpnMonitor(varAutoVpnMonitor)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "connection_type")
		delete(additionalProperties, "destination_device")
		delete(additionalProperties, "ike_gateway_name")
		delete(additionalProperties, "ike_sa_result")
		delete(additionalProperties, "ike_sa_status")
		delete(additionalProperties, "ipsec_sa_result")
		delete(additionalProperties, "ipsec_sa_status")
		delete(additionalProperties, "local_intf")
		delete(additionalProperties, "peer_intf")
		delete(additionalProperties, "source_device")
		delete(additionalProperties, "ts")
		delete(additionalProperties, "tunnel_ip")
		delete(additionalProperties, "tunnel_name")
		delete(additionalProperties, "tunnel_result")
		delete(additionalProperties, "tunnel_status")
		delete(additionalProperties, "vpn_cluster")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAutoVpnMonitor struct {
	value *AutoVpnMonitor
	isSet bool
}

func (v NullableAutoVpnMonitor) Get() *AutoVpnMonitor {
	return v.value
}

func (v *NullableAutoVpnMonitor) Set(val *AutoVpnMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoVpnMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoVpnMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoVpnMonitor(val *AutoVpnMonitor) *NullableAutoVpnMonitor {
	return &NullableAutoVpnMonitor{value: val, isSet: true}
}

func (v NullableAutoVpnMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoVpnMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
