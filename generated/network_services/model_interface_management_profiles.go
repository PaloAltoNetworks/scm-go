/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the InterfaceManagementProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceManagementProfiles{}

// InterfaceManagementProfiles struct for InterfaceManagementProfiles
type InterfaceManagementProfiles struct {
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// Allow HTTP?
	Http *bool `json:"http,omitempty"`
	// Allow HTTP OCSP?
	HttpOcsp *bool `json:"http-ocsp,omitempty"`
	// Allow HTTPS?
	Https *bool `json:"https,omitempty"`
	// UUID of the resource
	Id *string `json:"id,omitempty"`
	// Name
	Name string `json:"name"`
	// Allowed IP address(es)
	PermittedIp []string `json:"permitted-ip,omitempty"`
	// Allow ping?
	Ping          *bool       `json:"ping,omitempty"`
	ResponsePages interface{} `json:"response-pages,omitempty"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	// Allow SSH?
	Ssh *bool `json:"ssh,omitempty"`
	// Allow telnet? Seriously, why would you do this?!?
	Telnet *bool `json:"telnet,omitempty"`
	// Allow User-ID?
	UseridService *bool `json:"userid-service,omitempty"`
	// Allow User-ID syslog listener (SSL)?
	UseridSyslogListenerSsl *bool `json:"userid-syslog-listener-ssl,omitempty"`
	// Allow User-ID syslog listener (UDP)?
	UseridSyslogListenerUdp *bool `json:"userid-syslog-listener-udp,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _InterfaceManagementProfiles InterfaceManagementProfiles

// NewInterfaceManagementProfiles instantiates a new InterfaceManagementProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceManagementProfiles(name string) *InterfaceManagementProfiles {
	this := InterfaceManagementProfiles{}
	this.Name = name
	return &this
}

// NewInterfaceManagementProfilesWithDefaults instantiates a new InterfaceManagementProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceManagementProfilesWithDefaults() *InterfaceManagementProfiles {
	this := InterfaceManagementProfiles{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *InterfaceManagementProfiles) SetDevice(v string) {
	o.Device = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *InterfaceManagementProfiles) SetFolder(v string) {
	o.Folder = &v
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetHttp() bool {
	if o == nil || IsNil(o.Http) {
		var ret bool
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetHttpOk() (*bool, bool) {
	if o == nil || IsNil(o.Http) {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasHttp() bool {
	if o != nil && !IsNil(o.Http) {
		return true
	}

	return false
}

// SetHttp gets a reference to the given bool and assigns it to the Http field.
func (o *InterfaceManagementProfiles) SetHttp(v bool) {
	o.Http = &v
}

// GetHttpOcsp returns the HttpOcsp field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetHttpOcsp() bool {
	if o == nil || IsNil(o.HttpOcsp) {
		var ret bool
		return ret
	}
	return *o.HttpOcsp
}

// GetHttpOcspOk returns a tuple with the HttpOcsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetHttpOcspOk() (*bool, bool) {
	if o == nil || IsNil(o.HttpOcsp) {
		return nil, false
	}
	return o.HttpOcsp, true
}

// HasHttpOcsp returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasHttpOcsp() bool {
	if o != nil && !IsNil(o.HttpOcsp) {
		return true
	}

	return false
}

// SetHttpOcsp gets a reference to the given bool and assigns it to the HttpOcsp field.
func (o *InterfaceManagementProfiles) SetHttpOcsp(v bool) {
	o.HttpOcsp = &v
}

// GetHttps returns the Https field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetHttps() bool {
	if o == nil || IsNil(o.Https) {
		var ret bool
		return ret
	}
	return *o.Https
}

// GetHttpsOk returns a tuple with the Https field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetHttpsOk() (*bool, bool) {
	if o == nil || IsNil(o.Https) {
		return nil, false
	}
	return o.Https, true
}

// HasHttps returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasHttps() bool {
	if o != nil && !IsNil(o.Https) {
		return true
	}

	return false
}

// SetHttps gets a reference to the given bool and assigns it to the Https field.
func (o *InterfaceManagementProfiles) SetHttps(v bool) {
	o.Https = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InterfaceManagementProfiles) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *InterfaceManagementProfiles) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InterfaceManagementProfiles) SetName(v string) {
	o.Name = v
}

// GetPermittedIp returns the PermittedIp field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetPermittedIp() []string {
	if o == nil || IsNil(o.PermittedIp) {
		var ret []string
		return ret
	}
	return o.PermittedIp
}

// GetPermittedIpOk returns a tuple with the PermittedIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetPermittedIpOk() ([]string, bool) {
	if o == nil || IsNil(o.PermittedIp) {
		return nil, false
	}
	return o.PermittedIp, true
}

// HasPermittedIp returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasPermittedIp() bool {
	if o != nil && !IsNil(o.PermittedIp) {
		return true
	}

	return false
}

// SetPermittedIp gets a reference to the given []string and assigns it to the PermittedIp field.
func (o *InterfaceManagementProfiles) SetPermittedIp(v []string) {
	o.PermittedIp = v
}

// GetPing returns the Ping field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetPing() bool {
	if o == nil || IsNil(o.Ping) {
		var ret bool
		return ret
	}
	return *o.Ping
}

// GetPingOk returns a tuple with the Ping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetPingOk() (*bool, bool) {
	if o == nil || IsNil(o.Ping) {
		return nil, false
	}
	return o.Ping, true
}

// HasPing returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasPing() bool {
	if o != nil && !IsNil(o.Ping) {
		return true
	}

	return false
}

// SetPing gets a reference to the given bool and assigns it to the Ping field.
func (o *InterfaceManagementProfiles) SetPing(v bool) {
	o.Ping = &v
}

// GetResponsePages returns the ResponsePages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceManagementProfiles) GetResponsePages() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ResponsePages
}

// GetResponsePagesOk returns a tuple with the ResponsePages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceManagementProfiles) GetResponsePagesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ResponsePages) {
		return nil, false
	}
	return &o.ResponsePages, true
}

// HasResponsePages returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasResponsePages() bool {
	if o != nil && !IsNil(o.ResponsePages) {
		return true
	}

	return false
}

// SetResponsePages gets a reference to the given interface{} and assigns it to the ResponsePages field.
func (o *InterfaceManagementProfiles) SetResponsePages(v interface{}) {
	o.ResponsePages = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *InterfaceManagementProfiles) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSsh returns the Ssh field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetSsh() bool {
	if o == nil || IsNil(o.Ssh) {
		var ret bool
		return ret
	}
	return *o.Ssh
}

// GetSshOk returns a tuple with the Ssh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetSshOk() (*bool, bool) {
	if o == nil || IsNil(o.Ssh) {
		return nil, false
	}
	return o.Ssh, true
}

// HasSsh returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasSsh() bool {
	if o != nil && !IsNil(o.Ssh) {
		return true
	}

	return false
}

// SetSsh gets a reference to the given bool and assigns it to the Ssh field.
func (o *InterfaceManagementProfiles) SetSsh(v bool) {
	o.Ssh = &v
}

// GetTelnet returns the Telnet field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetTelnet() bool {
	if o == nil || IsNil(o.Telnet) {
		var ret bool
		return ret
	}
	return *o.Telnet
}

// GetTelnetOk returns a tuple with the Telnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetTelnetOk() (*bool, bool) {
	if o == nil || IsNil(o.Telnet) {
		return nil, false
	}
	return o.Telnet, true
}

// HasTelnet returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasTelnet() bool {
	if o != nil && !IsNil(o.Telnet) {
		return true
	}

	return false
}

// SetTelnet gets a reference to the given bool and assigns it to the Telnet field.
func (o *InterfaceManagementProfiles) SetTelnet(v bool) {
	o.Telnet = &v
}

// GetUseridService returns the UseridService field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetUseridService() bool {
	if o == nil || IsNil(o.UseridService) {
		var ret bool
		return ret
	}
	return *o.UseridService
}

// GetUseridServiceOk returns a tuple with the UseridService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetUseridServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.UseridService) {
		return nil, false
	}
	return o.UseridService, true
}

// HasUseridService returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasUseridService() bool {
	if o != nil && !IsNil(o.UseridService) {
		return true
	}

	return false
}

// SetUseridService gets a reference to the given bool and assigns it to the UseridService field.
func (o *InterfaceManagementProfiles) SetUseridService(v bool) {
	o.UseridService = &v
}

// GetUseridSyslogListenerSsl returns the UseridSyslogListenerSsl field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetUseridSyslogListenerSsl() bool {
	if o == nil || IsNil(o.UseridSyslogListenerSsl) {
		var ret bool
		return ret
	}
	return *o.UseridSyslogListenerSsl
}

// GetUseridSyslogListenerSslOk returns a tuple with the UseridSyslogListenerSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetUseridSyslogListenerSslOk() (*bool, bool) {
	if o == nil || IsNil(o.UseridSyslogListenerSsl) {
		return nil, false
	}
	return o.UseridSyslogListenerSsl, true
}

// HasUseridSyslogListenerSsl returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasUseridSyslogListenerSsl() bool {
	if o != nil && !IsNil(o.UseridSyslogListenerSsl) {
		return true
	}

	return false
}

// SetUseridSyslogListenerSsl gets a reference to the given bool and assigns it to the UseridSyslogListenerSsl field.
func (o *InterfaceManagementProfiles) SetUseridSyslogListenerSsl(v bool) {
	o.UseridSyslogListenerSsl = &v
}

// GetUseridSyslogListenerUdp returns the UseridSyslogListenerUdp field value if set, zero value otherwise.
func (o *InterfaceManagementProfiles) GetUseridSyslogListenerUdp() bool {
	if o == nil || IsNil(o.UseridSyslogListenerUdp) {
		var ret bool
		return ret
	}
	return *o.UseridSyslogListenerUdp
}

// GetUseridSyslogListenerUdpOk returns a tuple with the UseridSyslogListenerUdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceManagementProfiles) GetUseridSyslogListenerUdpOk() (*bool, bool) {
	if o == nil || IsNil(o.UseridSyslogListenerUdp) {
		return nil, false
	}
	return o.UseridSyslogListenerUdp, true
}

// HasUseridSyslogListenerUdp returns a boolean if a field has been set.
func (o *InterfaceManagementProfiles) HasUseridSyslogListenerUdp() bool {
	if o != nil && !IsNil(o.UseridSyslogListenerUdp) {
		return true
	}

	return false
}

// SetUseridSyslogListenerUdp gets a reference to the given bool and assigns it to the UseridSyslogListenerUdp field.
func (o *InterfaceManagementProfiles) SetUseridSyslogListenerUdp(v bool) {
	o.UseridSyslogListenerUdp = &v
}

func (o InterfaceManagementProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceManagementProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.Http) {
		toSerialize["http"] = o.Http
	}
	if !IsNil(o.HttpOcsp) {
		toSerialize["http-ocsp"] = o.HttpOcsp
	}
	if !IsNil(o.Https) {
		toSerialize["https"] = o.Https
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.PermittedIp) {
		toSerialize["permitted-ip"] = o.PermittedIp
	}
	if !IsNil(o.Ping) {
		toSerialize["ping"] = o.Ping
	}
	if o.ResponsePages != nil {
		toSerialize["response-pages"] = o.ResponsePages
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.Ssh) {
		toSerialize["ssh"] = o.Ssh
	}
	if !IsNil(o.Telnet) {
		toSerialize["telnet"] = o.Telnet
	}
	if !IsNil(o.UseridService) {
		toSerialize["userid-service"] = o.UseridService
	}
	if !IsNil(o.UseridSyslogListenerSsl) {
		toSerialize["userid-syslog-listener-ssl"] = o.UseridSyslogListenerSsl
	}
	if !IsNil(o.UseridSyslogListenerUdp) {
		toSerialize["userid-syslog-listener-udp"] = o.UseridSyslogListenerUdp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InterfaceManagementProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInterfaceManagementProfiles := _InterfaceManagementProfiles{}

	err = json.Unmarshal(data, &varInterfaceManagementProfiles)

	if err != nil {
		return err
	}

	*o = InterfaceManagementProfiles(varInterfaceManagementProfiles)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "http")
		delete(additionalProperties, "http-ocsp")
		delete(additionalProperties, "https")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "permitted-ip")
		delete(additionalProperties, "ping")
		delete(additionalProperties, "response-pages")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "ssh")
		delete(additionalProperties, "telnet")
		delete(additionalProperties, "userid-service")
		delete(additionalProperties, "userid-syslog-listener-ssl")
		delete(additionalProperties, "userid-syslog-listener-udp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInterfaceManagementProfiles struct {
	value *InterfaceManagementProfiles
	isSet bool
}

func (v NullableInterfaceManagementProfiles) Get() *InterfaceManagementProfiles {
	return v.value
}

func (v *NullableInterfaceManagementProfiles) Set(val *InterfaceManagementProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceManagementProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceManagementProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceManagementProfiles(val *InterfaceManagementProfiles) *NullableInterfaceManagementProfiles {
	return &NullableInterfaceManagementProfiles{value: val, isSet: true}
}

func (v NullableInterfaceManagementProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceManagementProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
