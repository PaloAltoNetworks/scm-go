/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the QosProfilesClassBandwidthType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosProfilesClassBandwidthType{}

// QosProfilesClassBandwidthType struct for QosProfilesClassBandwidthType
type QosProfilesClassBandwidthType struct {
	Mbps                 *QosProfilesClassBandwidthTypeMbps       `json:"mbps,omitempty"`
	Percentage           *QosProfilesClassBandwidthTypePercentage `json:"percentage,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QosProfilesClassBandwidthType QosProfilesClassBandwidthType

// NewQosProfilesClassBandwidthType instantiates a new QosProfilesClassBandwidthType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosProfilesClassBandwidthType() *QosProfilesClassBandwidthType {
	this := QosProfilesClassBandwidthType{}
	return &this
}

// NewQosProfilesClassBandwidthTypeWithDefaults instantiates a new QosProfilesClassBandwidthType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosProfilesClassBandwidthTypeWithDefaults() *QosProfilesClassBandwidthType {
	this := QosProfilesClassBandwidthType{}
	return &this
}

// GetMbps returns the Mbps field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthType) GetMbps() QosProfilesClassBandwidthTypeMbps {
	if o == nil || IsNil(o.Mbps) {
		var ret QosProfilesClassBandwidthTypeMbps
		return ret
	}
	return *o.Mbps
}

// GetMbpsOk returns a tuple with the Mbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthType) GetMbpsOk() (*QosProfilesClassBandwidthTypeMbps, bool) {
	if o == nil || IsNil(o.Mbps) {
		return nil, false
	}
	return o.Mbps, true
}

// HasMbps returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthType) HasMbps() bool {
	if o != nil && !IsNil(o.Mbps) {
		return true
	}

	return false
}

// SetMbps gets a reference to the given QosProfilesClassBandwidthTypeMbps and assigns it to the Mbps field.
func (o *QosProfilesClassBandwidthType) SetMbps(v QosProfilesClassBandwidthTypeMbps) {
	o.Mbps = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthType) GetPercentage() QosProfilesClassBandwidthTypePercentage {
	if o == nil || IsNil(o.Percentage) {
		var ret QosProfilesClassBandwidthTypePercentage
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthType) GetPercentageOk() (*QosProfilesClassBandwidthTypePercentage, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthType) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given QosProfilesClassBandwidthTypePercentage and assigns it to the Percentage field.
func (o *QosProfilesClassBandwidthType) SetPercentage(v QosProfilesClassBandwidthTypePercentage) {
	o.Percentage = &v
}

func (o QosProfilesClassBandwidthType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosProfilesClassBandwidthType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mbps) {
		toSerialize["mbps"] = o.Mbps
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QosProfilesClassBandwidthType) UnmarshalJSON(data []byte) (err error) {
	varQosProfilesClassBandwidthType := _QosProfilesClassBandwidthType{}

	err = json.Unmarshal(data, &varQosProfilesClassBandwidthType)

	if err != nil {
		return err
	}

	*o = QosProfilesClassBandwidthType(varQosProfilesClassBandwidthType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mbps")
		delete(additionalProperties, "percentage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQosProfilesClassBandwidthType struct {
	value *QosProfilesClassBandwidthType
	isSet bool
}

func (v NullableQosProfilesClassBandwidthType) Get() *QosProfilesClassBandwidthType {
	return v.value
}

func (v *NullableQosProfilesClassBandwidthType) Set(val *QosProfilesClassBandwidthType) {
	v.value = val
	v.isSet = true
}

func (v NullableQosProfilesClassBandwidthType) IsSet() bool {
	return v.isSet
}

func (v *NullableQosProfilesClassBandwidthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosProfilesClassBandwidthType(val *QosProfilesClassBandwidthType) *NullableQosProfilesClassBandwidthType {
	return &NullableQosProfilesClassBandwidthType{value: val, isSet: true}
}

func (v NullableQosProfilesClassBandwidthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosProfilesClassBandwidthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
