/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerRoutingTableIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRoutingTableIp{}

// LogicalRoutersVrfInnerRoutingTableIp struct for LogicalRoutersVrfInnerRoutingTableIp
type LogicalRoutersVrfInnerRoutingTableIp struct {
	StaticRoute          []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInner `json:"static_route,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRoutingTableIp LogicalRoutersVrfInnerRoutingTableIp

// NewLogicalRoutersVrfInnerRoutingTableIp instantiates a new LogicalRoutersVrfInnerRoutingTableIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRoutingTableIp() *LogicalRoutersVrfInnerRoutingTableIp {
	this := LogicalRoutersVrfInnerRoutingTableIp{}
	return &this
}

// NewLogicalRoutersVrfInnerRoutingTableIpWithDefaults instantiates a new LogicalRoutersVrfInnerRoutingTableIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRoutingTableIpWithDefaults() *LogicalRoutersVrfInnerRoutingTableIp {
	this := LogicalRoutersVrfInnerRoutingTableIp{}
	return &this
}

// GetStaticRoute returns the StaticRoute field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIp) GetStaticRoute() []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInner {
	if o == nil || IsNil(o.StaticRoute) {
		var ret []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInner
		return ret
	}
	return o.StaticRoute
}

// GetStaticRouteOk returns a tuple with the StaticRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIp) GetStaticRouteOk() ([]LogicalRoutersVrfInnerRoutingTableIpStaticRouteInner, bool) {
	if o == nil || IsNil(o.StaticRoute) {
		return nil, false
	}
	return o.StaticRoute, true
}

// HasStaticRoute returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIp) HasStaticRoute() bool {
	if o != nil && !IsNil(o.StaticRoute) {
		return true
	}

	return false
}

// SetStaticRoute gets a reference to the given []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInner and assigns it to the StaticRoute field.
func (o *LogicalRoutersVrfInnerRoutingTableIp) SetStaticRoute(v []LogicalRoutersVrfInnerRoutingTableIpStaticRouteInner) {
	o.StaticRoute = v
}

func (o LogicalRoutersVrfInnerRoutingTableIp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRoutingTableIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StaticRoute) {
		toSerialize["static_route"] = o.StaticRoute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRoutingTableIp) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerRoutingTableIp := _LogicalRoutersVrfInnerRoutingTableIp{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRoutingTableIp)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRoutingTableIp(varLogicalRoutersVrfInnerRoutingTableIp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "static_route")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRoutingTableIp struct {
	value *LogicalRoutersVrfInnerRoutingTableIp
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIp) Get() *LogicalRoutersVrfInnerRoutingTableIp {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIp) Set(val *LogicalRoutersVrfInnerRoutingTableIp) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIp) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRoutingTableIp(val *LogicalRoutersVrfInnerRoutingTableIp) *NullableLogicalRoutersVrfInnerRoutingTableIp {
	return &NullableLogicalRoutersVrfInnerRoutingTableIp{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
