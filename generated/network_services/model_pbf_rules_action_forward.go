/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the PbfRulesActionForward type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PbfRulesActionForward{}

// PbfRulesActionForward struct for PbfRulesActionForward
type PbfRulesActionForward struct {
	// Egress interface
	EgressInterface      *string                       `json:"egress_interface,omitempty"`
	Monitor              *PbfRulesActionForwardMonitor `json:"monitor,omitempty"`
	Nexthop              *PbfRulesActionForwardNexthop `json:"nexthop,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PbfRulesActionForward PbfRulesActionForward

// NewPbfRulesActionForward instantiates a new PbfRulesActionForward object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPbfRulesActionForward() *PbfRulesActionForward {
	this := PbfRulesActionForward{}
	return &this
}

// NewPbfRulesActionForwardWithDefaults instantiates a new PbfRulesActionForward object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPbfRulesActionForwardWithDefaults() *PbfRulesActionForward {
	this := PbfRulesActionForward{}
	return &this
}

// GetEgressInterface returns the EgressInterface field value if set, zero value otherwise.
func (o *PbfRulesActionForward) GetEgressInterface() string {
	if o == nil || IsNil(o.EgressInterface) {
		var ret string
		return ret
	}
	return *o.EgressInterface
}

// GetEgressInterfaceOk returns a tuple with the EgressInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesActionForward) GetEgressInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.EgressInterface) {
		return nil, false
	}
	return o.EgressInterface, true
}

// HasEgressInterface returns a boolean if a field has been set.
func (o *PbfRulesActionForward) HasEgressInterface() bool {
	if o != nil && !IsNil(o.EgressInterface) {
		return true
	}

	return false
}

// SetEgressInterface gets a reference to the given string and assigns it to the EgressInterface field.
func (o *PbfRulesActionForward) SetEgressInterface(v string) {
	o.EgressInterface = &v
}

// GetMonitor returns the Monitor field value if set, zero value otherwise.
func (o *PbfRulesActionForward) GetMonitor() PbfRulesActionForwardMonitor {
	if o == nil || IsNil(o.Monitor) {
		var ret PbfRulesActionForwardMonitor
		return ret
	}
	return *o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesActionForward) GetMonitorOk() (*PbfRulesActionForwardMonitor, bool) {
	if o == nil || IsNil(o.Monitor) {
		return nil, false
	}
	return o.Monitor, true
}

// HasMonitor returns a boolean if a field has been set.
func (o *PbfRulesActionForward) HasMonitor() bool {
	if o != nil && !IsNil(o.Monitor) {
		return true
	}

	return false
}

// SetMonitor gets a reference to the given PbfRulesActionForwardMonitor and assigns it to the Monitor field.
func (o *PbfRulesActionForward) SetMonitor(v PbfRulesActionForwardMonitor) {
	o.Monitor = &v
}

// GetNexthop returns the Nexthop field value if set, zero value otherwise.
func (o *PbfRulesActionForward) GetNexthop() PbfRulesActionForwardNexthop {
	if o == nil || IsNil(o.Nexthop) {
		var ret PbfRulesActionForwardNexthop
		return ret
	}
	return *o.Nexthop
}

// GetNexthopOk returns a tuple with the Nexthop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesActionForward) GetNexthopOk() (*PbfRulesActionForwardNexthop, bool) {
	if o == nil || IsNil(o.Nexthop) {
		return nil, false
	}
	return o.Nexthop, true
}

// HasNexthop returns a boolean if a field has been set.
func (o *PbfRulesActionForward) HasNexthop() bool {
	if o != nil && !IsNil(o.Nexthop) {
		return true
	}

	return false
}

// SetNexthop gets a reference to the given PbfRulesActionForwardNexthop and assigns it to the Nexthop field.
func (o *PbfRulesActionForward) SetNexthop(v PbfRulesActionForwardNexthop) {
	o.Nexthop = &v
}

func (o PbfRulesActionForward) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PbfRulesActionForward) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EgressInterface) {
		toSerialize["egress_interface"] = o.EgressInterface
	}
	if !IsNil(o.Monitor) {
		toSerialize["monitor"] = o.Monitor
	}
	if !IsNil(o.Nexthop) {
		toSerialize["nexthop"] = o.Nexthop
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PbfRulesActionForward) UnmarshalJSON(data []byte) (err error) {
	varPbfRulesActionForward := _PbfRulesActionForward{}

	err = json.Unmarshal(data, &varPbfRulesActionForward)

	if err != nil {
		return err
	}

	*o = PbfRulesActionForward(varPbfRulesActionForward)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "egress_interface")
		delete(additionalProperties, "monitor")
		delete(additionalProperties, "nexthop")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePbfRulesActionForward struct {
	value *PbfRulesActionForward
	isSet bool
}

func (v NullablePbfRulesActionForward) Get() *PbfRulesActionForward {
	return v.value
}

func (v *NullablePbfRulesActionForward) Set(val *PbfRulesActionForward) {
	v.value = val
	v.isSet = true
}

func (v NullablePbfRulesActionForward) IsSet() bool {
	return v.isSet
}

func (v *NullablePbfRulesActionForward) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePbfRulesActionForward(val *PbfRulesActionForward) *NullablePbfRulesActionForward {
	return &NullablePbfRulesActionForward{value: val, isSet: true}
}

func (v NullablePbfRulesActionForward) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePbfRulesActionForward) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
