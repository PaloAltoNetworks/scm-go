/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner{}

// LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner struct for LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner
type LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner struct {
	AdminDist            *float32                                                         `json:"admin_dist,omitempty"`
	Bfd                  *LogicalRoutersVrfInnerBgpGlobalBfd                              `json:"bfd,omitempty"`
	Destination          *string                                                          `json:"destination,omitempty"`
	Interface            *string                                                          `json:"interface,omitempty"`
	Metric               *float32                                                         `json:"metric,omitempty"`
	Name                 string                                                           `json:"name"`
	Nexthop              *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop     `json:"nexthop,omitempty"`
	Option               *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption    `json:"option,omitempty"`
	PathMonitor          *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor `json:"path_monitor,omitempty"`
	RouteTable           *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerRouteTable  `json:"route_table,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner

// NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner instantiates a new LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner(name string) *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner {
	this := LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerWithDefaults instantiates a new LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerWithDefaults() *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner {
	this := LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner{}
	return &this
}

// GetAdminDist returns the AdminDist field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetAdminDist() float32 {
	if o == nil || IsNil(o.AdminDist) {
		var ret float32
		return ret
	}
	return *o.AdminDist
}

// GetAdminDistOk returns a tuple with the AdminDist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetAdminDistOk() (*float32, bool) {
	if o == nil || IsNil(o.AdminDist) {
		return nil, false
	}
	return o.AdminDist, true
}

// HasAdminDist returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasAdminDist() bool {
	if o != nil && !IsNil(o.AdminDist) {
		return true
	}

	return false
}

// SetAdminDist gets a reference to the given float32 and assigns it to the AdminDist field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetAdminDist(v float32) {
	o.AdminDist = &v
}

// GetBfd returns the Bfd field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetBfd() LogicalRoutersVrfInnerBgpGlobalBfd {
	if o == nil || IsNil(o.Bfd) {
		var ret LogicalRoutersVrfInnerBgpGlobalBfd
		return ret
	}
	return *o.Bfd
}

// GetBfdOk returns a tuple with the Bfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetBfdOk() (*LogicalRoutersVrfInnerBgpGlobalBfd, bool) {
	if o == nil || IsNil(o.Bfd) {
		return nil, false
	}
	return o.Bfd, true
}

// HasBfd returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasBfd() bool {
	if o != nil && !IsNil(o.Bfd) {
		return true
	}

	return false
}

// SetBfd gets a reference to the given LogicalRoutersVrfInnerBgpGlobalBfd and assigns it to the Bfd field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetBfd(v LogicalRoutersVrfInnerBgpGlobalBfd) {
	o.Bfd = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetDestination(v string) {
	o.Destination = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetInterface(v string) {
	o.Interface = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetMetric() float32 {
	if o == nil || IsNil(o.Metric) {
		var ret float32
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetMetricOk() (*float32, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given float32 and assigns it to the Metric field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetMetric(v float32) {
	o.Metric = &v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetName(v string) {
	o.Name = v
}

// GetNexthop returns the Nexthop field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetNexthop() LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop {
	if o == nil || IsNil(o.Nexthop) {
		var ret LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop
		return ret
	}
	return *o.Nexthop
}

// GetNexthopOk returns a tuple with the Nexthop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetNexthopOk() (*LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop, bool) {
	if o == nil || IsNil(o.Nexthop) {
		return nil, false
	}
	return o.Nexthop, true
}

// HasNexthop returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasNexthop() bool {
	if o != nil && !IsNil(o.Nexthop) {
		return true
	}

	return false
}

// SetNexthop gets a reference to the given LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop and assigns it to the Nexthop field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetNexthop(v LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) {
	o.Nexthop = &v
}

// GetOption returns the Option field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetOption() LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption {
	if o == nil || IsNil(o.Option) {
		var ret LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption
		return ret
	}
	return *o.Option
}

// GetOptionOk returns a tuple with the Option field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetOptionOk() (*LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption, bool) {
	if o == nil || IsNil(o.Option) {
		return nil, false
	}
	return o.Option, true
}

// HasOption returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasOption() bool {
	if o != nil && !IsNil(o.Option) {
		return true
	}

	return false
}

// SetOption gets a reference to the given LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption and assigns it to the Option field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetOption(v LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInnerOption) {
	o.Option = &v
}

// GetPathMonitor returns the PathMonitor field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetPathMonitor() LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor {
	if o == nil || IsNil(o.PathMonitor) {
		var ret LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor
		return ret
	}
	return *o.PathMonitor
}

// GetPathMonitorOk returns a tuple with the PathMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetPathMonitorOk() (*LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor, bool) {
	if o == nil || IsNil(o.PathMonitor) {
		return nil, false
	}
	return o.PathMonitor, true
}

// HasPathMonitor returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasPathMonitor() bool {
	if o != nil && !IsNil(o.PathMonitor) {
		return true
	}

	return false
}

// SetPathMonitor gets a reference to the given LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor and assigns it to the PathMonitor field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetPathMonitor(v LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerPathMonitor) {
	o.PathMonitor = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetRouteTable() LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerRouteTable {
	if o == nil || IsNil(o.RouteTable) {
		var ret LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerRouteTable
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) GetRouteTableOk() (*LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerRouteTable, bool) {
	if o == nil || IsNil(o.RouteTable) {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) HasRouteTable() bool {
	if o != nil && !IsNil(o.RouteTable) {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerRouteTable and assigns it to the RouteTable field.
func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) SetRouteTable(v LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerRouteTable) {
	o.RouteTable = &v
}

func (o LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminDist) {
		toSerialize["admin_dist"] = o.AdminDist
	}
	if !IsNil(o.Bfd) {
		toSerialize["bfd"] = o.Bfd
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Nexthop) {
		toSerialize["nexthop"] = o.Nexthop
	}
	if !IsNil(o.Option) {
		toSerialize["option"] = o.Option
	}
	if !IsNil(o.PathMonitor) {
		toSerialize["path_monitor"] = o.PathMonitor
	}
	if !IsNil(o.RouteTable) {
		toSerialize["route_table"] = o.RouteTable
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner := _LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner(varLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "admin_dist")
		delete(additionalProperties, "bfd")
		delete(additionalProperties, "destination")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "metric")
		delete(additionalProperties, "name")
		delete(additionalProperties, "nexthop")
		delete(additionalProperties, "option")
		delete(additionalProperties, "path_monitor")
		delete(additionalProperties, "route_table")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner struct {
	value *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) Get() *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) Set(val *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner(val *LogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner {
	return &NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpv6StaticRouteInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
