/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastPimRpExternalRpInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastPimRpExternalRpInner{}

// LogicalRoutersVrfInnerMulticastPimRpExternalRpInner struct for LogicalRoutersVrfInnerMulticastPimRpExternalRpInner
type LogicalRoutersVrfInnerMulticastPimRpExternalRpInner struct {
	GroupList            *string `json:"group_list,omitempty"`
	Name                 *string `json:"name,omitempty"`
	Override             *bool   `json:"override,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastPimRpExternalRpInner LogicalRoutersVrfInnerMulticastPimRpExternalRpInner

// NewLogicalRoutersVrfInnerMulticastPimRpExternalRpInner instantiates a new LogicalRoutersVrfInnerMulticastPimRpExternalRpInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastPimRpExternalRpInner() *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner {
	this := LogicalRoutersVrfInnerMulticastPimRpExternalRpInner{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastPimRpExternalRpInnerWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastPimRpExternalRpInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastPimRpExternalRpInnerWithDefaults() *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner {
	this := LogicalRoutersVrfInnerMulticastPimRpExternalRpInner{}
	return &this
}

// GetGroupList returns the GroupList field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) GetGroupList() string {
	if o == nil || IsNil(o.GroupList) {
		var ret string
		return ret
	}
	return *o.GroupList
}

// GetGroupListOk returns a tuple with the GroupList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) GetGroupListOk() (*string, bool) {
	if o == nil || IsNil(o.GroupList) {
		return nil, false
	}
	return o.GroupList, true
}

// HasGroupList returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) HasGroupList() bool {
	if o != nil && !IsNil(o.GroupList) {
		return true
	}

	return false
}

// SetGroupList gets a reference to the given string and assigns it to the GroupList field.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) SetGroupList(v string) {
	o.GroupList = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) SetName(v string) {
	o.Name = &v
}

// GetOverride returns the Override field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) GetOverride() bool {
	if o == nil || IsNil(o.Override) {
		var ret bool
		return ret
	}
	return *o.Override
}

// GetOverrideOk returns a tuple with the Override field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) GetOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.Override) {
		return nil, false
	}
	return o.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) HasOverride() bool {
	if o != nil && !IsNil(o.Override) {
		return true
	}

	return false
}

// SetOverride gets a reference to the given bool and assigns it to the Override field.
func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) SetOverride(v bool) {
	o.Override = &v
}

func (o LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupList) {
		toSerialize["group_list"] = o.GroupList
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Override) {
		toSerialize["override"] = o.Override
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastPimRpExternalRpInner := _LogicalRoutersVrfInnerMulticastPimRpExternalRpInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastPimRpExternalRpInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastPimRpExternalRpInner(varLogicalRoutersVrfInnerMulticastPimRpExternalRpInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "group_list")
		delete(additionalProperties, "name")
		delete(additionalProperties, "override")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner struct {
	value *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner) Get() *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner) Set(val *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner(val *LogicalRoutersVrfInnerMulticastPimRpExternalRpInner) *NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner {
	return &NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastPimRpExternalRpInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
