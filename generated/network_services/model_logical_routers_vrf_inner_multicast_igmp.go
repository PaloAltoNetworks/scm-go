/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastIgmp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastIgmp{}

// LogicalRoutersVrfInnerMulticastIgmp struct for LogicalRoutersVrfInnerMulticastIgmp
type LogicalRoutersVrfInnerMulticastIgmp struct {
	Dynamic              *LogicalRoutersVrfInnerMulticastIgmpDynamic      `json:"dynamic,omitempty"`
	Enable               *bool                                            `json:"enable,omitempty"`
	Static               []LogicalRoutersVrfInnerMulticastIgmpStaticInner `json:"static,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastIgmp LogicalRoutersVrfInnerMulticastIgmp

// NewLogicalRoutersVrfInnerMulticastIgmp instantiates a new LogicalRoutersVrfInnerMulticastIgmp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastIgmp() *LogicalRoutersVrfInnerMulticastIgmp {
	this := LogicalRoutersVrfInnerMulticastIgmp{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastIgmpWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastIgmp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastIgmpWithDefaults() *LogicalRoutersVrfInnerMulticastIgmp {
	this := LogicalRoutersVrfInnerMulticastIgmp{}
	return &this
}

// GetDynamic returns the Dynamic field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastIgmp) GetDynamic() LogicalRoutersVrfInnerMulticastIgmpDynamic {
	if o == nil || IsNil(o.Dynamic) {
		var ret LogicalRoutersVrfInnerMulticastIgmpDynamic
		return ret
	}
	return *o.Dynamic
}

// GetDynamicOk returns a tuple with the Dynamic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmp) GetDynamicOk() (*LogicalRoutersVrfInnerMulticastIgmpDynamic, bool) {
	if o == nil || IsNil(o.Dynamic) {
		return nil, false
	}
	return o.Dynamic, true
}

// HasDynamic returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmp) HasDynamic() bool {
	if o != nil && !IsNil(o.Dynamic) {
		return true
	}

	return false
}

// SetDynamic gets a reference to the given LogicalRoutersVrfInnerMulticastIgmpDynamic and assigns it to the Dynamic field.
func (o *LogicalRoutersVrfInnerMulticastIgmp) SetDynamic(v LogicalRoutersVrfInnerMulticastIgmpDynamic) {
	o.Dynamic = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastIgmp) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmp) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmp) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerMulticastIgmp) SetEnable(v bool) {
	o.Enable = &v
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastIgmp) GetStatic() []LogicalRoutersVrfInnerMulticastIgmpStaticInner {
	if o == nil || IsNil(o.Static) {
		var ret []LogicalRoutersVrfInnerMulticastIgmpStaticInner
		return ret
	}
	return o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmp) GetStaticOk() ([]LogicalRoutersVrfInnerMulticastIgmpStaticInner, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmp) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given []LogicalRoutersVrfInnerMulticastIgmpStaticInner and assigns it to the Static field.
func (o *LogicalRoutersVrfInnerMulticastIgmp) SetStatic(v []LogicalRoutersVrfInnerMulticastIgmpStaticInner) {
	o.Static = v
}

func (o LogicalRoutersVrfInnerMulticastIgmp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastIgmp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dynamic) {
		toSerialize["dynamic"] = o.Dynamic
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastIgmp) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastIgmp := _LogicalRoutersVrfInnerMulticastIgmp{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastIgmp)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastIgmp(varLogicalRoutersVrfInnerMulticastIgmp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dynamic")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "static")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastIgmp struct {
	value *LogicalRoutersVrfInnerMulticastIgmp
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastIgmp) Get() *LogicalRoutersVrfInnerMulticastIgmp {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastIgmp) Set(val *LogicalRoutersVrfInnerMulticastIgmp) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastIgmp) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastIgmp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastIgmp(val *LogicalRoutersVrfInnerMulticastIgmp) *NullableLogicalRoutersVrfInnerMulticastIgmp {
	return &NullableLogicalRoutersVrfInnerMulticastIgmp{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastIgmp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastIgmp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
