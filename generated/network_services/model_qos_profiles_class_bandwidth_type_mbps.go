/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the QosProfilesClassBandwidthTypeMbps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosProfilesClassBandwidthTypeMbps{}

// QosProfilesClassBandwidthTypeMbps struct for QosProfilesClassBandwidthTypeMbps
type QosProfilesClassBandwidthTypeMbps struct {
	// QoS setting for traffic classes
	Class                []QosProfilesClassBandwidthTypeMbpsClassInner `json:"class,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QosProfilesClassBandwidthTypeMbps QosProfilesClassBandwidthTypeMbps

// NewQosProfilesClassBandwidthTypeMbps instantiates a new QosProfilesClassBandwidthTypeMbps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosProfilesClassBandwidthTypeMbps() *QosProfilesClassBandwidthTypeMbps {
	this := QosProfilesClassBandwidthTypeMbps{}
	return &this
}

// NewQosProfilesClassBandwidthTypeMbpsWithDefaults instantiates a new QosProfilesClassBandwidthTypeMbps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosProfilesClassBandwidthTypeMbpsWithDefaults() *QosProfilesClassBandwidthTypeMbps {
	this := QosProfilesClassBandwidthTypeMbps{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypeMbps) GetClass() []QosProfilesClassBandwidthTypeMbpsClassInner {
	if o == nil || IsNil(o.Class) {
		var ret []QosProfilesClassBandwidthTypeMbpsClassInner
		return ret
	}
	return o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypeMbps) GetClassOk() ([]QosProfilesClassBandwidthTypeMbpsClassInner, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypeMbps) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given []QosProfilesClassBandwidthTypeMbpsClassInner and assigns it to the Class field.
func (o *QosProfilesClassBandwidthTypeMbps) SetClass(v []QosProfilesClassBandwidthTypeMbpsClassInner) {
	o.Class = v
}

func (o QosProfilesClassBandwidthTypeMbps) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosProfilesClassBandwidthTypeMbps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QosProfilesClassBandwidthTypeMbps) UnmarshalJSON(data []byte) (err error) {
	varQosProfilesClassBandwidthTypeMbps := _QosProfilesClassBandwidthTypeMbps{}

	err = json.Unmarshal(data, &varQosProfilesClassBandwidthTypeMbps)

	if err != nil {
		return err
	}

	*o = QosProfilesClassBandwidthTypeMbps(varQosProfilesClassBandwidthTypeMbps)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "class")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQosProfilesClassBandwidthTypeMbps struct {
	value *QosProfilesClassBandwidthTypeMbps
	isSet bool
}

func (v NullableQosProfilesClassBandwidthTypeMbps) Get() *QosProfilesClassBandwidthTypeMbps {
	return v.value
}

func (v *NullableQosProfilesClassBandwidthTypeMbps) Set(val *QosProfilesClassBandwidthTypeMbps) {
	v.value = val
	v.isSet = true
}

func (v NullableQosProfilesClassBandwidthTypeMbps) IsSet() bool {
	return v.isSet
}

func (v *NullableQosProfilesClassBandwidthTypeMbps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosProfilesClassBandwidthTypeMbps(val *QosProfilesClassBandwidthTypeMbps) *NullableQosProfilesClassBandwidthTypeMbps {
	return &NullableQosProfilesClassBandwidthTypeMbps{value: val, isSet: true}
}

func (v NullableQosProfilesClassBandwidthTypeMbps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosProfilesClassBandwidthTypeMbps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
