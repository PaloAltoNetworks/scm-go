/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner{}

// LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner struct for LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner
type LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner struct {
	Authentication       *string                                                      `json:"authentication,omitempty"`
	Bfd                  *LogicalRoutersVrfInnerBgpGlobalBfd                          `json:"bfd,omitempty"`
	Enable               *bool                                                        `json:"enable,omitempty"`
	InstanceId           *float32                                                     `json:"instance_id,omitempty"`
	InterfaceId          *float32                                                     `json:"interface_id,omitempty"`
	Name                 string                                                       `json:"name"`
	NeighborId           *string                                                      `json:"neighbor_id,omitempty"`
	Passive              *bool                                                        `json:"passive,omitempty"`
	Timing               *string                                                      `json:"timing,omitempty"`
	TransitAreaId        *string                                                      `json:"transit_area_id,omitempty"`
	VrTiming             *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming `json:"vr_timing,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner

// NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner instantiates a new LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner(name string) *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner {
	this := LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerWithDefaults instantiates a new LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerWithDefaults() *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner {
	this := LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner{}
	return &this
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetBfd returns the Bfd field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetBfd() LogicalRoutersVrfInnerBgpGlobalBfd {
	if o == nil || IsNil(o.Bfd) {
		var ret LogicalRoutersVrfInnerBgpGlobalBfd
		return ret
	}
	return *o.Bfd
}

// GetBfdOk returns a tuple with the Bfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetBfdOk() (*LogicalRoutersVrfInnerBgpGlobalBfd, bool) {
	if o == nil || IsNil(o.Bfd) {
		return nil, false
	}
	return o.Bfd, true
}

// HasBfd returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasBfd() bool {
	if o != nil && !IsNil(o.Bfd) {
		return true
	}

	return false
}

// SetBfd gets a reference to the given LogicalRoutersVrfInnerBgpGlobalBfd and assigns it to the Bfd field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetBfd(v LogicalRoutersVrfInnerBgpGlobalBfd) {
	o.Bfd = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetInstanceId() float32 {
	if o == nil || IsNil(o.InstanceId) {
		var ret float32
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetInstanceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given float32 and assigns it to the InstanceId field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetInstanceId(v float32) {
	o.InstanceId = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetInterfaceId() float32 {
	if o == nil || IsNil(o.InterfaceId) {
		var ret float32
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetInterfaceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given float32 and assigns it to the InterfaceId field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetInterfaceId(v float32) {
	o.InterfaceId = &v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetName(v string) {
	o.Name = v
}

// GetNeighborId returns the NeighborId field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetNeighborId() string {
	if o == nil || IsNil(o.NeighborId) {
		var ret string
		return ret
	}
	return *o.NeighborId
}

// GetNeighborIdOk returns a tuple with the NeighborId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetNeighborIdOk() (*string, bool) {
	if o == nil || IsNil(o.NeighborId) {
		return nil, false
	}
	return o.NeighborId, true
}

// HasNeighborId returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasNeighborId() bool {
	if o != nil && !IsNil(o.NeighborId) {
		return true
	}

	return false
}

// SetNeighborId gets a reference to the given string and assigns it to the NeighborId field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetNeighborId(v string) {
	o.NeighborId = &v
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetPassive() bool {
	if o == nil || IsNil(o.Passive) {
		var ret bool
		return ret
	}
	return *o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Passive) {
		return nil, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given bool and assigns it to the Passive field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetPassive(v bool) {
	o.Passive = &v
}

// GetTiming returns the Timing field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetTiming() string {
	if o == nil || IsNil(o.Timing) {
		var ret string
		return ret
	}
	return *o.Timing
}

// GetTimingOk returns a tuple with the Timing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetTimingOk() (*string, bool) {
	if o == nil || IsNil(o.Timing) {
		return nil, false
	}
	return o.Timing, true
}

// HasTiming returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasTiming() bool {
	if o != nil && !IsNil(o.Timing) {
		return true
	}

	return false
}

// SetTiming gets a reference to the given string and assigns it to the Timing field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetTiming(v string) {
	o.Timing = &v
}

// GetTransitAreaId returns the TransitAreaId field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetTransitAreaId() string {
	if o == nil || IsNil(o.TransitAreaId) {
		var ret string
		return ret
	}
	return *o.TransitAreaId
}

// GetTransitAreaIdOk returns a tuple with the TransitAreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetTransitAreaIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransitAreaId) {
		return nil, false
	}
	return o.TransitAreaId, true
}

// HasTransitAreaId returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasTransitAreaId() bool {
	if o != nil && !IsNil(o.TransitAreaId) {
		return true
	}

	return false
}

// SetTransitAreaId gets a reference to the given string and assigns it to the TransitAreaId field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetTransitAreaId(v string) {
	o.TransitAreaId = &v
}

// GetVrTiming returns the VrTiming field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetVrTiming() LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming {
	if o == nil || IsNil(o.VrTiming) {
		var ret LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming
		return ret
	}
	return *o.VrTiming
}

// GetVrTimingOk returns a tuple with the VrTiming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) GetVrTimingOk() (*LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming, bool) {
	if o == nil || IsNil(o.VrTiming) {
		return nil, false
	}
	return o.VrTiming, true
}

// HasVrTiming returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) HasVrTiming() bool {
	if o != nil && !IsNil(o.VrTiming) {
		return true
	}

	return false
}

// SetVrTiming gets a reference to the given LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming and assigns it to the VrTiming field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) SetVrTiming(v LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) {
	o.VrTiming = &v
}

func (o LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.Bfd) {
		toSerialize["bfd"] = o.Bfd
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instance_id"] = o.InstanceId
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interface_id"] = o.InterfaceId
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NeighborId) {
		toSerialize["neighbor_id"] = o.NeighborId
	}
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}
	if !IsNil(o.Timing) {
		toSerialize["timing"] = o.Timing
	}
	if !IsNil(o.TransitAreaId) {
		toSerialize["transit_area_id"] = o.TransitAreaId
	}
	if !IsNil(o.VrTiming) {
		toSerialize["vr_timing"] = o.VrTiming
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner := _LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner(varLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "bfd")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "instance_id")
		delete(additionalProperties, "interface_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "neighbor_id")
		delete(additionalProperties, "passive")
		delete(additionalProperties, "timing")
		delete(additionalProperties, "transit_area_id")
		delete(additionalProperties, "vr_timing")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner struct {
	value *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) Get() *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) Set(val *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner(val *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner {
	return &NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
