/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastRp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastRp{}

// LogicalRoutersVrfInnerMulticastRp struct for LogicalRoutersVrfInnerMulticastRp
type LogicalRoutersVrfInnerMulticastRp struct {
	ExternalRp           []LogicalRoutersVrfInnerMulticastRpExternalRpInner `json:"external_rp,omitempty"`
	LocalRp              *LogicalRoutersVrfInnerMulticastRpLocalRp          `json:"local_rp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastRp LogicalRoutersVrfInnerMulticastRp

// NewLogicalRoutersVrfInnerMulticastRp instantiates a new LogicalRoutersVrfInnerMulticastRp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastRp() *LogicalRoutersVrfInnerMulticastRp {
	this := LogicalRoutersVrfInnerMulticastRp{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastRpWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastRp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastRpWithDefaults() *LogicalRoutersVrfInnerMulticastRp {
	this := LogicalRoutersVrfInnerMulticastRp{}
	return &this
}

// GetExternalRp returns the ExternalRp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastRp) GetExternalRp() []LogicalRoutersVrfInnerMulticastRpExternalRpInner {
	if o == nil || IsNil(o.ExternalRp) {
		var ret []LogicalRoutersVrfInnerMulticastRpExternalRpInner
		return ret
	}
	return o.ExternalRp
}

// GetExternalRpOk returns a tuple with the ExternalRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastRp) GetExternalRpOk() ([]LogicalRoutersVrfInnerMulticastRpExternalRpInner, bool) {
	if o == nil || IsNil(o.ExternalRp) {
		return nil, false
	}
	return o.ExternalRp, true
}

// HasExternalRp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastRp) HasExternalRp() bool {
	if o != nil && !IsNil(o.ExternalRp) {
		return true
	}

	return false
}

// SetExternalRp gets a reference to the given []LogicalRoutersVrfInnerMulticastRpExternalRpInner and assigns it to the ExternalRp field.
func (o *LogicalRoutersVrfInnerMulticastRp) SetExternalRp(v []LogicalRoutersVrfInnerMulticastRpExternalRpInner) {
	o.ExternalRp = v
}

// GetLocalRp returns the LocalRp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastRp) GetLocalRp() LogicalRoutersVrfInnerMulticastRpLocalRp {
	if o == nil || IsNil(o.LocalRp) {
		var ret LogicalRoutersVrfInnerMulticastRpLocalRp
		return ret
	}
	return *o.LocalRp
}

// GetLocalRpOk returns a tuple with the LocalRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastRp) GetLocalRpOk() (*LogicalRoutersVrfInnerMulticastRpLocalRp, bool) {
	if o == nil || IsNil(o.LocalRp) {
		return nil, false
	}
	return o.LocalRp, true
}

// HasLocalRp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastRp) HasLocalRp() bool {
	if o != nil && !IsNil(o.LocalRp) {
		return true
	}

	return false
}

// SetLocalRp gets a reference to the given LogicalRoutersVrfInnerMulticastRpLocalRp and assigns it to the LocalRp field.
func (o *LogicalRoutersVrfInnerMulticastRp) SetLocalRp(v LogicalRoutersVrfInnerMulticastRpLocalRp) {
	o.LocalRp = &v
}

func (o LogicalRoutersVrfInnerMulticastRp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastRp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalRp) {
		toSerialize["external_rp"] = o.ExternalRp
	}
	if !IsNil(o.LocalRp) {
		toSerialize["local_rp"] = o.LocalRp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastRp) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastRp := _LogicalRoutersVrfInnerMulticastRp{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastRp)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastRp(varLogicalRoutersVrfInnerMulticastRp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "external_rp")
		delete(additionalProperties, "local_rp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastRp struct {
	value *LogicalRoutersVrfInnerMulticastRp
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastRp) Get() *LogicalRoutersVrfInnerMulticastRp {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastRp) Set(val *LogicalRoutersVrfInnerMulticastRp) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastRp) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastRp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastRp(val *LogicalRoutersVrfInnerMulticastRp) *NullableLogicalRoutersVrfInnerMulticastRp {
	return &NullableLogicalRoutersVrfInnerMulticastRp{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastRp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastRp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
