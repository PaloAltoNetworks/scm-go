/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim{}

// LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim struct for LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim
type LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim struct {
	AllowedNeighbors     []EthernetInterfacesLayer3IpInner `json:"allowed_neighbors,omitempty"`
	AssertInterval       *float32                          `json:"assert_interval,omitempty"`
	BsrBorder            *bool                             `json:"bsr_border,omitempty"`
	DrPriority           *float32                          `json:"dr_priority,omitempty"`
	Enable               *bool                             `json:"enable,omitempty"`
	HelloInterval        *float32                          `json:"hello_interval,omitempty"`
	JoinPruneInterval    *float32                          `json:"join_prune_interval,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim

// NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim instantiates a new LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim() *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim {
	this := LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPimWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPimWithDefaults() *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim {
	this := LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim{}
	return &this
}

// GetAllowedNeighbors returns the AllowedNeighbors field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetAllowedNeighbors() []EthernetInterfacesLayer3IpInner {
	if o == nil || IsNil(o.AllowedNeighbors) {
		var ret []EthernetInterfacesLayer3IpInner
		return ret
	}
	return o.AllowedNeighbors
}

// GetAllowedNeighborsOk returns a tuple with the AllowedNeighbors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetAllowedNeighborsOk() ([]EthernetInterfacesLayer3IpInner, bool) {
	if o == nil || IsNil(o.AllowedNeighbors) {
		return nil, false
	}
	return o.AllowedNeighbors, true
}

// HasAllowedNeighbors returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasAllowedNeighbors() bool {
	if o != nil && !IsNil(o.AllowedNeighbors) {
		return true
	}

	return false
}

// SetAllowedNeighbors gets a reference to the given []EthernetInterfacesLayer3IpInner and assigns it to the AllowedNeighbors field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetAllowedNeighbors(v []EthernetInterfacesLayer3IpInner) {
	o.AllowedNeighbors = v
}

// GetAssertInterval returns the AssertInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetAssertInterval() float32 {
	if o == nil || IsNil(o.AssertInterval) {
		var ret float32
		return ret
	}
	return *o.AssertInterval
}

// GetAssertIntervalOk returns a tuple with the AssertInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetAssertIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.AssertInterval) {
		return nil, false
	}
	return o.AssertInterval, true
}

// HasAssertInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasAssertInterval() bool {
	if o != nil && !IsNil(o.AssertInterval) {
		return true
	}

	return false
}

// SetAssertInterval gets a reference to the given float32 and assigns it to the AssertInterval field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetAssertInterval(v float32) {
	o.AssertInterval = &v
}

// GetBsrBorder returns the BsrBorder field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetBsrBorder() bool {
	if o == nil || IsNil(o.BsrBorder) {
		var ret bool
		return ret
	}
	return *o.BsrBorder
}

// GetBsrBorderOk returns a tuple with the BsrBorder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetBsrBorderOk() (*bool, bool) {
	if o == nil || IsNil(o.BsrBorder) {
		return nil, false
	}
	return o.BsrBorder, true
}

// HasBsrBorder returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasBsrBorder() bool {
	if o != nil && !IsNil(o.BsrBorder) {
		return true
	}

	return false
}

// SetBsrBorder gets a reference to the given bool and assigns it to the BsrBorder field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetBsrBorder(v bool) {
	o.BsrBorder = &v
}

// GetDrPriority returns the DrPriority field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetDrPriority() float32 {
	if o == nil || IsNil(o.DrPriority) {
		var ret float32
		return ret
	}
	return *o.DrPriority
}

// GetDrPriorityOk returns a tuple with the DrPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetDrPriorityOk() (*float32, bool) {
	if o == nil || IsNil(o.DrPriority) {
		return nil, false
	}
	return o.DrPriority, true
}

// HasDrPriority returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasDrPriority() bool {
	if o != nil && !IsNil(o.DrPriority) {
		return true
	}

	return false
}

// SetDrPriority gets a reference to the given float32 and assigns it to the DrPriority field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetDrPriority(v float32) {
	o.DrPriority = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetEnable(v bool) {
	o.Enable = &v
}

// GetHelloInterval returns the HelloInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetHelloInterval() float32 {
	if o == nil || IsNil(o.HelloInterval) {
		var ret float32
		return ret
	}
	return *o.HelloInterval
}

// GetHelloIntervalOk returns a tuple with the HelloInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetHelloIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.HelloInterval) {
		return nil, false
	}
	return o.HelloInterval, true
}

// HasHelloInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasHelloInterval() bool {
	if o != nil && !IsNil(o.HelloInterval) {
		return true
	}

	return false
}

// SetHelloInterval gets a reference to the given float32 and assigns it to the HelloInterval field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetHelloInterval(v float32) {
	o.HelloInterval = &v
}

// GetJoinPruneInterval returns the JoinPruneInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetJoinPruneInterval() float32 {
	if o == nil || IsNil(o.JoinPruneInterval) {
		var ret float32
		return ret
	}
	return *o.JoinPruneInterval
}

// GetJoinPruneIntervalOk returns a tuple with the JoinPruneInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) GetJoinPruneIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.JoinPruneInterval) {
		return nil, false
	}
	return o.JoinPruneInterval, true
}

// HasJoinPruneInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) HasJoinPruneInterval() bool {
	if o != nil && !IsNil(o.JoinPruneInterval) {
		return true
	}

	return false
}

// SetJoinPruneInterval gets a reference to the given float32 and assigns it to the JoinPruneInterval field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) SetJoinPruneInterval(v float32) {
	o.JoinPruneInterval = &v
}

func (o LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedNeighbors) {
		toSerialize["allowed_neighbors"] = o.AllowedNeighbors
	}
	if !IsNil(o.AssertInterval) {
		toSerialize["assert_interval"] = o.AssertInterval
	}
	if !IsNil(o.BsrBorder) {
		toSerialize["bsr_border"] = o.BsrBorder
	}
	if !IsNil(o.DrPriority) {
		toSerialize["dr_priority"] = o.DrPriority
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.HelloInterval) {
		toSerialize["hello_interval"] = o.HelloInterval
	}
	if !IsNil(o.JoinPruneInterval) {
		toSerialize["join_prune_interval"] = o.JoinPruneInterval
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim := _LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim(varLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowed_neighbors")
		delete(additionalProperties, "assert_interval")
		delete(additionalProperties, "bsr_border")
		delete(additionalProperties, "dr_priority")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "hello_interval")
		delete(additionalProperties, "join_prune_interval")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim struct {
	value *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) Get() *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) Set(val *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim(val *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim {
	return &NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
