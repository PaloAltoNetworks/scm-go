/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the QosProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosProfiles{}

// QosProfiles struct for QosProfiles
type QosProfiles struct {
	AggregateBandwidth *QosProfilesAggregateBandwidth `json:"aggregate_bandwidth,omitempty"`
	ClassBandwidthType *QosProfilesClassBandwidthType `json:"class_bandwidth_type,omitempty"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// UUID of the resource
	Id *string `json:"id,omitempty"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]
	Name string `json:"name"`
	// The snippet in which the resource is defined
	Snippet              *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	AdditionalProperties map[string]interface{}
}

type _QosProfiles QosProfiles

// NewQosProfiles instantiates a new QosProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosProfiles(name string) *QosProfiles {
	this := QosProfiles{}
	this.Name = name
	return &this
}

// NewQosProfilesWithDefaults instantiates a new QosProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosProfilesWithDefaults() *QosProfiles {
	this := QosProfiles{}
	return &this
}

// GetAggregateBandwidth returns the AggregateBandwidth field value if set, zero value otherwise.
func (o *QosProfiles) GetAggregateBandwidth() QosProfilesAggregateBandwidth {
	if o == nil || IsNil(o.AggregateBandwidth) {
		var ret QosProfilesAggregateBandwidth
		return ret
	}
	return *o.AggregateBandwidth
}

// GetAggregateBandwidthOk returns a tuple with the AggregateBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetAggregateBandwidthOk() (*QosProfilesAggregateBandwidth, bool) {
	if o == nil || IsNil(o.AggregateBandwidth) {
		return nil, false
	}
	return o.AggregateBandwidth, true
}

// HasAggregateBandwidth returns a boolean if a field has been set.
func (o *QosProfiles) HasAggregateBandwidth() bool {
	if o != nil && !IsNil(o.AggregateBandwidth) {
		return true
	}

	return false
}

// SetAggregateBandwidth gets a reference to the given QosProfilesAggregateBandwidth and assigns it to the AggregateBandwidth field.
func (o *QosProfiles) SetAggregateBandwidth(v QosProfilesAggregateBandwidth) {
	o.AggregateBandwidth = &v
}

// GetClassBandwidthType returns the ClassBandwidthType field value if set, zero value otherwise.
func (o *QosProfiles) GetClassBandwidthType() QosProfilesClassBandwidthType {
	if o == nil || IsNil(o.ClassBandwidthType) {
		var ret QosProfilesClassBandwidthType
		return ret
	}
	return *o.ClassBandwidthType
}

// GetClassBandwidthTypeOk returns a tuple with the ClassBandwidthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetClassBandwidthTypeOk() (*QosProfilesClassBandwidthType, bool) {
	if o == nil || IsNil(o.ClassBandwidthType) {
		return nil, false
	}
	return o.ClassBandwidthType, true
}

// HasClassBandwidthType returns a boolean if a field has been set.
func (o *QosProfiles) HasClassBandwidthType() bool {
	if o != nil && !IsNil(o.ClassBandwidthType) {
		return true
	}

	return false
}

// SetClassBandwidthType gets a reference to the given QosProfilesClassBandwidthType and assigns it to the ClassBandwidthType field.
func (o *QosProfiles) SetClassBandwidthType(v QosProfilesClassBandwidthType) {
	o.ClassBandwidthType = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *QosProfiles) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *QosProfiles) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *QosProfiles) SetDevice(v string) {
	o.Device = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *QosProfiles) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *QosProfiles) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *QosProfiles) SetFolder(v string) {
	o.Folder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QosProfiles) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QosProfiles) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QosProfiles) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *QosProfiles) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QosProfiles) SetName(v string) {
	o.Name = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *QosProfiles) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfiles) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *QosProfiles) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *QosProfiles) SetSnippet(v string) {
	o.Snippet = &v
}

func (o QosProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AggregateBandwidth) {
		toSerialize["aggregate_bandwidth"] = o.AggregateBandwidth
	}
	if !IsNil(o.ClassBandwidthType) {
		toSerialize["class_bandwidth_type"] = o.ClassBandwidthType
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QosProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQosProfiles := _QosProfiles{}

	err = json.Unmarshal(data, &varQosProfiles)

	if err != nil {
		return err
	}

	*o = QosProfiles(varQosProfiles)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aggregate_bandwidth")
		delete(additionalProperties, "class_bandwidth_type")
		delete(additionalProperties, "device")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "snippet")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQosProfiles struct {
	value *QosProfiles
	isSet bool
}

func (v NullableQosProfiles) Get() *QosProfiles {
	return v.value
}

func (v *NullableQosProfiles) Set(val *QosProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableQosProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableQosProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosProfiles(val *QosProfiles) *NullableQosProfiles {
	return &NullableQosProfiles{value: val, isSet: true}
}

func (v NullableQosProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
