/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the NatRulesDynamicDestinationTranslation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NatRulesDynamicDestinationTranslation{}

// NatRulesDynamicDestinationTranslation Dynamic destination translation configuration.
type NatRulesDynamicDestinationTranslation struct {
	Distribution         *string `json:"distribution,omitempty"`
	TranslatedAddress    *string `json:"translated_address,omitempty"`
	TranslatedPort       *int32  `json:"translated_port,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NatRulesDynamicDestinationTranslation NatRulesDynamicDestinationTranslation

// NewNatRulesDynamicDestinationTranslation instantiates a new NatRulesDynamicDestinationTranslation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatRulesDynamicDestinationTranslation() *NatRulesDynamicDestinationTranslation {
	this := NatRulesDynamicDestinationTranslation{}
	return &this
}

// NewNatRulesDynamicDestinationTranslationWithDefaults instantiates a new NatRulesDynamicDestinationTranslation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatRulesDynamicDestinationTranslationWithDefaults() *NatRulesDynamicDestinationTranslation {
	this := NatRulesDynamicDestinationTranslation{}
	return &this
}

// GetDistribution returns the Distribution field value if set, zero value otherwise.
func (o *NatRulesDynamicDestinationTranslation) GetDistribution() string {
	if o == nil || IsNil(o.Distribution) {
		var ret string
		return ret
	}
	return *o.Distribution
}

// GetDistributionOk returns a tuple with the Distribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatRulesDynamicDestinationTranslation) GetDistributionOk() (*string, bool) {
	if o == nil || IsNil(o.Distribution) {
		return nil, false
	}
	return o.Distribution, true
}

// HasDistribution returns a boolean if a field has been set.
func (o *NatRulesDynamicDestinationTranslation) HasDistribution() bool {
	if o != nil && !IsNil(o.Distribution) {
		return true
	}

	return false
}

// SetDistribution gets a reference to the given string and assigns it to the Distribution field.
func (o *NatRulesDynamicDestinationTranslation) SetDistribution(v string) {
	o.Distribution = &v
}

// GetTranslatedAddress returns the TranslatedAddress field value if set, zero value otherwise.
func (o *NatRulesDynamicDestinationTranslation) GetTranslatedAddress() string {
	if o == nil || IsNil(o.TranslatedAddress) {
		var ret string
		return ret
	}
	return *o.TranslatedAddress
}

// GetTranslatedAddressOk returns a tuple with the TranslatedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatRulesDynamicDestinationTranslation) GetTranslatedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.TranslatedAddress) {
		return nil, false
	}
	return o.TranslatedAddress, true
}

// HasTranslatedAddress returns a boolean if a field has been set.
func (o *NatRulesDynamicDestinationTranslation) HasTranslatedAddress() bool {
	if o != nil && !IsNil(o.TranslatedAddress) {
		return true
	}

	return false
}

// SetTranslatedAddress gets a reference to the given string and assigns it to the TranslatedAddress field.
func (o *NatRulesDynamicDestinationTranslation) SetTranslatedAddress(v string) {
	o.TranslatedAddress = &v
}

// GetTranslatedPort returns the TranslatedPort field value if set, zero value otherwise.
func (o *NatRulesDynamicDestinationTranslation) GetTranslatedPort() int32 {
	if o == nil || IsNil(o.TranslatedPort) {
		var ret int32
		return ret
	}
	return *o.TranslatedPort
}

// GetTranslatedPortOk returns a tuple with the TranslatedPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatRulesDynamicDestinationTranslation) GetTranslatedPortOk() (*int32, bool) {
	if o == nil || IsNil(o.TranslatedPort) {
		return nil, false
	}
	return o.TranslatedPort, true
}

// HasTranslatedPort returns a boolean if a field has been set.
func (o *NatRulesDynamicDestinationTranslation) HasTranslatedPort() bool {
	if o != nil && !IsNil(o.TranslatedPort) {
		return true
	}

	return false
}

// SetTranslatedPort gets a reference to the given int32 and assigns it to the TranslatedPort field.
func (o *NatRulesDynamicDestinationTranslation) SetTranslatedPort(v int32) {
	o.TranslatedPort = &v
}

func (o NatRulesDynamicDestinationTranslation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NatRulesDynamicDestinationTranslation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Distribution) {
		toSerialize["distribution"] = o.Distribution
	}
	if !IsNil(o.TranslatedAddress) {
		toSerialize["translated_address"] = o.TranslatedAddress
	}
	if !IsNil(o.TranslatedPort) {
		toSerialize["translated_port"] = o.TranslatedPort
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NatRulesDynamicDestinationTranslation) UnmarshalJSON(data []byte) (err error) {
	varNatRulesDynamicDestinationTranslation := _NatRulesDynamicDestinationTranslation{}

	err = json.Unmarshal(data, &varNatRulesDynamicDestinationTranslation)

	if err != nil {
		return err
	}

	*o = NatRulesDynamicDestinationTranslation(varNatRulesDynamicDestinationTranslation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "distribution")
		delete(additionalProperties, "translated_address")
		delete(additionalProperties, "translated_port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNatRulesDynamicDestinationTranslation struct {
	value *NatRulesDynamicDestinationTranslation
	isSet bool
}

func (v NullableNatRulesDynamicDestinationTranslation) Get() *NatRulesDynamicDestinationTranslation {
	return v.value
}

func (v *NullableNatRulesDynamicDestinationTranslation) Set(val *NatRulesDynamicDestinationTranslation) {
	v.value = val
	v.isSet = true
}

func (v NullableNatRulesDynamicDestinationTranslation) IsSet() bool {
	return v.isSet
}

func (v *NullableNatRulesDynamicDestinationTranslation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatRulesDynamicDestinationTranslation(val *NatRulesDynamicDestinationTranslation) *NullableNatRulesDynamicDestinationTranslation {
	return &NullableNatRulesDynamicDestinationTranslation{value: val, isSet: true}
}

func (v NullableNatRulesDynamicDestinationTranslation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatRulesDynamicDestinationTranslation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
