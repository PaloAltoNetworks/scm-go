/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the DhcpInterfacesServerOptionUserDefinedInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DhcpInterfacesServerOptionUserDefinedInner{}

// DhcpInterfacesServerOptionUserDefinedInner struct for DhcpInterfacesServerOptionUserDefinedInner
type DhcpInterfacesServerOptionUserDefinedInner struct {
	Ascii []string `json:"ascii,omitempty"`
	// Option code
	Code *int32   `json:"code,omitempty"`
	Hex  []string `json:"hex,omitempty"`
	// Inherited from DHCP server inheritance source?
	Inherited bool     `json:"inherited"`
	Ip        []string `json:"ip,omitempty"`
	// Option name
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _DhcpInterfacesServerOptionUserDefinedInner DhcpInterfacesServerOptionUserDefinedInner

// NewDhcpInterfacesServerOptionUserDefinedInner instantiates a new DhcpInterfacesServerOptionUserDefinedInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpInterfacesServerOptionUserDefinedInner(inherited bool, name string) *DhcpInterfacesServerOptionUserDefinedInner {
	this := DhcpInterfacesServerOptionUserDefinedInner{}
	this.Inherited = inherited
	this.Name = name
	return &this
}

// NewDhcpInterfacesServerOptionUserDefinedInnerWithDefaults instantiates a new DhcpInterfacesServerOptionUserDefinedInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpInterfacesServerOptionUserDefinedInnerWithDefaults() *DhcpInterfacesServerOptionUserDefinedInner {
	this := DhcpInterfacesServerOptionUserDefinedInner{}
	return &this
}

// GetAscii returns the Ascii field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetAscii() []string {
	if o == nil || IsNil(o.Ascii) {
		var ret []string
		return ret
	}
	return o.Ascii
}

// GetAsciiOk returns a tuple with the Ascii field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetAsciiOk() ([]string, bool) {
	if o == nil || IsNil(o.Ascii) {
		return nil, false
	}
	return o.Ascii, true
}

// HasAscii returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) HasAscii() bool {
	if o != nil && !IsNil(o.Ascii) {
		return true
	}

	return false
}

// SetAscii gets a reference to the given []string and assigns it to the Ascii field.
func (o *DhcpInterfacesServerOptionUserDefinedInner) SetAscii(v []string) {
	o.Ascii = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *DhcpInterfacesServerOptionUserDefinedInner) SetCode(v int32) {
	o.Code = &v
}

// GetHex returns the Hex field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetHex() []string {
	if o == nil || IsNil(o.Hex) {
		var ret []string
		return ret
	}
	return o.Hex
}

// GetHexOk returns a tuple with the Hex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetHexOk() ([]string, bool) {
	if o == nil || IsNil(o.Hex) {
		return nil, false
	}
	return o.Hex, true
}

// HasHex returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) HasHex() bool {
	if o != nil && !IsNil(o.Hex) {
		return true
	}

	return false
}

// SetHex gets a reference to the given []string and assigns it to the Hex field.
func (o *DhcpInterfacesServerOptionUserDefinedInner) SetHex(v []string) {
	o.Hex = v
}

// GetInherited returns the Inherited field value
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetInherited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Inherited
}

// GetInheritedOk returns a tuple with the Inherited field value
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetInheritedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inherited, true
}

// SetInherited sets field value
func (o *DhcpInterfacesServerOptionUserDefinedInner) SetInherited(v bool) {
	o.Inherited = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetIp() []string {
	if o == nil || IsNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetIpOk() ([]string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *DhcpInterfacesServerOptionUserDefinedInner) SetIp(v []string) {
	o.Ip = v
}

// GetName returns the Name field value
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerOptionUserDefinedInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DhcpInterfacesServerOptionUserDefinedInner) SetName(v string) {
	o.Name = v
}

func (o DhcpInterfacesServerOptionUserDefinedInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DhcpInterfacesServerOptionUserDefinedInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ascii) {
		toSerialize["ascii"] = o.Ascii
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Hex) {
		toSerialize["hex"] = o.Hex
	}
	toSerialize["inherited"] = o.Inherited
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DhcpInterfacesServerOptionUserDefinedInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inherited",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDhcpInterfacesServerOptionUserDefinedInner := _DhcpInterfacesServerOptionUserDefinedInner{}

	err = json.Unmarshal(data, &varDhcpInterfacesServerOptionUserDefinedInner)

	if err != nil {
		return err
	}

	*o = DhcpInterfacesServerOptionUserDefinedInner(varDhcpInterfacesServerOptionUserDefinedInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ascii")
		delete(additionalProperties, "code")
		delete(additionalProperties, "hex")
		delete(additionalProperties, "inherited")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDhcpInterfacesServerOptionUserDefinedInner struct {
	value *DhcpInterfacesServerOptionUserDefinedInner
	isSet bool
}

func (v NullableDhcpInterfacesServerOptionUserDefinedInner) Get() *DhcpInterfacesServerOptionUserDefinedInner {
	return v.value
}

func (v *NullableDhcpInterfacesServerOptionUserDefinedInner) Set(val *DhcpInterfacesServerOptionUserDefinedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpInterfacesServerOptionUserDefinedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpInterfacesServerOptionUserDefinedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpInterfacesServerOptionUserDefinedInner(val *DhcpInterfacesServerOptionUserDefinedInner) *NullableDhcpInterfacesServerOptionUserDefinedInner {
	return &NullableDhcpInterfacesServerOptionUserDefinedInner{value: val, isSet: true}
}

func (v NullableDhcpInterfacesServerOptionUserDefinedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpInterfacesServerOptionUserDefinedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
