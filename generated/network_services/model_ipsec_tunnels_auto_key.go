/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the IpsecTunnelsAutoKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpsecTunnelsAutoKey{}

// IpsecTunnelsAutoKey struct for IpsecTunnelsAutoKey
type IpsecTunnelsAutoKey struct {
	IkeGateway         []IpsecTunnelsAutoKeyIkeGatewayInner `json:"ike_gateway"`
	IpsecCryptoProfile string                               `json:"ipsec_crypto_profile"`
	// IPv4 type of proxy_id values
	ProxyId []IpsecTunnelsAutoKeyProxyIdInner `json:"proxy_id,omitempty"`
	// IPv6 type of proxy_id values
	ProxyIdV6            []IpsecTunnelsAutoKeyProxyIdV6Inner `json:"proxy_id_v6,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IpsecTunnelsAutoKey IpsecTunnelsAutoKey

// NewIpsecTunnelsAutoKey instantiates a new IpsecTunnelsAutoKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpsecTunnelsAutoKey(ikeGateway []IpsecTunnelsAutoKeyIkeGatewayInner, ipsecCryptoProfile string) *IpsecTunnelsAutoKey {
	this := IpsecTunnelsAutoKey{}
	this.IkeGateway = ikeGateway
	this.IpsecCryptoProfile = ipsecCryptoProfile
	return &this
}

// NewIpsecTunnelsAutoKeyWithDefaults instantiates a new IpsecTunnelsAutoKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpsecTunnelsAutoKeyWithDefaults() *IpsecTunnelsAutoKey {
	this := IpsecTunnelsAutoKey{}
	return &this
}

// GetIkeGateway returns the IkeGateway field value
func (o *IpsecTunnelsAutoKey) GetIkeGateway() []IpsecTunnelsAutoKeyIkeGatewayInner {
	if o == nil {
		var ret []IpsecTunnelsAutoKeyIkeGatewayInner
		return ret
	}

	return o.IkeGateway
}

// GetIkeGatewayOk returns a tuple with the IkeGateway field value
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsAutoKey) GetIkeGatewayOk() ([]IpsecTunnelsAutoKeyIkeGatewayInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.IkeGateway, true
}

// SetIkeGateway sets field value
func (o *IpsecTunnelsAutoKey) SetIkeGateway(v []IpsecTunnelsAutoKeyIkeGatewayInner) {
	o.IkeGateway = v
}

// GetIpsecCryptoProfile returns the IpsecCryptoProfile field value
func (o *IpsecTunnelsAutoKey) GetIpsecCryptoProfile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpsecCryptoProfile
}

// GetIpsecCryptoProfileOk returns a tuple with the IpsecCryptoProfile field value
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsAutoKey) GetIpsecCryptoProfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpsecCryptoProfile, true
}

// SetIpsecCryptoProfile sets field value
func (o *IpsecTunnelsAutoKey) SetIpsecCryptoProfile(v string) {
	o.IpsecCryptoProfile = v
}

// GetProxyId returns the ProxyId field value if set, zero value otherwise.
func (o *IpsecTunnelsAutoKey) GetProxyId() []IpsecTunnelsAutoKeyProxyIdInner {
	if o == nil || IsNil(o.ProxyId) {
		var ret []IpsecTunnelsAutoKeyProxyIdInner
		return ret
	}
	return o.ProxyId
}

// GetProxyIdOk returns a tuple with the ProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsAutoKey) GetProxyIdOk() ([]IpsecTunnelsAutoKeyProxyIdInner, bool) {
	if o == nil || IsNil(o.ProxyId) {
		return nil, false
	}
	return o.ProxyId, true
}

// HasProxyId returns a boolean if a field has been set.
func (o *IpsecTunnelsAutoKey) HasProxyId() bool {
	if o != nil && !IsNil(o.ProxyId) {
		return true
	}

	return false
}

// SetProxyId gets a reference to the given []IpsecTunnelsAutoKeyProxyIdInner and assigns it to the ProxyId field.
func (o *IpsecTunnelsAutoKey) SetProxyId(v []IpsecTunnelsAutoKeyProxyIdInner) {
	o.ProxyId = v
}

// GetProxyIdV6 returns the ProxyIdV6 field value if set, zero value otherwise.
func (o *IpsecTunnelsAutoKey) GetProxyIdV6() []IpsecTunnelsAutoKeyProxyIdV6Inner {
	if o == nil || IsNil(o.ProxyIdV6) {
		var ret []IpsecTunnelsAutoKeyProxyIdV6Inner
		return ret
	}
	return o.ProxyIdV6
}

// GetProxyIdV6Ok returns a tuple with the ProxyIdV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelsAutoKey) GetProxyIdV6Ok() ([]IpsecTunnelsAutoKeyProxyIdV6Inner, bool) {
	if o == nil || IsNil(o.ProxyIdV6) {
		return nil, false
	}
	return o.ProxyIdV6, true
}

// HasProxyIdV6 returns a boolean if a field has been set.
func (o *IpsecTunnelsAutoKey) HasProxyIdV6() bool {
	if o != nil && !IsNil(o.ProxyIdV6) {
		return true
	}

	return false
}

// SetProxyIdV6 gets a reference to the given []IpsecTunnelsAutoKeyProxyIdV6Inner and assigns it to the ProxyIdV6 field.
func (o *IpsecTunnelsAutoKey) SetProxyIdV6(v []IpsecTunnelsAutoKeyProxyIdV6Inner) {
	o.ProxyIdV6 = v
}

func (o IpsecTunnelsAutoKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpsecTunnelsAutoKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ike_gateway"] = o.IkeGateway
	toSerialize["ipsec_crypto_profile"] = o.IpsecCryptoProfile
	if !IsNil(o.ProxyId) {
		toSerialize["proxy_id"] = o.ProxyId
	}
	if !IsNil(o.ProxyIdV6) {
		toSerialize["proxy_id_v6"] = o.ProxyIdV6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IpsecTunnelsAutoKey) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ike_gateway",
		"ipsec_crypto_profile",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIpsecTunnelsAutoKey := _IpsecTunnelsAutoKey{}

	err = json.Unmarshal(data, &varIpsecTunnelsAutoKey)

	if err != nil {
		return err
	}

	*o = IpsecTunnelsAutoKey(varIpsecTunnelsAutoKey)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ike_gateway")
		delete(additionalProperties, "ipsec_crypto_profile")
		delete(additionalProperties, "proxy_id")
		delete(additionalProperties, "proxy_id_v6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpsecTunnelsAutoKey struct {
	value *IpsecTunnelsAutoKey
	isSet bool
}

func (v NullableIpsecTunnelsAutoKey) Get() *IpsecTunnelsAutoKey {
	return v.value
}

func (v *NullableIpsecTunnelsAutoKey) Set(val *IpsecTunnelsAutoKey) {
	v.value = val
	v.isSet = true
}

func (v NullableIpsecTunnelsAutoKey) IsSet() bool {
	return v.isSet
}

func (v *NullableIpsecTunnelsAutoKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpsecTunnelsAutoKey(val *IpsecTunnelsAutoKey) *NullableIpsecTunnelsAutoKey {
	return &NullableIpsecTunnelsAutoKey{value: val, isSet: true}
}

func (v NullableIpsecTunnelsAutoKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpsecTunnelsAutoKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
