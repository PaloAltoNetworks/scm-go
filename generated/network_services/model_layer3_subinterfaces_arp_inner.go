/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the Layer3SubinterfacesArpInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Layer3SubinterfacesArpInner{}

// Layer3SubinterfacesArpInner Layer 3 sub Interfaces ARP configuration object
type Layer3SubinterfacesArpInner struct {
	// MAC address
	HwAddress *string `json:"hw-address,omitempty"`
	// IP address
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Layer3SubinterfacesArpInner Layer3SubinterfacesArpInner

// NewLayer3SubinterfacesArpInner instantiates a new Layer3SubinterfacesArpInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayer3SubinterfacesArpInner() *Layer3SubinterfacesArpInner {
	this := Layer3SubinterfacesArpInner{}
	return &this
}

// NewLayer3SubinterfacesArpInnerWithDefaults instantiates a new Layer3SubinterfacesArpInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayer3SubinterfacesArpInnerWithDefaults() *Layer3SubinterfacesArpInner {
	this := Layer3SubinterfacesArpInner{}
	return &this
}

// GetHwAddress returns the HwAddress field value if set, zero value otherwise.
func (o *Layer3SubinterfacesArpInner) GetHwAddress() string {
	if o == nil || IsNil(o.HwAddress) {
		var ret string
		return ret
	}
	return *o.HwAddress
}

// GetHwAddressOk returns a tuple with the HwAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer3SubinterfacesArpInner) GetHwAddressOk() (*string, bool) {
	if o == nil || IsNil(o.HwAddress) {
		return nil, false
	}
	return o.HwAddress, true
}

// HasHwAddress returns a boolean if a field has been set.
func (o *Layer3SubinterfacesArpInner) HasHwAddress() bool {
	if o != nil && !IsNil(o.HwAddress) {
		return true
	}

	return false
}

// SetHwAddress gets a reference to the given string and assigns it to the HwAddress field.
func (o *Layer3SubinterfacesArpInner) SetHwAddress(v string) {
	o.HwAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Layer3SubinterfacesArpInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layer3SubinterfacesArpInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Layer3SubinterfacesArpInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Layer3SubinterfacesArpInner) SetName(v string) {
	o.Name = &v
}

func (o Layer3SubinterfacesArpInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Layer3SubinterfacesArpInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HwAddress) {
		toSerialize["hw-address"] = o.HwAddress
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Layer3SubinterfacesArpInner) UnmarshalJSON(data []byte) (err error) {
	varLayer3SubinterfacesArpInner := _Layer3SubinterfacesArpInner{}

	err = json.Unmarshal(data, &varLayer3SubinterfacesArpInner)

	if err != nil {
		return err
	}

	*o = Layer3SubinterfacesArpInner(varLayer3SubinterfacesArpInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "hw-address")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLayer3SubinterfacesArpInner struct {
	value *Layer3SubinterfacesArpInner
	isSet bool
}

func (v NullableLayer3SubinterfacesArpInner) Get() *Layer3SubinterfacesArpInner {
	return v.value
}

func (v *NullableLayer3SubinterfacesArpInner) Set(val *Layer3SubinterfacesArpInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLayer3SubinterfacesArpInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLayer3SubinterfacesArpInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayer3SubinterfacesArpInner(val *Layer3SubinterfacesArpInner) *NullableLayer3SubinterfacesArpInner {
	return &NullableLayer3SubinterfacesArpInner{value: val, isSet: true}
}

func (v NullableLayer3SubinterfacesArpInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayer3SubinterfacesArpInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
