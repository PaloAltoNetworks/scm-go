/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the ZoneProtectionProfilesFloodIcmp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneProtectionProfilesFloodIcmp{}

// ZoneProtectionProfilesFloodIcmp struct for ZoneProtectionProfilesFloodIcmp
type ZoneProtectionProfilesFloodIcmp struct {
	// Enable protection against ICMP floods?
	Enable               *bool                               `json:"enable,omitempty"`
	Red                  *ZoneProtectionProfilesFloodIcmpRed `json:"red,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ZoneProtectionProfilesFloodIcmp ZoneProtectionProfilesFloodIcmp

// NewZoneProtectionProfilesFloodIcmp instantiates a new ZoneProtectionProfilesFloodIcmp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneProtectionProfilesFloodIcmp() *ZoneProtectionProfilesFloodIcmp {
	this := ZoneProtectionProfilesFloodIcmp{}
	return &this
}

// NewZoneProtectionProfilesFloodIcmpWithDefaults instantiates a new ZoneProtectionProfilesFloodIcmp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneProtectionProfilesFloodIcmpWithDefaults() *ZoneProtectionProfilesFloodIcmp {
	this := ZoneProtectionProfilesFloodIcmp{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesFloodIcmp) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesFloodIcmp) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesFloodIcmp) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ZoneProtectionProfilesFloodIcmp) SetEnable(v bool) {
	o.Enable = &v
}

// GetRed returns the Red field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesFloodIcmp) GetRed() ZoneProtectionProfilesFloodIcmpRed {
	if o == nil || IsNil(o.Red) {
		var ret ZoneProtectionProfilesFloodIcmpRed
		return ret
	}
	return *o.Red
}

// GetRedOk returns a tuple with the Red field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesFloodIcmp) GetRedOk() (*ZoneProtectionProfilesFloodIcmpRed, bool) {
	if o == nil || IsNil(o.Red) {
		return nil, false
	}
	return o.Red, true
}

// HasRed returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesFloodIcmp) HasRed() bool {
	if o != nil && !IsNil(o.Red) {
		return true
	}

	return false
}

// SetRed gets a reference to the given ZoneProtectionProfilesFloodIcmpRed and assigns it to the Red field.
func (o *ZoneProtectionProfilesFloodIcmp) SetRed(v ZoneProtectionProfilesFloodIcmpRed) {
	o.Red = &v
}

func (o ZoneProtectionProfilesFloodIcmp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneProtectionProfilesFloodIcmp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Red) {
		toSerialize["red"] = o.Red
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ZoneProtectionProfilesFloodIcmp) UnmarshalJSON(data []byte) (err error) {
	varZoneProtectionProfilesFloodIcmp := _ZoneProtectionProfilesFloodIcmp{}

	err = json.Unmarshal(data, &varZoneProtectionProfilesFloodIcmp)

	if err != nil {
		return err
	}

	*o = ZoneProtectionProfilesFloodIcmp(varZoneProtectionProfilesFloodIcmp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "red")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableZoneProtectionProfilesFloodIcmp struct {
	value *ZoneProtectionProfilesFloodIcmp
	isSet bool
}

func (v NullableZoneProtectionProfilesFloodIcmp) Get() *ZoneProtectionProfilesFloodIcmp {
	return v.value
}

func (v *NullableZoneProtectionProfilesFloodIcmp) Set(val *ZoneProtectionProfilesFloodIcmp) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneProtectionProfilesFloodIcmp) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneProtectionProfilesFloodIcmp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneProtectionProfilesFloodIcmp(val *ZoneProtectionProfilesFloodIcmp) *NullableZoneProtectionProfilesFloodIcmp {
	return &NullableZoneProtectionProfilesFloodIcmp{value: val, isSet: true}
}

func (v NullableZoneProtectionProfilesFloodIcmp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneProtectionProfilesFloodIcmp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
