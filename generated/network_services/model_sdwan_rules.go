/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the SdwanRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdwanRules{}

// SdwanRules struct for SdwanRules
type SdwanRules struct {
	Action SdwanRulesAction `json:"action"`
	// List of applications
	Application []string `json:"application"`
	// Rule description
	Description *string `json:"description,omitempty"`
	// List of destination addresses
	Destination []string `json:"destination"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// Disable rule?
	Disabled *bool `json:"disabled,omitempty"`
	// Error correction profile
	ErrorCorrectionProfile *string `json:"error_correction_profile,omitempty"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// List of source zones
	From []string `json:"from"`
	// UUID of the resource
	Id *string `json:"id,omitempty"`
	// Rule name
	Name string `json:"name"`
	// Negate destination address(es)?
	NegateDestination *bool `json:"negate_destination,omitempty"`
	// Negate source address(es)?
	NegateSource *bool `json:"negate_source,omitempty"`
	// Path quality profile
	PathQualityProfile string `json:"path_quality_profile"`
	// Rule postion relative to device rules
	Position string `json:"position"`
	// SaaS quality profile
	SaasQualityProfile *string `json:"saas_quality_profile,omitempty"`
	// List of services
	Service []string `json:"service"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// List of source addresses
	Source []string `json:"source"`
	// List of source users
	SourceUser []string `json:"source_user"`
	// List of tags
	Tag []string `json:"tag,omitempty"`
	// List of destination zones
	To                   []string `json:"to"`
	AdditionalProperties map[string]interface{}
}

type _SdwanRules SdwanRules

// NewSdwanRules instantiates a new SdwanRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdwanRules(action SdwanRulesAction, application []string, destination []string, from []string, name string, pathQualityProfile string, position string, service []string, source []string, sourceUser []string, to []string) *SdwanRules {
	this := SdwanRules{}
	this.Action = action
	this.Application = application
	this.Destination = destination
	var disabled bool = false
	this.Disabled = &disabled
	this.From = from
	this.Name = name
	var negateDestination bool = false
	this.NegateDestination = &negateDestination
	var negateSource bool = false
	this.NegateSource = &negateSource
	this.PathQualityProfile = pathQualityProfile
	this.Position = position
	this.Service = service
	this.Source = source
	this.SourceUser = sourceUser
	this.To = to
	return &this
}

// NewSdwanRulesWithDefaults instantiates a new SdwanRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdwanRulesWithDefaults() *SdwanRules {
	this := SdwanRules{}
	var disabled bool = false
	this.Disabled = &disabled
	var negateDestination bool = false
	this.NegateDestination = &negateDestination
	var negateSource bool = false
	this.NegateSource = &negateSource
	return &this
}

// GetAction returns the Action field value
func (o *SdwanRules) GetAction() SdwanRulesAction {
	if o == nil {
		var ret SdwanRulesAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetActionOk() (*SdwanRulesAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *SdwanRules) SetAction(v SdwanRulesAction) {
	o.Action = v
}

// GetApplication returns the Application field value
func (o *SdwanRules) GetApplication() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Application
}

// GetApplicationOk returns a tuple with the Application field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetApplicationOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Application, true
}

// SetApplication sets field value
func (o *SdwanRules) SetApplication(v []string) {
	o.Application = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SdwanRules) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SdwanRules) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SdwanRules) SetDescription(v string) {
	o.Description = &v
}

// GetDestination returns the Destination field value
func (o *SdwanRules) GetDestination() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetDestinationOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destination, true
}

// SetDestination sets field value
func (o *SdwanRules) SetDestination(v []string) {
	o.Destination = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *SdwanRules) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *SdwanRules) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *SdwanRules) SetDevice(v string) {
	o.Device = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *SdwanRules) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *SdwanRules) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *SdwanRules) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetErrorCorrectionProfile returns the ErrorCorrectionProfile field value if set, zero value otherwise.
func (o *SdwanRules) GetErrorCorrectionProfile() string {
	if o == nil || IsNil(o.ErrorCorrectionProfile) {
		var ret string
		return ret
	}
	return *o.ErrorCorrectionProfile
}

// GetErrorCorrectionProfileOk returns a tuple with the ErrorCorrectionProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetErrorCorrectionProfileOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCorrectionProfile) {
		return nil, false
	}
	return o.ErrorCorrectionProfile, true
}

// HasErrorCorrectionProfile returns a boolean if a field has been set.
func (o *SdwanRules) HasErrorCorrectionProfile() bool {
	if o != nil && !IsNil(o.ErrorCorrectionProfile) {
		return true
	}

	return false
}

// SetErrorCorrectionProfile gets a reference to the given string and assigns it to the ErrorCorrectionProfile field.
func (o *SdwanRules) SetErrorCorrectionProfile(v string) {
	o.ErrorCorrectionProfile = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *SdwanRules) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *SdwanRules) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *SdwanRules) SetFolder(v string) {
	o.Folder = &v
}

// GetFrom returns the From field value
func (o *SdwanRules) GetFrom() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetFromOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From, true
}

// SetFrom sets field value
func (o *SdwanRules) SetFrom(v []string) {
	o.From = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SdwanRules) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SdwanRules) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SdwanRules) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *SdwanRules) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SdwanRules) SetName(v string) {
	o.Name = v
}

// GetNegateDestination returns the NegateDestination field value if set, zero value otherwise.
func (o *SdwanRules) GetNegateDestination() bool {
	if o == nil || IsNil(o.NegateDestination) {
		var ret bool
		return ret
	}
	return *o.NegateDestination
}

// GetNegateDestinationOk returns a tuple with the NegateDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetNegateDestinationOk() (*bool, bool) {
	if o == nil || IsNil(o.NegateDestination) {
		return nil, false
	}
	return o.NegateDestination, true
}

// HasNegateDestination returns a boolean if a field has been set.
func (o *SdwanRules) HasNegateDestination() bool {
	if o != nil && !IsNil(o.NegateDestination) {
		return true
	}

	return false
}

// SetNegateDestination gets a reference to the given bool and assigns it to the NegateDestination field.
func (o *SdwanRules) SetNegateDestination(v bool) {
	o.NegateDestination = &v
}

// GetNegateSource returns the NegateSource field value if set, zero value otherwise.
func (o *SdwanRules) GetNegateSource() bool {
	if o == nil || IsNil(o.NegateSource) {
		var ret bool
		return ret
	}
	return *o.NegateSource
}

// GetNegateSourceOk returns a tuple with the NegateSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetNegateSourceOk() (*bool, bool) {
	if o == nil || IsNil(o.NegateSource) {
		return nil, false
	}
	return o.NegateSource, true
}

// HasNegateSource returns a boolean if a field has been set.
func (o *SdwanRules) HasNegateSource() bool {
	if o != nil && !IsNil(o.NegateSource) {
		return true
	}

	return false
}

// SetNegateSource gets a reference to the given bool and assigns it to the NegateSource field.
func (o *SdwanRules) SetNegateSource(v bool) {
	o.NegateSource = &v
}

// GetPathQualityProfile returns the PathQualityProfile field value
func (o *SdwanRules) GetPathQualityProfile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PathQualityProfile
}

// GetPathQualityProfileOk returns a tuple with the PathQualityProfile field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetPathQualityProfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathQualityProfile, true
}

// SetPathQualityProfile sets field value
func (o *SdwanRules) SetPathQualityProfile(v string) {
	o.PathQualityProfile = v
}

// GetPosition returns the Position field value
func (o *SdwanRules) GetPosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetPositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *SdwanRules) SetPosition(v string) {
	o.Position = v
}

// GetSaasQualityProfile returns the SaasQualityProfile field value if set, zero value otherwise.
func (o *SdwanRules) GetSaasQualityProfile() string {
	if o == nil || IsNil(o.SaasQualityProfile) {
		var ret string
		return ret
	}
	return *o.SaasQualityProfile
}

// GetSaasQualityProfileOk returns a tuple with the SaasQualityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetSaasQualityProfileOk() (*string, bool) {
	if o == nil || IsNil(o.SaasQualityProfile) {
		return nil, false
	}
	return o.SaasQualityProfile, true
}

// HasSaasQualityProfile returns a boolean if a field has been set.
func (o *SdwanRules) HasSaasQualityProfile() bool {
	if o != nil && !IsNil(o.SaasQualityProfile) {
		return true
	}

	return false
}

// SetSaasQualityProfile gets a reference to the given string and assigns it to the SaasQualityProfile field.
func (o *SdwanRules) SetSaasQualityProfile(v string) {
	o.SaasQualityProfile = &v
}

// GetService returns the Service field value
func (o *SdwanRules) GetService() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetServiceOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Service, true
}

// SetService sets field value
func (o *SdwanRules) SetService(v []string) {
	o.Service = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *SdwanRules) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *SdwanRules) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *SdwanRules) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSource returns the Source field value
func (o *SdwanRules) GetSource() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetSourceOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source, true
}

// SetSource sets field value
func (o *SdwanRules) SetSource(v []string) {
	o.Source = v
}

// GetSourceUser returns the SourceUser field value
func (o *SdwanRules) GetSourceUser() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SourceUser
}

// GetSourceUserOk returns a tuple with the SourceUser field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetSourceUserOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceUser, true
}

// SetSourceUser sets field value
func (o *SdwanRules) SetSourceUser(v []string) {
	o.SourceUser = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *SdwanRules) GetTag() []string {
	if o == nil || IsNil(o.Tag) {
		var ret []string
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetTagOk() ([]string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *SdwanRules) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given []string and assigns it to the Tag field.
func (o *SdwanRules) SetTag(v []string) {
	o.Tag = v
}

// GetTo returns the To field value
func (o *SdwanRules) GetTo() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *SdwanRules) GetToOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.To, true
}

// SetTo sets field value
func (o *SdwanRules) SetTo(v []string) {
	o.To = v
}

func (o SdwanRules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdwanRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["application"] = o.Application
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["destination"] = o.Destination
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.ErrorCorrectionProfile) {
		toSerialize["error_correction_profile"] = o.ErrorCorrectionProfile
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	toSerialize["from"] = o.From
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NegateDestination) {
		toSerialize["negate_destination"] = o.NegateDestination
	}
	if !IsNil(o.NegateSource) {
		toSerialize["negate_source"] = o.NegateSource
	}
	toSerialize["path_quality_profile"] = o.PathQualityProfile
	toSerialize["position"] = o.Position
	if !IsNil(o.SaasQualityProfile) {
		toSerialize["saas_quality_profile"] = o.SaasQualityProfile
	}
	toSerialize["service"] = o.Service
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	toSerialize["source"] = o.Source
	toSerialize["source_user"] = o.SourceUser
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	toSerialize["to"] = o.To

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SdwanRules) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"application",
		"destination",
		"from",
		"name",
		"path_quality_profile",
		"position",
		"service",
		"source",
		"source_user",
		"to",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSdwanRules := _SdwanRules{}

	err = json.Unmarshal(data, &varSdwanRules)

	if err != nil {
		return err
	}

	*o = SdwanRules(varSdwanRules)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "application")
		delete(additionalProperties, "description")
		delete(additionalProperties, "destination")
		delete(additionalProperties, "device")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "error_correction_profile")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "from")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "negate_destination")
		delete(additionalProperties, "negate_source")
		delete(additionalProperties, "path_quality_profile")
		delete(additionalProperties, "position")
		delete(additionalProperties, "saas_quality_profile")
		delete(additionalProperties, "service")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "source")
		delete(additionalProperties, "source_user")
		delete(additionalProperties, "tag")
		delete(additionalProperties, "to")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSdwanRules struct {
	value *SdwanRules
	isSet bool
}

func (v NullableSdwanRules) Get() *SdwanRules {
	return v.value
}

func (v *NullableSdwanRules) Set(val *SdwanRules) {
	v.value = val
	v.isSet = true
}

func (v NullableSdwanRules) IsSet() bool {
	return v.isSet
}

func (v *NullableSdwanRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdwanRules(val *SdwanRules) *NullableSdwanRules {
	return &NullableSdwanRules{value: val, isSet: true}
}

func (v NullableSdwanRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdwanRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
