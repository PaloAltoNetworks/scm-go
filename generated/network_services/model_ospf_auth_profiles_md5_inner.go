/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the OspfAuthProfilesMd5Inner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspfAuthProfilesMd5Inner{}

// OspfAuthProfilesMd5Inner struct for OspfAuthProfilesMd5Inner
type OspfAuthProfilesMd5Inner struct {
	// MD5 hash
	Key *string `json:"key,omitempty"`
	// Key ID
	Name *int32 `json:"name,omitempty"`
	// Preferred?
	Preferred            *bool `json:"preferred,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OspfAuthProfilesMd5Inner OspfAuthProfilesMd5Inner

// NewOspfAuthProfilesMd5Inner instantiates a new OspfAuthProfilesMd5Inner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspfAuthProfilesMd5Inner() *OspfAuthProfilesMd5Inner {
	this := OspfAuthProfilesMd5Inner{}
	return &this
}

// NewOspfAuthProfilesMd5InnerWithDefaults instantiates a new OspfAuthProfilesMd5Inner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspfAuthProfilesMd5InnerWithDefaults() *OspfAuthProfilesMd5Inner {
	this := OspfAuthProfilesMd5Inner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *OspfAuthProfilesMd5Inner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAuthProfilesMd5Inner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *OspfAuthProfilesMd5Inner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *OspfAuthProfilesMd5Inner) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OspfAuthProfilesMd5Inner) GetName() int32 {
	if o == nil || IsNil(o.Name) {
		var ret int32
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAuthProfilesMd5Inner) GetNameOk() (*int32, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OspfAuthProfilesMd5Inner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given int32 and assigns it to the Name field.
func (o *OspfAuthProfilesMd5Inner) SetName(v int32) {
	o.Name = &v
}

// GetPreferred returns the Preferred field value if set, zero value otherwise.
func (o *OspfAuthProfilesMd5Inner) GetPreferred() bool {
	if o == nil || IsNil(o.Preferred) {
		var ret bool
		return ret
	}
	return *o.Preferred
}

// GetPreferredOk returns a tuple with the Preferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAuthProfilesMd5Inner) GetPreferredOk() (*bool, bool) {
	if o == nil || IsNil(o.Preferred) {
		return nil, false
	}
	return o.Preferred, true
}

// HasPreferred returns a boolean if a field has been set.
func (o *OspfAuthProfilesMd5Inner) HasPreferred() bool {
	if o != nil && !IsNil(o.Preferred) {
		return true
	}

	return false
}

// SetPreferred gets a reference to the given bool and assigns it to the Preferred field.
func (o *OspfAuthProfilesMd5Inner) SetPreferred(v bool) {
	o.Preferred = &v
}

func (o OspfAuthProfilesMd5Inner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspfAuthProfilesMd5Inner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Preferred) {
		toSerialize["preferred"] = o.Preferred
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OspfAuthProfilesMd5Inner) UnmarshalJSON(data []byte) (err error) {
	varOspfAuthProfilesMd5Inner := _OspfAuthProfilesMd5Inner{}

	err = json.Unmarshal(data, &varOspfAuthProfilesMd5Inner)

	if err != nil {
		return err
	}

	*o = OspfAuthProfilesMd5Inner(varOspfAuthProfilesMd5Inner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		delete(additionalProperties, "name")
		delete(additionalProperties, "preferred")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOspfAuthProfilesMd5Inner struct {
	value *OspfAuthProfilesMd5Inner
	isSet bool
}

func (v NullableOspfAuthProfilesMd5Inner) Get() *OspfAuthProfilesMd5Inner {
	return v.value
}

func (v *NullableOspfAuthProfilesMd5Inner) Set(val *OspfAuthProfilesMd5Inner) {
	v.value = val
	v.isSet = true
}

func (v NullableOspfAuthProfilesMd5Inner) IsSet() bool {
	return v.isSet
}

func (v *NullableOspfAuthProfilesMd5Inner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspfAuthProfilesMd5Inner(val *OspfAuthProfilesMd5Inner) *NullableOspfAuthProfilesMd5Inner {
	return &NullableOspfAuthProfilesMd5Inner{value: val, isSet: true}
}

func (v NullableOspfAuthProfilesMd5Inner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspfAuthProfilesMd5Inner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
