/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the DnsProxiesStaticEntriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsProxiesStaticEntriesInner{}

// DnsProxiesStaticEntriesInner Static domain name mappings
type DnsProxiesStaticEntriesInner struct {
	Address []string `json:"address"`
	// Fully qualified domain name
	Domain string `json:"domain"`
	// Static entry name
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _DnsProxiesStaticEntriesInner DnsProxiesStaticEntriesInner

// NewDnsProxiesStaticEntriesInner instantiates a new DnsProxiesStaticEntriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsProxiesStaticEntriesInner(address []string, domain string, name string) *DnsProxiesStaticEntriesInner {
	this := DnsProxiesStaticEntriesInner{}
	this.Address = address
	this.Domain = domain
	this.Name = name
	return &this
}

// NewDnsProxiesStaticEntriesInnerWithDefaults instantiates a new DnsProxiesStaticEntriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsProxiesStaticEntriesInnerWithDefaults() *DnsProxiesStaticEntriesInner {
	this := DnsProxiesStaticEntriesInner{}
	return &this
}

// GetAddress returns the Address field value
func (o *DnsProxiesStaticEntriesInner) GetAddress() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *DnsProxiesStaticEntriesInner) GetAddressOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address, true
}

// SetAddress sets field value
func (o *DnsProxiesStaticEntriesInner) SetAddress(v []string) {
	o.Address = v
}

// GetDomain returns the Domain field value
func (o *DnsProxiesStaticEntriesInner) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *DnsProxiesStaticEntriesInner) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *DnsProxiesStaticEntriesInner) SetDomain(v string) {
	o.Domain = v
}

// GetName returns the Name field value
func (o *DnsProxiesStaticEntriesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DnsProxiesStaticEntriesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DnsProxiesStaticEntriesInner) SetName(v string) {
	o.Name = v
}

func (o DnsProxiesStaticEntriesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsProxiesStaticEntriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["domain"] = o.Domain
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DnsProxiesStaticEntriesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"domain",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDnsProxiesStaticEntriesInner := _DnsProxiesStaticEntriesInner{}

	err = json.Unmarshal(data, &varDnsProxiesStaticEntriesInner)

	if err != nil {
		return err
	}

	*o = DnsProxiesStaticEntriesInner(varDnsProxiesStaticEntriesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "domain")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDnsProxiesStaticEntriesInner struct {
	value *DnsProxiesStaticEntriesInner
	isSet bool
}

func (v NullableDnsProxiesStaticEntriesInner) Get() *DnsProxiesStaticEntriesInner {
	return v.value
}

func (v *NullableDnsProxiesStaticEntriesInner) Set(val *DnsProxiesStaticEntriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsProxiesStaticEntriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsProxiesStaticEntriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsProxiesStaticEntriesInner(val *DnsProxiesStaticEntriesInner) *NullableDnsProxiesStaticEntriesInner {
	return &NullableDnsProxiesStaticEntriesInner{value: val, isSet: true}
}

func (v NullableDnsProxiesStaticEntriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsProxiesStaticEntriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
