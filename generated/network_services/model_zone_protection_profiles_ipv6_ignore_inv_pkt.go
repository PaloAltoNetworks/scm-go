/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the ZoneProtectionProfilesIpv6IgnoreInvPkt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneProtectionProfilesIpv6IgnoreInvPkt{}

// ZoneProtectionProfilesIpv6IgnoreInvPkt struct for ZoneProtectionProfilesIpv6IgnoreInvPkt
type ZoneProtectionProfilesIpv6IgnoreInvPkt struct {
	// Require an explicit Security policy match for Destination Unreachable ICMPv6 messages, even when the message is associated with an existing session.
	DestUnreach *bool `json:"dest_unreach,omitempty"`
	// Require an explicit Security policy match for Parameter Problem ICMPv6 messages, even when the message is associated with an existing session.
	ParamProblem *bool `json:"param_problem,omitempty"`
	// Require an explicit Security policy match for Packet Too Big ICMPv6 messages, even when the message is associated with an existing session.
	PktTooBig *bool `json:"pkt_too_big,omitempty"`
	// Require an explicit Security policy match for Redirect Message ICMPv6 messages, even when the message is associated with an existing session.
	Redirect *bool `json:"redirect,omitempty"`
	// Require an explicit Security policy match for Time Exceeded ICMPv6 messages, even when the message is associated with an existing session.
	TimeExceeded         *bool `json:"time_exceeded,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ZoneProtectionProfilesIpv6IgnoreInvPkt ZoneProtectionProfilesIpv6IgnoreInvPkt

// NewZoneProtectionProfilesIpv6IgnoreInvPkt instantiates a new ZoneProtectionProfilesIpv6IgnoreInvPkt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneProtectionProfilesIpv6IgnoreInvPkt() *ZoneProtectionProfilesIpv6IgnoreInvPkt {
	this := ZoneProtectionProfilesIpv6IgnoreInvPkt{}
	return &this
}

// NewZoneProtectionProfilesIpv6IgnoreInvPktWithDefaults instantiates a new ZoneProtectionProfilesIpv6IgnoreInvPkt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneProtectionProfilesIpv6IgnoreInvPktWithDefaults() *ZoneProtectionProfilesIpv6IgnoreInvPkt {
	this := ZoneProtectionProfilesIpv6IgnoreInvPkt{}
	return &this
}

// GetDestUnreach returns the DestUnreach field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetDestUnreach() bool {
	if o == nil || IsNil(o.DestUnreach) {
		var ret bool
		return ret
	}
	return *o.DestUnreach
}

// GetDestUnreachOk returns a tuple with the DestUnreach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetDestUnreachOk() (*bool, bool) {
	if o == nil || IsNil(o.DestUnreach) {
		return nil, false
	}
	return o.DestUnreach, true
}

// HasDestUnreach returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) HasDestUnreach() bool {
	if o != nil && !IsNil(o.DestUnreach) {
		return true
	}

	return false
}

// SetDestUnreach gets a reference to the given bool and assigns it to the DestUnreach field.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) SetDestUnreach(v bool) {
	o.DestUnreach = &v
}

// GetParamProblem returns the ParamProblem field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetParamProblem() bool {
	if o == nil || IsNil(o.ParamProblem) {
		var ret bool
		return ret
	}
	return *o.ParamProblem
}

// GetParamProblemOk returns a tuple with the ParamProblem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetParamProblemOk() (*bool, bool) {
	if o == nil || IsNil(o.ParamProblem) {
		return nil, false
	}
	return o.ParamProblem, true
}

// HasParamProblem returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) HasParamProblem() bool {
	if o != nil && !IsNil(o.ParamProblem) {
		return true
	}

	return false
}

// SetParamProblem gets a reference to the given bool and assigns it to the ParamProblem field.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) SetParamProblem(v bool) {
	o.ParamProblem = &v
}

// GetPktTooBig returns the PktTooBig field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetPktTooBig() bool {
	if o == nil || IsNil(o.PktTooBig) {
		var ret bool
		return ret
	}
	return *o.PktTooBig
}

// GetPktTooBigOk returns a tuple with the PktTooBig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetPktTooBigOk() (*bool, bool) {
	if o == nil || IsNil(o.PktTooBig) {
		return nil, false
	}
	return o.PktTooBig, true
}

// HasPktTooBig returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) HasPktTooBig() bool {
	if o != nil && !IsNil(o.PktTooBig) {
		return true
	}

	return false
}

// SetPktTooBig gets a reference to the given bool and assigns it to the PktTooBig field.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) SetPktTooBig(v bool) {
	o.PktTooBig = &v
}

// GetRedirect returns the Redirect field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetRedirect() bool {
	if o == nil || IsNil(o.Redirect) {
		var ret bool
		return ret
	}
	return *o.Redirect
}

// GetRedirectOk returns a tuple with the Redirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetRedirectOk() (*bool, bool) {
	if o == nil || IsNil(o.Redirect) {
		return nil, false
	}
	return o.Redirect, true
}

// HasRedirect returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) HasRedirect() bool {
	if o != nil && !IsNil(o.Redirect) {
		return true
	}

	return false
}

// SetRedirect gets a reference to the given bool and assigns it to the Redirect field.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) SetRedirect(v bool) {
	o.Redirect = &v
}

// GetTimeExceeded returns the TimeExceeded field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetTimeExceeded() bool {
	if o == nil || IsNil(o.TimeExceeded) {
		var ret bool
		return ret
	}
	return *o.TimeExceeded
}

// GetTimeExceededOk returns a tuple with the TimeExceeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) GetTimeExceededOk() (*bool, bool) {
	if o == nil || IsNil(o.TimeExceeded) {
		return nil, false
	}
	return o.TimeExceeded, true
}

// HasTimeExceeded returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) HasTimeExceeded() bool {
	if o != nil && !IsNil(o.TimeExceeded) {
		return true
	}

	return false
}

// SetTimeExceeded gets a reference to the given bool and assigns it to the TimeExceeded field.
func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) SetTimeExceeded(v bool) {
	o.TimeExceeded = &v
}

func (o ZoneProtectionProfilesIpv6IgnoreInvPkt) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneProtectionProfilesIpv6IgnoreInvPkt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestUnreach) {
		toSerialize["dest_unreach"] = o.DestUnreach
	}
	if !IsNil(o.ParamProblem) {
		toSerialize["param_problem"] = o.ParamProblem
	}
	if !IsNil(o.PktTooBig) {
		toSerialize["pkt_too_big"] = o.PktTooBig
	}
	if !IsNil(o.Redirect) {
		toSerialize["redirect"] = o.Redirect
	}
	if !IsNil(o.TimeExceeded) {
		toSerialize["time_exceeded"] = o.TimeExceeded
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ZoneProtectionProfilesIpv6IgnoreInvPkt) UnmarshalJSON(data []byte) (err error) {
	varZoneProtectionProfilesIpv6IgnoreInvPkt := _ZoneProtectionProfilesIpv6IgnoreInvPkt{}

	err = json.Unmarshal(data, &varZoneProtectionProfilesIpv6IgnoreInvPkt)

	if err != nil {
		return err
	}

	*o = ZoneProtectionProfilesIpv6IgnoreInvPkt(varZoneProtectionProfilesIpv6IgnoreInvPkt)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dest_unreach")
		delete(additionalProperties, "param_problem")
		delete(additionalProperties, "pkt_too_big")
		delete(additionalProperties, "redirect")
		delete(additionalProperties, "time_exceeded")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableZoneProtectionProfilesIpv6IgnoreInvPkt struct {
	value *ZoneProtectionProfilesIpv6IgnoreInvPkt
	isSet bool
}

func (v NullableZoneProtectionProfilesIpv6IgnoreInvPkt) Get() *ZoneProtectionProfilesIpv6IgnoreInvPkt {
	return v.value
}

func (v *NullableZoneProtectionProfilesIpv6IgnoreInvPkt) Set(val *ZoneProtectionProfilesIpv6IgnoreInvPkt) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneProtectionProfilesIpv6IgnoreInvPkt) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneProtectionProfilesIpv6IgnoreInvPkt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneProtectionProfilesIpv6IgnoreInvPkt(val *ZoneProtectionProfilesIpv6IgnoreInvPkt) *NullableZoneProtectionProfilesIpv6IgnoreInvPkt {
	return &NullableZoneProtectionProfilesIpv6IgnoreInvPkt{value: val, isSet: true}
}

func (v NullableZoneProtectionProfilesIpv6IgnoreInvPkt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneProtectionProfilesIpv6IgnoreInvPkt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
