/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the IkeGatewaysLocalId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IkeGatewaysLocalId{}

// IkeGatewaysLocalId struct for IkeGatewaysLocalId
type IkeGatewaysLocalId struct {
	// Local ID string
	Id                   *string `json:"id,omitempty" validate:"regexp=^(.+\\\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\\\\\,|[^,])+)$"`
	Type                 *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IkeGatewaysLocalId IkeGatewaysLocalId

// NewIkeGatewaysLocalId instantiates a new IkeGatewaysLocalId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIkeGatewaysLocalId() *IkeGatewaysLocalId {
	this := IkeGatewaysLocalId{}
	return &this
}

// NewIkeGatewaysLocalIdWithDefaults instantiates a new IkeGatewaysLocalId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIkeGatewaysLocalIdWithDefaults() *IkeGatewaysLocalId {
	this := IkeGatewaysLocalId{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IkeGatewaysLocalId) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IkeGatewaysLocalId) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IkeGatewaysLocalId) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IkeGatewaysLocalId) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IkeGatewaysLocalId) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IkeGatewaysLocalId) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IkeGatewaysLocalId) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IkeGatewaysLocalId) SetType(v string) {
	o.Type = &v
}

func (o IkeGatewaysLocalId) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IkeGatewaysLocalId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IkeGatewaysLocalId) UnmarshalJSON(data []byte) (err error) {
	varIkeGatewaysLocalId := _IkeGatewaysLocalId{}

	err = json.Unmarshal(data, &varIkeGatewaysLocalId)

	if err != nil {
		return err
	}

	*o = IkeGatewaysLocalId(varIkeGatewaysLocalId)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIkeGatewaysLocalId struct {
	value *IkeGatewaysLocalId
	isSet bool
}

func (v NullableIkeGatewaysLocalId) Get() *IkeGatewaysLocalId {
	return v.value
}

func (v *NullableIkeGatewaysLocalId) Set(val *IkeGatewaysLocalId) {
	v.value = val
	v.isSet = true
}

func (v NullableIkeGatewaysLocalId) IsSet() bool {
	return v.isSet
}

func (v *NullableIkeGatewaysLocalId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIkeGatewaysLocalId(val *IkeGatewaysLocalId) *NullableIkeGatewaysLocalId {
	return &NullableIkeGatewaysLocalId{value: val, isSet: true}
}

func (v NullableIkeGatewaysLocalId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIkeGatewaysLocalId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
