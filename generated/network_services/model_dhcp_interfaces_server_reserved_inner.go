/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the DhcpInterfacesServerReservedInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DhcpInterfacesServerReservedInner{}

// DhcpInterfacesServerReservedInner struct for DhcpInterfacesServerReservedInner
type DhcpInterfacesServerReservedInner struct {
	// Reservation description
	Description *string `json:"description,omitempty"`
	// Reserved MAC address
	Mac *string `json:"mac,omitempty"`
	// Reserved IP address
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DhcpInterfacesServerReservedInner DhcpInterfacesServerReservedInner

// NewDhcpInterfacesServerReservedInner instantiates a new DhcpInterfacesServerReservedInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpInterfacesServerReservedInner() *DhcpInterfacesServerReservedInner {
	this := DhcpInterfacesServerReservedInner{}
	return &this
}

// NewDhcpInterfacesServerReservedInnerWithDefaults instantiates a new DhcpInterfacesServerReservedInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpInterfacesServerReservedInnerWithDefaults() *DhcpInterfacesServerReservedInner {
	this := DhcpInterfacesServerReservedInner{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DhcpInterfacesServerReservedInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerReservedInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DhcpInterfacesServerReservedInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DhcpInterfacesServerReservedInner) SetDescription(v string) {
	o.Description = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *DhcpInterfacesServerReservedInner) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerReservedInner) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *DhcpInterfacesServerReservedInner) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *DhcpInterfacesServerReservedInner) SetMac(v string) {
	o.Mac = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DhcpInterfacesServerReservedInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpInterfacesServerReservedInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DhcpInterfacesServerReservedInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DhcpInterfacesServerReservedInner) SetName(v string) {
	o.Name = &v
}

func (o DhcpInterfacesServerReservedInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DhcpInterfacesServerReservedInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DhcpInterfacesServerReservedInner) UnmarshalJSON(data []byte) (err error) {
	varDhcpInterfacesServerReservedInner := _DhcpInterfacesServerReservedInner{}

	err = json.Unmarshal(data, &varDhcpInterfacesServerReservedInner)

	if err != nil {
		return err
	}

	*o = DhcpInterfacesServerReservedInner(varDhcpInterfacesServerReservedInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDhcpInterfacesServerReservedInner struct {
	value *DhcpInterfacesServerReservedInner
	isSet bool
}

func (v NullableDhcpInterfacesServerReservedInner) Get() *DhcpInterfacesServerReservedInner {
	return v.value
}

func (v *NullableDhcpInterfacesServerReservedInner) Set(val *DhcpInterfacesServerReservedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpInterfacesServerReservedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpInterfacesServerReservedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpInterfacesServerReservedInner(val *DhcpInterfacesServerReservedInner) *NullableDhcpInterfacesServerReservedInner {
	return &NullableDhcpInterfacesServerReservedInner{value: val, isSet: true}
}

func (v NullableDhcpInterfacesServerReservedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpInterfacesServerReservedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
