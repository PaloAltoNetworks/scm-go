/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpRouteMapsRouteMapInnerMatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpRouteMapsRouteMapInnerMatch{}

// BgpRouteMapsRouteMapInnerMatch struct for BgpRouteMapsRouteMapInnerMatch
type BgpRouteMapsRouteMapInnerMatch struct {
	// AS path access list
	AsPathAccessList *string `json:"as_path_access_list,omitempty"`
	// Extended community
	ExtendedCommunity *string `json:"extended_community,omitempty"`
	// Interface
	Interface *string                             `json:"interface,omitempty"`
	Ipv4      *BgpRouteMapsRouteMapInnerMatchIpv4 `json:"ipv4,omitempty"`
	// Large community
	LargeCommunity  *string `json:"large_community,omitempty"`
	LocalPreference *int32  `json:"local_preference,omitempty"`
	// Metric
	Metric *int32 `json:"metric,omitempty"`
	// Origin
	Origin *string `json:"origin,omitempty"`
	// Peer
	Peer *string `json:"peer,omitempty"`
	// Regular community
	RegularCommunity *string `json:"regular_community,omitempty"`
	// Tag
	Tag                  *int32 `json:"tag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpRouteMapsRouteMapInnerMatch BgpRouteMapsRouteMapInnerMatch

// NewBgpRouteMapsRouteMapInnerMatch instantiates a new BgpRouteMapsRouteMapInnerMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpRouteMapsRouteMapInnerMatch() *BgpRouteMapsRouteMapInnerMatch {
	this := BgpRouteMapsRouteMapInnerMatch{}
	return &this
}

// NewBgpRouteMapsRouteMapInnerMatchWithDefaults instantiates a new BgpRouteMapsRouteMapInnerMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpRouteMapsRouteMapInnerMatchWithDefaults() *BgpRouteMapsRouteMapInnerMatch {
	this := BgpRouteMapsRouteMapInnerMatch{}
	return &this
}

// GetAsPathAccessList returns the AsPathAccessList field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetAsPathAccessList() string {
	if o == nil || IsNil(o.AsPathAccessList) {
		var ret string
		return ret
	}
	return *o.AsPathAccessList
}

// GetAsPathAccessListOk returns a tuple with the AsPathAccessList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetAsPathAccessListOk() (*string, bool) {
	if o == nil || IsNil(o.AsPathAccessList) {
		return nil, false
	}
	return o.AsPathAccessList, true
}

// HasAsPathAccessList returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasAsPathAccessList() bool {
	if o != nil && !IsNil(o.AsPathAccessList) {
		return true
	}

	return false
}

// SetAsPathAccessList gets a reference to the given string and assigns it to the AsPathAccessList field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetAsPathAccessList(v string) {
	o.AsPathAccessList = &v
}

// GetExtendedCommunity returns the ExtendedCommunity field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetExtendedCommunity() string {
	if o == nil || IsNil(o.ExtendedCommunity) {
		var ret string
		return ret
	}
	return *o.ExtendedCommunity
}

// GetExtendedCommunityOk returns a tuple with the ExtendedCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetExtendedCommunityOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedCommunity) {
		return nil, false
	}
	return o.ExtendedCommunity, true
}

// HasExtendedCommunity returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasExtendedCommunity() bool {
	if o != nil && !IsNil(o.ExtendedCommunity) {
		return true
	}

	return false
}

// SetExtendedCommunity gets a reference to the given string and assigns it to the ExtendedCommunity field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetExtendedCommunity(v string) {
	o.ExtendedCommunity = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetInterface(v string) {
	o.Interface = &v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetIpv4() BgpRouteMapsRouteMapInnerMatchIpv4 {
	if o == nil || IsNil(o.Ipv4) {
		var ret BgpRouteMapsRouteMapInnerMatchIpv4
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetIpv4Ok() (*BgpRouteMapsRouteMapInnerMatchIpv4, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given BgpRouteMapsRouteMapInnerMatchIpv4 and assigns it to the Ipv4 field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetIpv4(v BgpRouteMapsRouteMapInnerMatchIpv4) {
	o.Ipv4 = &v
}

// GetLargeCommunity returns the LargeCommunity field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetLargeCommunity() string {
	if o == nil || IsNil(o.LargeCommunity) {
		var ret string
		return ret
	}
	return *o.LargeCommunity
}

// GetLargeCommunityOk returns a tuple with the LargeCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetLargeCommunityOk() (*string, bool) {
	if o == nil || IsNil(o.LargeCommunity) {
		return nil, false
	}
	return o.LargeCommunity, true
}

// HasLargeCommunity returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasLargeCommunity() bool {
	if o != nil && !IsNil(o.LargeCommunity) {
		return true
	}

	return false
}

// SetLargeCommunity gets a reference to the given string and assigns it to the LargeCommunity field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetLargeCommunity(v string) {
	o.LargeCommunity = &v
}

// GetLocalPreference returns the LocalPreference field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetLocalPreference() int32 {
	if o == nil || IsNil(o.LocalPreference) {
		var ret int32
		return ret
	}
	return *o.LocalPreference
}

// GetLocalPreferenceOk returns a tuple with the LocalPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetLocalPreferenceOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalPreference) {
		return nil, false
	}
	return o.LocalPreference, true
}

// HasLocalPreference returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasLocalPreference() bool {
	if o != nil && !IsNil(o.LocalPreference) {
		return true
	}

	return false
}

// SetLocalPreference gets a reference to the given int32 and assigns it to the LocalPreference field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetLocalPreference(v int32) {
	o.LocalPreference = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetMetric() int32 {
	if o == nil || IsNil(o.Metric) {
		var ret int32
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetMetricOk() (*int32, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given int32 and assigns it to the Metric field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetMetric(v int32) {
	o.Metric = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetOrigin(v string) {
	o.Origin = &v
}

// GetPeer returns the Peer field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetPeer() string {
	if o == nil || IsNil(o.Peer) {
		var ret string
		return ret
	}
	return *o.Peer
}

// GetPeerOk returns a tuple with the Peer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetPeerOk() (*string, bool) {
	if o == nil || IsNil(o.Peer) {
		return nil, false
	}
	return o.Peer, true
}

// HasPeer returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasPeer() bool {
	if o != nil && !IsNil(o.Peer) {
		return true
	}

	return false
}

// SetPeer gets a reference to the given string and assigns it to the Peer field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetPeer(v string) {
	o.Peer = &v
}

// GetRegularCommunity returns the RegularCommunity field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetRegularCommunity() string {
	if o == nil || IsNil(o.RegularCommunity) {
		var ret string
		return ret
	}
	return *o.RegularCommunity
}

// GetRegularCommunityOk returns a tuple with the RegularCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetRegularCommunityOk() (*string, bool) {
	if o == nil || IsNil(o.RegularCommunity) {
		return nil, false
	}
	return o.RegularCommunity, true
}

// HasRegularCommunity returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasRegularCommunity() bool {
	if o != nil && !IsNil(o.RegularCommunity) {
		return true
	}

	return false
}

// SetRegularCommunity gets a reference to the given string and assigns it to the RegularCommunity field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetRegularCommunity(v string) {
	o.RegularCommunity = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *BgpRouteMapsRouteMapInnerMatch) GetTag() int32 {
	if o == nil || IsNil(o.Tag) {
		var ret int32
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) GetTagOk() (*int32, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *BgpRouteMapsRouteMapInnerMatch) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given int32 and assigns it to the Tag field.
func (o *BgpRouteMapsRouteMapInnerMatch) SetTag(v int32) {
	o.Tag = &v
}

func (o BgpRouteMapsRouteMapInnerMatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpRouteMapsRouteMapInnerMatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsPathAccessList) {
		toSerialize["as_path_access_list"] = o.AsPathAccessList
	}
	if !IsNil(o.ExtendedCommunity) {
		toSerialize["extended_community"] = o.ExtendedCommunity
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.LargeCommunity) {
		toSerialize["large_community"] = o.LargeCommunity
	}
	if !IsNil(o.LocalPreference) {
		toSerialize["local_preference"] = o.LocalPreference
	}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Peer) {
		toSerialize["peer"] = o.Peer
	}
	if !IsNil(o.RegularCommunity) {
		toSerialize["regular_community"] = o.RegularCommunity
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpRouteMapsRouteMapInnerMatch) UnmarshalJSON(data []byte) (err error) {
	varBgpRouteMapsRouteMapInnerMatch := _BgpRouteMapsRouteMapInnerMatch{}

	err = json.Unmarshal(data, &varBgpRouteMapsRouteMapInnerMatch)

	if err != nil {
		return err
	}

	*o = BgpRouteMapsRouteMapInnerMatch(varBgpRouteMapsRouteMapInnerMatch)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "as_path_access_list")
		delete(additionalProperties, "extended_community")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "large_community")
		delete(additionalProperties, "local_preference")
		delete(additionalProperties, "metric")
		delete(additionalProperties, "origin")
		delete(additionalProperties, "peer")
		delete(additionalProperties, "regular_community")
		delete(additionalProperties, "tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpRouteMapsRouteMapInnerMatch struct {
	value *BgpRouteMapsRouteMapInnerMatch
	isSet bool
}

func (v NullableBgpRouteMapsRouteMapInnerMatch) Get() *BgpRouteMapsRouteMapInnerMatch {
	return v.value
}

func (v *NullableBgpRouteMapsRouteMapInnerMatch) Set(val *BgpRouteMapsRouteMapInnerMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRouteMapsRouteMapInnerMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRouteMapsRouteMapInnerMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRouteMapsRouteMapInnerMatch(val *BgpRouteMapsRouteMapInnerMatch) *NullableBgpRouteMapsRouteMapInnerMatch {
	return &NullableBgpRouteMapsRouteMapInnerMatch{value: val, isSet: true}
}

func (v NullableBgpRouteMapsRouteMapInnerMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRouteMapsRouteMapInnerMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
