/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the IpsecTunnels type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpsecTunnels{}

// IpsecTunnels struct for IpsecTunnels
type IpsecTunnels struct {
	// Enable Anti-Replay check on this tunnel
	AntiReplay *bool               `json:"anti_replay,omitempty"`
	AutoKey    IpsecTunnelsAutoKey `json:"auto_key"`
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended)
	CopyTos *bool `json:"copy_tos,omitempty"`
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// allow GRE over IPSec
	EnableGreEncapsulation *bool `json:"enable_gre_encapsulation,omitempty"`
	// The folder in which the resource is defined
	Folder *string `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// UUID of the resource
	Id *string `json:"id,omitempty"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]
	Name string `json:"name"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// Tunnel interface variable or hardcoded tunnel. Default will be tunnels.
	TunnelInterface      *string                    `json:"tunnel_interface,omitempty"`
	TunnelMonitor        *IpsecTunnelsTunnelMonitor `json:"tunnel_monitor,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IpsecTunnels IpsecTunnels

// NewIpsecTunnels instantiates a new IpsecTunnels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpsecTunnels(autoKey IpsecTunnelsAutoKey, name string) *IpsecTunnels {
	this := IpsecTunnels{}
	this.AutoKey = autoKey
	var copyTos bool = false
	this.CopyTos = &copyTos
	var enableGreEncapsulation bool = false
	this.EnableGreEncapsulation = &enableGreEncapsulation
	this.Name = name
	var tunnelInterface string = "tunnel"
	this.TunnelInterface = &tunnelInterface
	return &this
}

// NewIpsecTunnelsWithDefaults instantiates a new IpsecTunnels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpsecTunnelsWithDefaults() *IpsecTunnels {
	this := IpsecTunnels{}
	var copyTos bool = false
	this.CopyTos = &copyTos
	var enableGreEncapsulation bool = false
	this.EnableGreEncapsulation = &enableGreEncapsulation
	var tunnelInterface string = "tunnel"
	this.TunnelInterface = &tunnelInterface
	return &this
}

// GetAntiReplay returns the AntiReplay field value if set, zero value otherwise.
func (o *IpsecTunnels) GetAntiReplay() bool {
	if o == nil || IsNil(o.AntiReplay) {
		var ret bool
		return ret
	}
	return *o.AntiReplay
}

// GetAntiReplayOk returns a tuple with the AntiReplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetAntiReplayOk() (*bool, bool) {
	if o == nil || IsNil(o.AntiReplay) {
		return nil, false
	}
	return o.AntiReplay, true
}

// HasAntiReplay returns a boolean if a field has been set.
func (o *IpsecTunnels) HasAntiReplay() bool {
	if o != nil && !IsNil(o.AntiReplay) {
		return true
	}

	return false
}

// SetAntiReplay gets a reference to the given bool and assigns it to the AntiReplay field.
func (o *IpsecTunnels) SetAntiReplay(v bool) {
	o.AntiReplay = &v
}

// GetAutoKey returns the AutoKey field value
func (o *IpsecTunnels) GetAutoKey() IpsecTunnelsAutoKey {
	if o == nil {
		var ret IpsecTunnelsAutoKey
		return ret
	}

	return o.AutoKey
}

// GetAutoKeyOk returns a tuple with the AutoKey field value
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetAutoKeyOk() (*IpsecTunnelsAutoKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoKey, true
}

// SetAutoKey sets field value
func (o *IpsecTunnels) SetAutoKey(v IpsecTunnelsAutoKey) {
	o.AutoKey = v
}

// GetCopyTos returns the CopyTos field value if set, zero value otherwise.
func (o *IpsecTunnels) GetCopyTos() bool {
	if o == nil || IsNil(o.CopyTos) {
		var ret bool
		return ret
	}
	return *o.CopyTos
}

// GetCopyTosOk returns a tuple with the CopyTos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetCopyTosOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyTos) {
		return nil, false
	}
	return o.CopyTos, true
}

// HasCopyTos returns a boolean if a field has been set.
func (o *IpsecTunnels) HasCopyTos() bool {
	if o != nil && !IsNil(o.CopyTos) {
		return true
	}

	return false
}

// SetCopyTos gets a reference to the given bool and assigns it to the CopyTos field.
func (o *IpsecTunnels) SetCopyTos(v bool) {
	o.CopyTos = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *IpsecTunnels) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *IpsecTunnels) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *IpsecTunnels) SetDevice(v string) {
	o.Device = &v
}

// GetEnableGreEncapsulation returns the EnableGreEncapsulation field value if set, zero value otherwise.
func (o *IpsecTunnels) GetEnableGreEncapsulation() bool {
	if o == nil || IsNil(o.EnableGreEncapsulation) {
		var ret bool
		return ret
	}
	return *o.EnableGreEncapsulation
}

// GetEnableGreEncapsulationOk returns a tuple with the EnableGreEncapsulation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetEnableGreEncapsulationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableGreEncapsulation) {
		return nil, false
	}
	return o.EnableGreEncapsulation, true
}

// HasEnableGreEncapsulation returns a boolean if a field has been set.
func (o *IpsecTunnels) HasEnableGreEncapsulation() bool {
	if o != nil && !IsNil(o.EnableGreEncapsulation) {
		return true
	}

	return false
}

// SetEnableGreEncapsulation gets a reference to the given bool and assigns it to the EnableGreEncapsulation field.
func (o *IpsecTunnels) SetEnableGreEncapsulation(v bool) {
	o.EnableGreEncapsulation = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *IpsecTunnels) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *IpsecTunnels) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *IpsecTunnels) SetFolder(v string) {
	o.Folder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IpsecTunnels) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IpsecTunnels) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IpsecTunnels) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *IpsecTunnels) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IpsecTunnels) SetName(v string) {
	o.Name = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *IpsecTunnels) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *IpsecTunnels) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *IpsecTunnels) SetSnippet(v string) {
	o.Snippet = &v
}

// GetTunnelInterface returns the TunnelInterface field value if set, zero value otherwise.
func (o *IpsecTunnels) GetTunnelInterface() string {
	if o == nil || IsNil(o.TunnelInterface) {
		var ret string
		return ret
	}
	return *o.TunnelInterface
}

// GetTunnelInterfaceOk returns a tuple with the TunnelInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetTunnelInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelInterface) {
		return nil, false
	}
	return o.TunnelInterface, true
}

// HasTunnelInterface returns a boolean if a field has been set.
func (o *IpsecTunnels) HasTunnelInterface() bool {
	if o != nil && !IsNil(o.TunnelInterface) {
		return true
	}

	return false
}

// SetTunnelInterface gets a reference to the given string and assigns it to the TunnelInterface field.
func (o *IpsecTunnels) SetTunnelInterface(v string) {
	o.TunnelInterface = &v
}

// GetTunnelMonitor returns the TunnelMonitor field value if set, zero value otherwise.
func (o *IpsecTunnels) GetTunnelMonitor() IpsecTunnelsTunnelMonitor {
	if o == nil || IsNil(o.TunnelMonitor) {
		var ret IpsecTunnelsTunnelMonitor
		return ret
	}
	return *o.TunnelMonitor
}

// GetTunnelMonitorOk returns a tuple with the TunnelMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnels) GetTunnelMonitorOk() (*IpsecTunnelsTunnelMonitor, bool) {
	if o == nil || IsNil(o.TunnelMonitor) {
		return nil, false
	}
	return o.TunnelMonitor, true
}

// HasTunnelMonitor returns a boolean if a field has been set.
func (o *IpsecTunnels) HasTunnelMonitor() bool {
	if o != nil && !IsNil(o.TunnelMonitor) {
		return true
	}

	return false
}

// SetTunnelMonitor gets a reference to the given IpsecTunnelsTunnelMonitor and assigns it to the TunnelMonitor field.
func (o *IpsecTunnels) SetTunnelMonitor(v IpsecTunnelsTunnelMonitor) {
	o.TunnelMonitor = &v
}

func (o IpsecTunnels) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpsecTunnels) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiReplay) {
		toSerialize["anti_replay"] = o.AntiReplay
	}
	toSerialize["auto_key"] = o.AutoKey
	if !IsNil(o.CopyTos) {
		toSerialize["copy_tos"] = o.CopyTos
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.EnableGreEncapsulation) {
		toSerialize["enable_gre_encapsulation"] = o.EnableGreEncapsulation
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.TunnelInterface) {
		toSerialize["tunnel_interface"] = o.TunnelInterface
	}
	if !IsNil(o.TunnelMonitor) {
		toSerialize["tunnel_monitor"] = o.TunnelMonitor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IpsecTunnels) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auto_key",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIpsecTunnels := _IpsecTunnels{}

	err = json.Unmarshal(data, &varIpsecTunnels)

	if err != nil {
		return err
	}

	*o = IpsecTunnels(varIpsecTunnels)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "anti_replay")
		delete(additionalProperties, "auto_key")
		delete(additionalProperties, "copy_tos")
		delete(additionalProperties, "device")
		delete(additionalProperties, "enable_gre_encapsulation")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "tunnel_interface")
		delete(additionalProperties, "tunnel_monitor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpsecTunnels struct {
	value *IpsecTunnels
	isSet bool
}

func (v NullableIpsecTunnels) Get() *IpsecTunnels {
	return v.value
}

func (v *NullableIpsecTunnels) Set(val *IpsecTunnels) {
	v.value = val
	v.isSet = true
}

func (v NullableIpsecTunnels) IsSet() bool {
	return v.isSet
}

func (v *NullableIpsecTunnels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpsecTunnels(val *IpsecTunnels) *NullableIpsecTunnels {
	return &NullableIpsecTunnels{value: val, isSet: true}
}

func (v NullableIpsecTunnels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpsecTunnels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
