/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastPim type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastPim{}

// LogicalRoutersVrfInnerMulticastPim struct for LogicalRoutersVrfInnerMulticastPim
type LogicalRoutersVrfInnerMulticastPim struct {
	Enable               *bool                                                 `json:"enable,omitempty"`
	GroupPermission      *string                                               `json:"group_permission,omitempty"`
	IfTimerGlobal        *string                                               `json:"if_timer_global,omitempty"`
	Interface            []LogicalRoutersVrfInnerMulticastPimInterfaceInner    `json:"interface,omitempty"`
	RouteAgeoutTime      *float32                                              `json:"route_ageout_time,omitempty"`
	Rp                   *LogicalRoutersVrfInnerMulticastPimRp                 `json:"rp,omitempty"`
	RpfLookupMode        *string                                               `json:"rpf_lookup_mode,omitempty"`
	SptThreshold         []LogicalRoutersVrfInnerMulticastPimSptThresholdInner `json:"spt_threshold,omitempty"`
	SsmAddressSpace      *LogicalRoutersVrfInnerMulticastPimSsmAddressSpace    `json:"ssm_address_space,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastPim LogicalRoutersVrfInnerMulticastPim

// NewLogicalRoutersVrfInnerMulticastPim instantiates a new LogicalRoutersVrfInnerMulticastPim object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastPim() *LogicalRoutersVrfInnerMulticastPim {
	this := LogicalRoutersVrfInnerMulticastPim{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastPimWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastPim object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastPimWithDefaults() *LogicalRoutersVrfInnerMulticastPim {
	this := LogicalRoutersVrfInnerMulticastPim{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetEnable(v bool) {
	o.Enable = &v
}

// GetGroupPermission returns the GroupPermission field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetGroupPermission() string {
	if o == nil || IsNil(o.GroupPermission) {
		var ret string
		return ret
	}
	return *o.GroupPermission
}

// GetGroupPermissionOk returns a tuple with the GroupPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetGroupPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.GroupPermission) {
		return nil, false
	}
	return o.GroupPermission, true
}

// HasGroupPermission returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasGroupPermission() bool {
	if o != nil && !IsNil(o.GroupPermission) {
		return true
	}

	return false
}

// SetGroupPermission gets a reference to the given string and assigns it to the GroupPermission field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetGroupPermission(v string) {
	o.GroupPermission = &v
}

// GetIfTimerGlobal returns the IfTimerGlobal field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetIfTimerGlobal() string {
	if o == nil || IsNil(o.IfTimerGlobal) {
		var ret string
		return ret
	}
	return *o.IfTimerGlobal
}

// GetIfTimerGlobalOk returns a tuple with the IfTimerGlobal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetIfTimerGlobalOk() (*string, bool) {
	if o == nil || IsNil(o.IfTimerGlobal) {
		return nil, false
	}
	return o.IfTimerGlobal, true
}

// HasIfTimerGlobal returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasIfTimerGlobal() bool {
	if o != nil && !IsNil(o.IfTimerGlobal) {
		return true
	}

	return false
}

// SetIfTimerGlobal gets a reference to the given string and assigns it to the IfTimerGlobal field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetIfTimerGlobal(v string) {
	o.IfTimerGlobal = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetInterface() []LogicalRoutersVrfInnerMulticastPimInterfaceInner {
	if o == nil || IsNil(o.Interface) {
		var ret []LogicalRoutersVrfInnerMulticastPimInterfaceInner
		return ret
	}
	return o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetInterfaceOk() ([]LogicalRoutersVrfInnerMulticastPimInterfaceInner, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given []LogicalRoutersVrfInnerMulticastPimInterfaceInner and assigns it to the Interface field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetInterface(v []LogicalRoutersVrfInnerMulticastPimInterfaceInner) {
	o.Interface = v
}

// GetRouteAgeoutTime returns the RouteAgeoutTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetRouteAgeoutTime() float32 {
	if o == nil || IsNil(o.RouteAgeoutTime) {
		var ret float32
		return ret
	}
	return *o.RouteAgeoutTime
}

// GetRouteAgeoutTimeOk returns a tuple with the RouteAgeoutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetRouteAgeoutTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.RouteAgeoutTime) {
		return nil, false
	}
	return o.RouteAgeoutTime, true
}

// HasRouteAgeoutTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasRouteAgeoutTime() bool {
	if o != nil && !IsNil(o.RouteAgeoutTime) {
		return true
	}

	return false
}

// SetRouteAgeoutTime gets a reference to the given float32 and assigns it to the RouteAgeoutTime field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetRouteAgeoutTime(v float32) {
	o.RouteAgeoutTime = &v
}

// GetRp returns the Rp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetRp() LogicalRoutersVrfInnerMulticastPimRp {
	if o == nil || IsNil(o.Rp) {
		var ret LogicalRoutersVrfInnerMulticastPimRp
		return ret
	}
	return *o.Rp
}

// GetRpOk returns a tuple with the Rp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetRpOk() (*LogicalRoutersVrfInnerMulticastPimRp, bool) {
	if o == nil || IsNil(o.Rp) {
		return nil, false
	}
	return o.Rp, true
}

// HasRp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasRp() bool {
	if o != nil && !IsNil(o.Rp) {
		return true
	}

	return false
}

// SetRp gets a reference to the given LogicalRoutersVrfInnerMulticastPimRp and assigns it to the Rp field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetRp(v LogicalRoutersVrfInnerMulticastPimRp) {
	o.Rp = &v
}

// GetRpfLookupMode returns the RpfLookupMode field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetRpfLookupMode() string {
	if o == nil || IsNil(o.RpfLookupMode) {
		var ret string
		return ret
	}
	return *o.RpfLookupMode
}

// GetRpfLookupModeOk returns a tuple with the RpfLookupMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetRpfLookupModeOk() (*string, bool) {
	if o == nil || IsNil(o.RpfLookupMode) {
		return nil, false
	}
	return o.RpfLookupMode, true
}

// HasRpfLookupMode returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasRpfLookupMode() bool {
	if o != nil && !IsNil(o.RpfLookupMode) {
		return true
	}

	return false
}

// SetRpfLookupMode gets a reference to the given string and assigns it to the RpfLookupMode field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetRpfLookupMode(v string) {
	o.RpfLookupMode = &v
}

// GetSptThreshold returns the SptThreshold field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetSptThreshold() []LogicalRoutersVrfInnerMulticastPimSptThresholdInner {
	if o == nil || IsNil(o.SptThreshold) {
		var ret []LogicalRoutersVrfInnerMulticastPimSptThresholdInner
		return ret
	}
	return o.SptThreshold
}

// GetSptThresholdOk returns a tuple with the SptThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetSptThresholdOk() ([]LogicalRoutersVrfInnerMulticastPimSptThresholdInner, bool) {
	if o == nil || IsNil(o.SptThreshold) {
		return nil, false
	}
	return o.SptThreshold, true
}

// HasSptThreshold returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasSptThreshold() bool {
	if o != nil && !IsNil(o.SptThreshold) {
		return true
	}

	return false
}

// SetSptThreshold gets a reference to the given []LogicalRoutersVrfInnerMulticastPimSptThresholdInner and assigns it to the SptThreshold field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetSptThreshold(v []LogicalRoutersVrfInnerMulticastPimSptThresholdInner) {
	o.SptThreshold = v
}

// GetSsmAddressSpace returns the SsmAddressSpace field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastPim) GetSsmAddressSpace() LogicalRoutersVrfInnerMulticastPimSsmAddressSpace {
	if o == nil || IsNil(o.SsmAddressSpace) {
		var ret LogicalRoutersVrfInnerMulticastPimSsmAddressSpace
		return ret
	}
	return *o.SsmAddressSpace
}

// GetSsmAddressSpaceOk returns a tuple with the SsmAddressSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) GetSsmAddressSpaceOk() (*LogicalRoutersVrfInnerMulticastPimSsmAddressSpace, bool) {
	if o == nil || IsNil(o.SsmAddressSpace) {
		return nil, false
	}
	return o.SsmAddressSpace, true
}

// HasSsmAddressSpace returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastPim) HasSsmAddressSpace() bool {
	if o != nil && !IsNil(o.SsmAddressSpace) {
		return true
	}

	return false
}

// SetSsmAddressSpace gets a reference to the given LogicalRoutersVrfInnerMulticastPimSsmAddressSpace and assigns it to the SsmAddressSpace field.
func (o *LogicalRoutersVrfInnerMulticastPim) SetSsmAddressSpace(v LogicalRoutersVrfInnerMulticastPimSsmAddressSpace) {
	o.SsmAddressSpace = &v
}

func (o LogicalRoutersVrfInnerMulticastPim) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastPim) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.GroupPermission) {
		toSerialize["group_permission"] = o.GroupPermission
	}
	if !IsNil(o.IfTimerGlobal) {
		toSerialize["if_timer_global"] = o.IfTimerGlobal
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.RouteAgeoutTime) {
		toSerialize["route_ageout_time"] = o.RouteAgeoutTime
	}
	if !IsNil(o.Rp) {
		toSerialize["rp"] = o.Rp
	}
	if !IsNil(o.RpfLookupMode) {
		toSerialize["rpf_lookup_mode"] = o.RpfLookupMode
	}
	if !IsNil(o.SptThreshold) {
		toSerialize["spt_threshold"] = o.SptThreshold
	}
	if !IsNil(o.SsmAddressSpace) {
		toSerialize["ssm_address_space"] = o.SsmAddressSpace
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastPim) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastPim := _LogicalRoutersVrfInnerMulticastPim{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastPim)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastPim(varLogicalRoutersVrfInnerMulticastPim)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "group_permission")
		delete(additionalProperties, "if_timer_global")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "route_ageout_time")
		delete(additionalProperties, "rp")
		delete(additionalProperties, "rpf_lookup_mode")
		delete(additionalProperties, "spt_threshold")
		delete(additionalProperties, "ssm_address_space")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastPim struct {
	value *LogicalRoutersVrfInnerMulticastPim
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastPim) Get() *LogicalRoutersVrfInnerMulticastPim {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastPim) Set(val *LogicalRoutersVrfInnerMulticastPim) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastPim) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastPim) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastPim(val *LogicalRoutersVrfInnerMulticastPim) *NullableLogicalRoutersVrfInnerMulticastPim {
	return &NullableLogicalRoutersVrfInnerMulticastPim{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastPim) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastPim) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
