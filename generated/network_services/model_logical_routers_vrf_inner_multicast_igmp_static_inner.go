/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerMulticastIgmpStaticInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastIgmpStaticInner{}

// LogicalRoutersVrfInnerMulticastIgmpStaticInner struct for LogicalRoutersVrfInnerMulticastIgmpStaticInner
type LogicalRoutersVrfInnerMulticastIgmpStaticInner struct {
	GroupAddress         *string `json:"group_address,omitempty"`
	Interface            *string `json:"interface,omitempty"`
	Name                 string  `json:"name"`
	SourceAddress        *string `json:"source_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastIgmpStaticInner LogicalRoutersVrfInnerMulticastIgmpStaticInner

// NewLogicalRoutersVrfInnerMulticastIgmpStaticInner instantiates a new LogicalRoutersVrfInnerMulticastIgmpStaticInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastIgmpStaticInner(name string) *LogicalRoutersVrfInnerMulticastIgmpStaticInner {
	this := LogicalRoutersVrfInnerMulticastIgmpStaticInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerMulticastIgmpStaticInnerWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastIgmpStaticInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastIgmpStaticInnerWithDefaults() *LogicalRoutersVrfInnerMulticastIgmpStaticInner {
	this := LogicalRoutersVrfInnerMulticastIgmpStaticInner{}
	return &this
}

// GetGroupAddress returns the GroupAddress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetGroupAddress() string {
	if o == nil || IsNil(o.GroupAddress) {
		var ret string
		return ret
	}
	return *o.GroupAddress
}

// GetGroupAddressOk returns a tuple with the GroupAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetGroupAddressOk() (*string, bool) {
	if o == nil || IsNil(o.GroupAddress) {
		return nil, false
	}
	return o.GroupAddress, true
}

// HasGroupAddress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) HasGroupAddress() bool {
	if o != nil && !IsNil(o.GroupAddress) {
		return true
	}

	return false
}

// SetGroupAddress gets a reference to the given string and assigns it to the GroupAddress field.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) SetGroupAddress(v string) {
	o.GroupAddress = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) SetInterface(v string) {
	o.Interface = &v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) SetName(v string) {
	o.Name = v
}

// GetSourceAddress returns the SourceAddress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetSourceAddress() string {
	if o == nil || IsNil(o.SourceAddress) {
		var ret string
		return ret
	}
	return *o.SourceAddress
}

// GetSourceAddressOk returns a tuple with the SourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) GetSourceAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAddress) {
		return nil, false
	}
	return o.SourceAddress, true
}

// HasSourceAddress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) HasSourceAddress() bool {
	if o != nil && !IsNil(o.SourceAddress) {
		return true
	}

	return false
}

// SetSourceAddress gets a reference to the given string and assigns it to the SourceAddress field.
func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) SetSourceAddress(v string) {
	o.SourceAddress = &v
}

func (o LogicalRoutersVrfInnerMulticastIgmpStaticInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastIgmpStaticInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupAddress) {
		toSerialize["group_address"] = o.GroupAddress
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.SourceAddress) {
		toSerialize["source_address"] = o.SourceAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastIgmpStaticInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerMulticastIgmpStaticInner := _LogicalRoutersVrfInnerMulticastIgmpStaticInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastIgmpStaticInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastIgmpStaticInner(varLogicalRoutersVrfInnerMulticastIgmpStaticInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "group_address")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "name")
		delete(additionalProperties, "source_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner struct {
	value *LogicalRoutersVrfInnerMulticastIgmpStaticInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner) Get() *LogicalRoutersVrfInnerMulticastIgmpStaticInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner) Set(val *LogicalRoutersVrfInnerMulticastIgmpStaticInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastIgmpStaticInner(val *LogicalRoutersVrfInnerMulticastIgmpStaticInner) *NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner {
	return &NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastIgmpStaticInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
