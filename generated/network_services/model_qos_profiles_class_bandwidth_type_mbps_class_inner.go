/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the QosProfilesClassBandwidthTypeMbpsClassInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosProfilesClassBandwidthTypeMbpsClassInner{}

// QosProfilesClassBandwidthTypeMbpsClassInner struct for QosProfilesClassBandwidthTypeMbpsClassInner
type QosProfilesClassBandwidthTypeMbpsClassInner struct {
	ClassBandwidth *QosProfilesClassBandwidthTypeMbpsClassInnerClassBandwidth `json:"class_bandwidth,omitempty"`
	// Traffic class
	Name *string `json:"name,omitempty"`
	// traffic class priority
	Priority             *string `json:"priority,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QosProfilesClassBandwidthTypeMbpsClassInner QosProfilesClassBandwidthTypeMbpsClassInner

// NewQosProfilesClassBandwidthTypeMbpsClassInner instantiates a new QosProfilesClassBandwidthTypeMbpsClassInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosProfilesClassBandwidthTypeMbpsClassInner() *QosProfilesClassBandwidthTypeMbpsClassInner {
	this := QosProfilesClassBandwidthTypeMbpsClassInner{}
	var priority string = "medium"
	this.Priority = &priority
	return &this
}

// NewQosProfilesClassBandwidthTypeMbpsClassInnerWithDefaults instantiates a new QosProfilesClassBandwidthTypeMbpsClassInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosProfilesClassBandwidthTypeMbpsClassInnerWithDefaults() *QosProfilesClassBandwidthTypeMbpsClassInner {
	this := QosProfilesClassBandwidthTypeMbpsClassInner{}
	var priority string = "medium"
	this.Priority = &priority
	return &this
}

// GetClassBandwidth returns the ClassBandwidth field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) GetClassBandwidth() QosProfilesClassBandwidthTypeMbpsClassInnerClassBandwidth {
	if o == nil || IsNil(o.ClassBandwidth) {
		var ret QosProfilesClassBandwidthTypeMbpsClassInnerClassBandwidth
		return ret
	}
	return *o.ClassBandwidth
}

// GetClassBandwidthOk returns a tuple with the ClassBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) GetClassBandwidthOk() (*QosProfilesClassBandwidthTypeMbpsClassInnerClassBandwidth, bool) {
	if o == nil || IsNil(o.ClassBandwidth) {
		return nil, false
	}
	return o.ClassBandwidth, true
}

// HasClassBandwidth returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) HasClassBandwidth() bool {
	if o != nil && !IsNil(o.ClassBandwidth) {
		return true
	}

	return false
}

// SetClassBandwidth gets a reference to the given QosProfilesClassBandwidthTypeMbpsClassInnerClassBandwidth and assigns it to the ClassBandwidth field.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) SetClassBandwidth(v QosProfilesClassBandwidthTypeMbpsClassInnerClassBandwidth) {
	o.ClassBandwidth = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) SetName(v string) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *QosProfilesClassBandwidthTypeMbpsClassInner) SetPriority(v string) {
	o.Priority = &v
}

func (o QosProfilesClassBandwidthTypeMbpsClassInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosProfilesClassBandwidthTypeMbpsClassInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassBandwidth) {
		toSerialize["class_bandwidth"] = o.ClassBandwidth
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QosProfilesClassBandwidthTypeMbpsClassInner) UnmarshalJSON(data []byte) (err error) {
	varQosProfilesClassBandwidthTypeMbpsClassInner := _QosProfilesClassBandwidthTypeMbpsClassInner{}

	err = json.Unmarshal(data, &varQosProfilesClassBandwidthTypeMbpsClassInner)

	if err != nil {
		return err
	}

	*o = QosProfilesClassBandwidthTypeMbpsClassInner(varQosProfilesClassBandwidthTypeMbpsClassInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "class_bandwidth")
		delete(additionalProperties, "name")
		delete(additionalProperties, "priority")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQosProfilesClassBandwidthTypeMbpsClassInner struct {
	value *QosProfilesClassBandwidthTypeMbpsClassInner
	isSet bool
}

func (v NullableQosProfilesClassBandwidthTypeMbpsClassInner) Get() *QosProfilesClassBandwidthTypeMbpsClassInner {
	return v.value
}

func (v *NullableQosProfilesClassBandwidthTypeMbpsClassInner) Set(val *QosProfilesClassBandwidthTypeMbpsClassInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQosProfilesClassBandwidthTypeMbpsClassInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQosProfilesClassBandwidthTypeMbpsClassInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosProfilesClassBandwidthTypeMbpsClassInner(val *QosProfilesClassBandwidthTypeMbpsClassInner) *NullableQosProfilesClassBandwidthTypeMbpsClassInner {
	return &NullableQosProfilesClassBandwidthTypeMbpsClassInner{value: val, isSet: true}
}

func (v NullableQosProfilesClassBandwidthTypeMbpsClassInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosProfilesClassBandwidthTypeMbpsClassInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
