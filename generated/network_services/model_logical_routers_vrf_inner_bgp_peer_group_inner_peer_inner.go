/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner{}

// LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner struct for LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner
type LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner struct {
	Bfd                               *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerBfd                               `json:"bfd,omitempty"`
	ConnectionOptions                 *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions                 `json:"connection_options,omitempty"`
	Enable                            *bool                                                                              `json:"enable,omitempty"`
	EnableMpBgp                       *bool                                                                              `json:"enable_mp_bgp,omitempty"`
	EnableSenderSideLoopDetection     *bool                                                                              `json:"enable_sender_side_loop_detection,omitempty"`
	Inherit                           *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerInherit                           `json:"inherit,omitempty"`
	LocalAddress                      *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress                      `json:"local_address,omitempty"`
	Name                              string                                                                             `json:"name"`
	Passive                           *bool                                                                              `json:"passive,omitempty"`
	PeerAddress                       *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress                       `json:"peer_address,omitempty"`
	PeerAs                            *string                                                                            `json:"peer_as,omitempty"`
	PeeringType                       *string                                                                            `json:"peering_type,omitempty"`
	ReflectorClient                   *string                                                                            `json:"reflector_client,omitempty"`
	SubsequentAddressFamilyIdentifier *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerSubsequentAddressFamilyIdentifier `json:"subsequent_address_family_identifier,omitempty"`
	AdditionalProperties              map[string]interface{}
}

type _LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner

// NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner instantiates a new LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner(name string) *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner {
	this := LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerWithDefaults instantiates a new LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerWithDefaults() *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner {
	this := LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner{}
	return &this
}

// GetBfd returns the Bfd field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetBfd() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerBfd {
	if o == nil || IsNil(o.Bfd) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerBfd
		return ret
	}
	return *o.Bfd
}

// GetBfdOk returns a tuple with the Bfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetBfdOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerBfd, bool) {
	if o == nil || IsNil(o.Bfd) {
		return nil, false
	}
	return o.Bfd, true
}

// HasBfd returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasBfd() bool {
	if o != nil && !IsNil(o.Bfd) {
		return true
	}

	return false
}

// SetBfd gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerBfd and assigns it to the Bfd field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetBfd(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerBfd) {
	o.Bfd = &v
}

// GetConnectionOptions returns the ConnectionOptions field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetConnectionOptions() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions {
	if o == nil || IsNil(o.ConnectionOptions) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions
		return ret
	}
	return *o.ConnectionOptions
}

// GetConnectionOptionsOk returns a tuple with the ConnectionOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetConnectionOptionsOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions, bool) {
	if o == nil || IsNil(o.ConnectionOptions) {
		return nil, false
	}
	return o.ConnectionOptions, true
}

// HasConnectionOptions returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasConnectionOptions() bool {
	if o != nil && !IsNil(o.ConnectionOptions) {
		return true
	}

	return false
}

// SetConnectionOptions gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions and assigns it to the ConnectionOptions field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetConnectionOptions(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerConnectionOptions) {
	o.ConnectionOptions = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetEnableMpBgp returns the EnableMpBgp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetEnableMpBgp() bool {
	if o == nil || IsNil(o.EnableMpBgp) {
		var ret bool
		return ret
	}
	return *o.EnableMpBgp
}

// GetEnableMpBgpOk returns a tuple with the EnableMpBgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetEnableMpBgpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMpBgp) {
		return nil, false
	}
	return o.EnableMpBgp, true
}

// HasEnableMpBgp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasEnableMpBgp() bool {
	if o != nil && !IsNil(o.EnableMpBgp) {
		return true
	}

	return false
}

// SetEnableMpBgp gets a reference to the given bool and assigns it to the EnableMpBgp field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetEnableMpBgp(v bool) {
	o.EnableMpBgp = &v
}

// GetEnableSenderSideLoopDetection returns the EnableSenderSideLoopDetection field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetEnableSenderSideLoopDetection() bool {
	if o == nil || IsNil(o.EnableSenderSideLoopDetection) {
		var ret bool
		return ret
	}
	return *o.EnableSenderSideLoopDetection
}

// GetEnableSenderSideLoopDetectionOk returns a tuple with the EnableSenderSideLoopDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetEnableSenderSideLoopDetectionOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSenderSideLoopDetection) {
		return nil, false
	}
	return o.EnableSenderSideLoopDetection, true
}

// HasEnableSenderSideLoopDetection returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasEnableSenderSideLoopDetection() bool {
	if o != nil && !IsNil(o.EnableSenderSideLoopDetection) {
		return true
	}

	return false
}

// SetEnableSenderSideLoopDetection gets a reference to the given bool and assigns it to the EnableSenderSideLoopDetection field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetEnableSenderSideLoopDetection(v bool) {
	o.EnableSenderSideLoopDetection = &v
}

// GetInherit returns the Inherit field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetInherit() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerInherit {
	if o == nil || IsNil(o.Inherit) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerInherit
		return ret
	}
	return *o.Inherit
}

// GetInheritOk returns a tuple with the Inherit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetInheritOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerInherit, bool) {
	if o == nil || IsNil(o.Inherit) {
		return nil, false
	}
	return o.Inherit, true
}

// HasInherit returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasInherit() bool {
	if o != nil && !IsNil(o.Inherit) {
		return true
	}

	return false
}

// SetInherit gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerInherit and assigns it to the Inherit field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetInherit(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerInherit) {
	o.Inherit = &v
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetLocalAddress() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress {
	if o == nil || IsNil(o.LocalAddress) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress
		return ret
	}
	return *o.LocalAddress
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetLocalAddressOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress, bool) {
	if o == nil || IsNil(o.LocalAddress) {
		return nil, false
	}
	return o.LocalAddress, true
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasLocalAddress() bool {
	if o != nil && !IsNil(o.LocalAddress) {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress and assigns it to the LocalAddress field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetLocalAddress(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerLocalAddress) {
	o.LocalAddress = &v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetName(v string) {
	o.Name = v
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPassive() bool {
	if o == nil || IsNil(o.Passive) {
		var ret bool
		return ret
	}
	return *o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Passive) {
		return nil, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given bool and assigns it to the Passive field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetPassive(v bool) {
	o.Passive = &v
}

// GetPeerAddress returns the PeerAddress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPeerAddress() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress {
	if o == nil || IsNil(o.PeerAddress) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress
		return ret
	}
	return *o.PeerAddress
}

// GetPeerAddressOk returns a tuple with the PeerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPeerAddressOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress, bool) {
	if o == nil || IsNil(o.PeerAddress) {
		return nil, false
	}
	return o.PeerAddress, true
}

// HasPeerAddress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasPeerAddress() bool {
	if o != nil && !IsNil(o.PeerAddress) {
		return true
	}

	return false
}

// SetPeerAddress gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress and assigns it to the PeerAddress field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetPeerAddress(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerPeerAddress) {
	o.PeerAddress = &v
}

// GetPeerAs returns the PeerAs field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPeerAs() string {
	if o == nil || IsNil(o.PeerAs) {
		var ret string
		return ret
	}
	return *o.PeerAs
}

// GetPeerAsOk returns a tuple with the PeerAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPeerAsOk() (*string, bool) {
	if o == nil || IsNil(o.PeerAs) {
		return nil, false
	}
	return o.PeerAs, true
}

// HasPeerAs returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasPeerAs() bool {
	if o != nil && !IsNil(o.PeerAs) {
		return true
	}

	return false
}

// SetPeerAs gets a reference to the given string and assigns it to the PeerAs field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetPeerAs(v string) {
	o.PeerAs = &v
}

// GetPeeringType returns the PeeringType field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPeeringType() string {
	if o == nil || IsNil(o.PeeringType) {
		var ret string
		return ret
	}
	return *o.PeeringType
}

// GetPeeringTypeOk returns a tuple with the PeeringType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetPeeringTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PeeringType) {
		return nil, false
	}
	return o.PeeringType, true
}

// HasPeeringType returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasPeeringType() bool {
	if o != nil && !IsNil(o.PeeringType) {
		return true
	}

	return false
}

// SetPeeringType gets a reference to the given string and assigns it to the PeeringType field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetPeeringType(v string) {
	o.PeeringType = &v
}

// GetReflectorClient returns the ReflectorClient field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetReflectorClient() string {
	if o == nil || IsNil(o.ReflectorClient) {
		var ret string
		return ret
	}
	return *o.ReflectorClient
}

// GetReflectorClientOk returns a tuple with the ReflectorClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetReflectorClientOk() (*string, bool) {
	if o == nil || IsNil(o.ReflectorClient) {
		return nil, false
	}
	return o.ReflectorClient, true
}

// HasReflectorClient returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasReflectorClient() bool {
	if o != nil && !IsNil(o.ReflectorClient) {
		return true
	}

	return false
}

// SetReflectorClient gets a reference to the given string and assigns it to the ReflectorClient field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetReflectorClient(v string) {
	o.ReflectorClient = &v
}

// GetSubsequentAddressFamilyIdentifier returns the SubsequentAddressFamilyIdentifier field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetSubsequentAddressFamilyIdentifier() LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerSubsequentAddressFamilyIdentifier {
	if o == nil || IsNil(o.SubsequentAddressFamilyIdentifier) {
		var ret LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerSubsequentAddressFamilyIdentifier
		return ret
	}
	return *o.SubsequentAddressFamilyIdentifier
}

// GetSubsequentAddressFamilyIdentifierOk returns a tuple with the SubsequentAddressFamilyIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) GetSubsequentAddressFamilyIdentifierOk() (*LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerSubsequentAddressFamilyIdentifier, bool) {
	if o == nil || IsNil(o.SubsequentAddressFamilyIdentifier) {
		return nil, false
	}
	return o.SubsequentAddressFamilyIdentifier, true
}

// HasSubsequentAddressFamilyIdentifier returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) HasSubsequentAddressFamilyIdentifier() bool {
	if o != nil && !IsNil(o.SubsequentAddressFamilyIdentifier) {
		return true
	}

	return false
}

// SetSubsequentAddressFamilyIdentifier gets a reference to the given LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerSubsequentAddressFamilyIdentifier and assigns it to the SubsequentAddressFamilyIdentifier field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) SetSubsequentAddressFamilyIdentifier(v LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInnerSubsequentAddressFamilyIdentifier) {
	o.SubsequentAddressFamilyIdentifier = &v
}

func (o LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bfd) {
		toSerialize["bfd"] = o.Bfd
	}
	if !IsNil(o.ConnectionOptions) {
		toSerialize["connection_options"] = o.ConnectionOptions
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.EnableMpBgp) {
		toSerialize["enable_mp_bgp"] = o.EnableMpBgp
	}
	if !IsNil(o.EnableSenderSideLoopDetection) {
		toSerialize["enable_sender_side_loop_detection"] = o.EnableSenderSideLoopDetection
	}
	if !IsNil(o.Inherit) {
		toSerialize["inherit"] = o.Inherit
	}
	if !IsNil(o.LocalAddress) {
		toSerialize["local_address"] = o.LocalAddress
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}
	if !IsNil(o.PeerAddress) {
		toSerialize["peer_address"] = o.PeerAddress
	}
	if !IsNil(o.PeerAs) {
		toSerialize["peer_as"] = o.PeerAs
	}
	if !IsNil(o.PeeringType) {
		toSerialize["peering_type"] = o.PeeringType
	}
	if !IsNil(o.ReflectorClient) {
		toSerialize["reflector_client"] = o.ReflectorClient
	}
	if !IsNil(o.SubsequentAddressFamilyIdentifier) {
		toSerialize["subsequent_address_family_identifier"] = o.SubsequentAddressFamilyIdentifier
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner := _LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner(varLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bfd")
		delete(additionalProperties, "connection_options")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "enable_mp_bgp")
		delete(additionalProperties, "enable_sender_side_loop_detection")
		delete(additionalProperties, "inherit")
		delete(additionalProperties, "local_address")
		delete(additionalProperties, "name")
		delete(additionalProperties, "passive")
		delete(additionalProperties, "peer_address")
		delete(additionalProperties, "peer_as")
		delete(additionalProperties, "peering_type")
		delete(additionalProperties, "reflector_client")
		delete(additionalProperties, "subsequent_address_family_identifier")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner struct {
	value *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) Get() *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) Set(val *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner(val *LogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner {
	return &NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerPeerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
