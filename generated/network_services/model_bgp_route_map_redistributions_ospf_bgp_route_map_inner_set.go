/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet{}

// BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet struct for BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet
type BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet struct {
	Aggregator *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSetAggregator `json:"aggregator,omitempty"`
	// AS numbers
	AspathPrepend []int32 `json:"aspath_prepend,omitempty"`
	// Enable BGP atomic aggregate?
	AtomicAggregate *bool                                                             `json:"atomic_aggregate,omitempty"`
	Ipv4            *BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetIpv4 `json:"ipv4,omitempty"`
	// Large communities
	LargeCommunity []string `json:"large_community,omitempty"`
	// Local preference
	LocalPreference *int32                                                              `json:"local_preference,omitempty"`
	Metric          *BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetMetric `json:"metric,omitempty"`
	// Origin
	Origin *string `json:"origin,omitempty"`
	// Originator ID
	OriginatorId *string `json:"originator_id,omitempty"`
	// Regular communities
	RegularCommunity []string `json:"regular_community,omitempty"`
	// Tag
	Tag *int32 `json:"tag,omitempty"`
	// Weight
	Weight               *int32 `json:"weight,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet

// NewBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet instantiates a new BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet() *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet {
	this := BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet{}
	return &this
}

// NewBgpRouteMapRedistributionsOspfBgpRouteMapInnerSetWithDefaults instantiates a new BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpRouteMapRedistributionsOspfBgpRouteMapInnerSetWithDefaults() *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet {
	this := BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet{}
	return &this
}

// GetAggregator returns the Aggregator field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetAggregator() BgpRouteMapRedistributionsOspfBgpRouteMapInnerSetAggregator {
	if o == nil || IsNil(o.Aggregator) {
		var ret BgpRouteMapRedistributionsOspfBgpRouteMapInnerSetAggregator
		return ret
	}
	return *o.Aggregator
}

// GetAggregatorOk returns a tuple with the Aggregator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetAggregatorOk() (*BgpRouteMapRedistributionsOspfBgpRouteMapInnerSetAggregator, bool) {
	if o == nil || IsNil(o.Aggregator) {
		return nil, false
	}
	return o.Aggregator, true
}

// HasAggregator returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasAggregator() bool {
	if o != nil && !IsNil(o.Aggregator) {
		return true
	}

	return false
}

// SetAggregator gets a reference to the given BgpRouteMapRedistributionsOspfBgpRouteMapInnerSetAggregator and assigns it to the Aggregator field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetAggregator(v BgpRouteMapRedistributionsOspfBgpRouteMapInnerSetAggregator) {
	o.Aggregator = &v
}

// GetAspathPrepend returns the AspathPrepend field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetAspathPrepend() []int32 {
	if o == nil || IsNil(o.AspathPrepend) {
		var ret []int32
		return ret
	}
	return o.AspathPrepend
}

// GetAspathPrependOk returns a tuple with the AspathPrepend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetAspathPrependOk() ([]int32, bool) {
	if o == nil || IsNil(o.AspathPrepend) {
		return nil, false
	}
	return o.AspathPrepend, true
}

// HasAspathPrepend returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasAspathPrepend() bool {
	if o != nil && !IsNil(o.AspathPrepend) {
		return true
	}

	return false
}

// SetAspathPrepend gets a reference to the given []int32 and assigns it to the AspathPrepend field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetAspathPrepend(v []int32) {
	o.AspathPrepend = v
}

// GetAtomicAggregate returns the AtomicAggregate field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetAtomicAggregate() bool {
	if o == nil || IsNil(o.AtomicAggregate) {
		var ret bool
		return ret
	}
	return *o.AtomicAggregate
}

// GetAtomicAggregateOk returns a tuple with the AtomicAggregate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetAtomicAggregateOk() (*bool, bool) {
	if o == nil || IsNil(o.AtomicAggregate) {
		return nil, false
	}
	return o.AtomicAggregate, true
}

// HasAtomicAggregate returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasAtomicAggregate() bool {
	if o != nil && !IsNil(o.AtomicAggregate) {
		return true
	}

	return false
}

// SetAtomicAggregate gets a reference to the given bool and assigns it to the AtomicAggregate field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetAtomicAggregate(v bool) {
	o.AtomicAggregate = &v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetIpv4() BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetIpv4 {
	if o == nil || IsNil(o.Ipv4) {
		var ret BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetIpv4
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetIpv4Ok() (*BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetIpv4, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetIpv4 and assigns it to the Ipv4 field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetIpv4(v BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetIpv4) {
	o.Ipv4 = &v
}

// GetLargeCommunity returns the LargeCommunity field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetLargeCommunity() []string {
	if o == nil || IsNil(o.LargeCommunity) {
		var ret []string
		return ret
	}
	return o.LargeCommunity
}

// GetLargeCommunityOk returns a tuple with the LargeCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetLargeCommunityOk() ([]string, bool) {
	if o == nil || IsNil(o.LargeCommunity) {
		return nil, false
	}
	return o.LargeCommunity, true
}

// HasLargeCommunity returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasLargeCommunity() bool {
	if o != nil && !IsNil(o.LargeCommunity) {
		return true
	}

	return false
}

// SetLargeCommunity gets a reference to the given []string and assigns it to the LargeCommunity field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetLargeCommunity(v []string) {
	o.LargeCommunity = v
}

// GetLocalPreference returns the LocalPreference field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetLocalPreference() int32 {
	if o == nil || IsNil(o.LocalPreference) {
		var ret int32
		return ret
	}
	return *o.LocalPreference
}

// GetLocalPreferenceOk returns a tuple with the LocalPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetLocalPreferenceOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalPreference) {
		return nil, false
	}
	return o.LocalPreference, true
}

// HasLocalPreference returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasLocalPreference() bool {
	if o != nil && !IsNil(o.LocalPreference) {
		return true
	}

	return false
}

// SetLocalPreference gets a reference to the given int32 and assigns it to the LocalPreference field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetLocalPreference(v int32) {
	o.LocalPreference = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetMetric() BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetMetric {
	if o == nil || IsNil(o.Metric) {
		var ret BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetMetric
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetMetricOk() (*BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetMetric, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetMetric and assigns it to the Metric field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetMetric(v BgpRouteMapRedistributionsConnectedStaticBgpRouteMapInnerSetMetric) {
	o.Metric = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetOrigin(v string) {
	o.Origin = &v
}

// GetOriginatorId returns the OriginatorId field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetOriginatorId() string {
	if o == nil || IsNil(o.OriginatorId) {
		var ret string
		return ret
	}
	return *o.OriginatorId
}

// GetOriginatorIdOk returns a tuple with the OriginatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetOriginatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginatorId) {
		return nil, false
	}
	return o.OriginatorId, true
}

// HasOriginatorId returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasOriginatorId() bool {
	if o != nil && !IsNil(o.OriginatorId) {
		return true
	}

	return false
}

// SetOriginatorId gets a reference to the given string and assigns it to the OriginatorId field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetOriginatorId(v string) {
	o.OriginatorId = &v
}

// GetRegularCommunity returns the RegularCommunity field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetRegularCommunity() []string {
	if o == nil || IsNil(o.RegularCommunity) {
		var ret []string
		return ret
	}
	return o.RegularCommunity
}

// GetRegularCommunityOk returns a tuple with the RegularCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetRegularCommunityOk() ([]string, bool) {
	if o == nil || IsNil(o.RegularCommunity) {
		return nil, false
	}
	return o.RegularCommunity, true
}

// HasRegularCommunity returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasRegularCommunity() bool {
	if o != nil && !IsNil(o.RegularCommunity) {
		return true
	}

	return false
}

// SetRegularCommunity gets a reference to the given []string and assigns it to the RegularCommunity field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetRegularCommunity(v []string) {
	o.RegularCommunity = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetTag() int32 {
	if o == nil || IsNil(o.Tag) {
		var ret int32
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetTagOk() (*int32, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given int32 and assigns it to the Tag field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetTag(v int32) {
	o.Tag = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) SetWeight(v int32) {
	o.Weight = &v
}

func (o BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregator) {
		toSerialize["aggregator"] = o.Aggregator
	}
	if !IsNil(o.AspathPrepend) {
		toSerialize["aspath_prepend"] = o.AspathPrepend
	}
	if !IsNil(o.AtomicAggregate) {
		toSerialize["atomic_aggregate"] = o.AtomicAggregate
	}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.LargeCommunity) {
		toSerialize["large_community"] = o.LargeCommunity
	}
	if !IsNil(o.LocalPreference) {
		toSerialize["local_preference"] = o.LocalPreference
	}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.OriginatorId) {
		toSerialize["originator_id"] = o.OriginatorId
	}
	if !IsNil(o.RegularCommunity) {
		toSerialize["regular_community"] = o.RegularCommunity
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) UnmarshalJSON(data []byte) (err error) {
	varBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet := _BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet{}

	err = json.Unmarshal(data, &varBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet)

	if err != nil {
		return err
	}

	*o = BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet(varBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aggregator")
		delete(additionalProperties, "aspath_prepend")
		delete(additionalProperties, "atomic_aggregate")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "large_community")
		delete(additionalProperties, "local_preference")
		delete(additionalProperties, "metric")
		delete(additionalProperties, "origin")
		delete(additionalProperties, "originator_id")
		delete(additionalProperties, "regular_community")
		delete(additionalProperties, "tag")
		delete(additionalProperties, "weight")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet struct {
	value *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet
	isSet bool
}

func (v NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) Get() *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet {
	return v.value
}

func (v *NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) Set(val *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet(val *BgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) *NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet {
	return &NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet{value: val, isSet: true}
}

func (v NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRouteMapRedistributionsOspfBgpRouteMapInnerSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
