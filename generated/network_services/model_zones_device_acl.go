/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the ZonesDeviceAcl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZonesDeviceAcl{}

// ZonesDeviceAcl struct for ZonesDeviceAcl
type ZonesDeviceAcl struct {
	ExcludeList          []string `json:"exclude_list,omitempty"`
	IncludeList          []string `json:"include_list,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ZonesDeviceAcl ZonesDeviceAcl

// NewZonesDeviceAcl instantiates a new ZonesDeviceAcl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZonesDeviceAcl() *ZonesDeviceAcl {
	this := ZonesDeviceAcl{}
	return &this
}

// NewZonesDeviceAclWithDefaults instantiates a new ZonesDeviceAcl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZonesDeviceAclWithDefaults() *ZonesDeviceAcl {
	this := ZonesDeviceAcl{}
	return &this
}

// GetExcludeList returns the ExcludeList field value if set, zero value otherwise.
func (o *ZonesDeviceAcl) GetExcludeList() []string {
	if o == nil || IsNil(o.ExcludeList) {
		var ret []string
		return ret
	}
	return o.ExcludeList
}

// GetExcludeListOk returns a tuple with the ExcludeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZonesDeviceAcl) GetExcludeListOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeList) {
		return nil, false
	}
	return o.ExcludeList, true
}

// HasExcludeList returns a boolean if a field has been set.
func (o *ZonesDeviceAcl) HasExcludeList() bool {
	if o != nil && !IsNil(o.ExcludeList) {
		return true
	}

	return false
}

// SetExcludeList gets a reference to the given []string and assigns it to the ExcludeList field.
func (o *ZonesDeviceAcl) SetExcludeList(v []string) {
	o.ExcludeList = v
}

// GetIncludeList returns the IncludeList field value if set, zero value otherwise.
func (o *ZonesDeviceAcl) GetIncludeList() []string {
	if o == nil || IsNil(o.IncludeList) {
		var ret []string
		return ret
	}
	return o.IncludeList
}

// GetIncludeListOk returns a tuple with the IncludeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZonesDeviceAcl) GetIncludeListOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeList) {
		return nil, false
	}
	return o.IncludeList, true
}

// HasIncludeList returns a boolean if a field has been set.
func (o *ZonesDeviceAcl) HasIncludeList() bool {
	if o != nil && !IsNil(o.IncludeList) {
		return true
	}

	return false
}

// SetIncludeList gets a reference to the given []string and assigns it to the IncludeList field.
func (o *ZonesDeviceAcl) SetIncludeList(v []string) {
	o.IncludeList = v
}

func (o ZonesDeviceAcl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZonesDeviceAcl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExcludeList) {
		toSerialize["exclude_list"] = o.ExcludeList
	}
	if !IsNil(o.IncludeList) {
		toSerialize["include_list"] = o.IncludeList
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ZonesDeviceAcl) UnmarshalJSON(data []byte) (err error) {
	varZonesDeviceAcl := _ZonesDeviceAcl{}

	err = json.Unmarshal(data, &varZonesDeviceAcl)

	if err != nil {
		return err
	}

	*o = ZonesDeviceAcl(varZonesDeviceAcl)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "exclude_list")
		delete(additionalProperties, "include_list")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableZonesDeviceAcl struct {
	value *ZonesDeviceAcl
	isSet bool
}

func (v NullableZonesDeviceAcl) Get() *ZonesDeviceAcl {
	return v.value
}

func (v *NullableZonesDeviceAcl) Set(val *ZonesDeviceAcl) {
	v.value = val
	v.isSet = true
}

func (v NullableZonesDeviceAcl) IsSet() bool {
	return v.isSet
}

func (v *NullableZonesDeviceAcl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZonesDeviceAcl(val *ZonesDeviceAcl) *NullableZonesDeviceAcl {
	return &NullableZonesDeviceAcl{value: val, isSet: true}
}

func (v NullableZonesDeviceAcl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZonesDeviceAcl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
