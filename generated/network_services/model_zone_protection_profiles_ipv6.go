/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the ZoneProtectionProfilesIpv6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneProtectionProfilesIpv6{}

// ZoneProtectionProfilesIpv6 struct for ZoneProtectionProfilesIpv6
type ZoneProtectionProfilesIpv6 struct {
	// Discard IPv6 packets that contain an anycast source address.
	AnycastSource *bool                                   `json:"anycast_source,omitempty"`
	FilterExtHdr  *ZoneProtectionProfilesIpv6FilterExtHdr `json:"filter_ext_hdr,omitempty"`
	// Discard IPv6 packets that contain a Packet Too Big ICMPv6 message when the maximum transmission unit (MTU) is less than 1,280 bytes.
	Icmpv6TooBigSmallMtuDiscard *bool                                   `json:"icmpv6_too_big_small_mtu_discard,omitempty"`
	IgnoreInvPkt                *ZoneProtectionProfilesIpv6IgnoreInvPkt `json:"ignore_inv_pkt,omitempty"`
	// Discard IPv6 packets that are defined as an RFC 4291 IPv4-Compatible IPv6 address.
	Ipv4CompatibleAddress *bool `json:"ipv4_compatible_address,omitempty"`
	// Discard IPv6 packets with the last fragment flag (M=0) and offset of zero.
	NeedlessFragmentHdr *bool `json:"needless_fragment_hdr,omitempty"`
	// Discard IPv6 packets that contain invalid IPv6 options in an extension header.
	OptionsInvalidIpv6Discard *bool `json:"options_invalid_ipv6_discard,omitempty"`
	// Discard IPv6 packets that have a header with a reserved field not set to zero.
	ReservedFieldSetDiscard *bool `json:"reserved_field_set_discard,omitempty"`
	// Drop packets with type 0 routing header.
	RoutingHeader0 *bool `json:"routing_header_0,omitempty"`
	// Drop packets with type 1 routing header.
	RoutingHeader1 *bool `json:"routing_header_1,omitempty"`
	// Drop packets with type 253 routing header.
	RoutingHeader253 *bool `json:"routing_header_253,omitempty"`
	// Drop packets with type 254 routing header.
	RoutingHeader254 *bool `json:"routing_header_254,omitempty"`
	// Drop packets with type 255 routing header.
	RoutingHeader255 *bool `json:"routing_header_255,omitempty"`
	// Drop packets with type 3 routing header.
	RoutingHeader3 *bool `json:"routing_header_3,omitempty"`
	// Drop packets with type 4 to type 252 routing header.
	RoutingHeader4252    *bool `json:"routing_header_4_252,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ZoneProtectionProfilesIpv6 ZoneProtectionProfilesIpv6

// NewZoneProtectionProfilesIpv6 instantiates a new ZoneProtectionProfilesIpv6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneProtectionProfilesIpv6() *ZoneProtectionProfilesIpv6 {
	this := ZoneProtectionProfilesIpv6{}
	return &this
}

// NewZoneProtectionProfilesIpv6WithDefaults instantiates a new ZoneProtectionProfilesIpv6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneProtectionProfilesIpv6WithDefaults() *ZoneProtectionProfilesIpv6 {
	this := ZoneProtectionProfilesIpv6{}
	return &this
}

// GetAnycastSource returns the AnycastSource field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetAnycastSource() bool {
	if o == nil || IsNil(o.AnycastSource) {
		var ret bool
		return ret
	}
	return *o.AnycastSource
}

// GetAnycastSourceOk returns a tuple with the AnycastSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetAnycastSourceOk() (*bool, bool) {
	if o == nil || IsNil(o.AnycastSource) {
		return nil, false
	}
	return o.AnycastSource, true
}

// HasAnycastSource returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasAnycastSource() bool {
	if o != nil && !IsNil(o.AnycastSource) {
		return true
	}

	return false
}

// SetAnycastSource gets a reference to the given bool and assigns it to the AnycastSource field.
func (o *ZoneProtectionProfilesIpv6) SetAnycastSource(v bool) {
	o.AnycastSource = &v
}

// GetFilterExtHdr returns the FilterExtHdr field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetFilterExtHdr() ZoneProtectionProfilesIpv6FilterExtHdr {
	if o == nil || IsNil(o.FilterExtHdr) {
		var ret ZoneProtectionProfilesIpv6FilterExtHdr
		return ret
	}
	return *o.FilterExtHdr
}

// GetFilterExtHdrOk returns a tuple with the FilterExtHdr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetFilterExtHdrOk() (*ZoneProtectionProfilesIpv6FilterExtHdr, bool) {
	if o == nil || IsNil(o.FilterExtHdr) {
		return nil, false
	}
	return o.FilterExtHdr, true
}

// HasFilterExtHdr returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasFilterExtHdr() bool {
	if o != nil && !IsNil(o.FilterExtHdr) {
		return true
	}

	return false
}

// SetFilterExtHdr gets a reference to the given ZoneProtectionProfilesIpv6FilterExtHdr and assigns it to the FilterExtHdr field.
func (o *ZoneProtectionProfilesIpv6) SetFilterExtHdr(v ZoneProtectionProfilesIpv6FilterExtHdr) {
	o.FilterExtHdr = &v
}

// GetIcmpv6TooBigSmallMtuDiscard returns the Icmpv6TooBigSmallMtuDiscard field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetIcmpv6TooBigSmallMtuDiscard() bool {
	if o == nil || IsNil(o.Icmpv6TooBigSmallMtuDiscard) {
		var ret bool
		return ret
	}
	return *o.Icmpv6TooBigSmallMtuDiscard
}

// GetIcmpv6TooBigSmallMtuDiscardOk returns a tuple with the Icmpv6TooBigSmallMtuDiscard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetIcmpv6TooBigSmallMtuDiscardOk() (*bool, bool) {
	if o == nil || IsNil(o.Icmpv6TooBigSmallMtuDiscard) {
		return nil, false
	}
	return o.Icmpv6TooBigSmallMtuDiscard, true
}

// HasIcmpv6TooBigSmallMtuDiscard returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasIcmpv6TooBigSmallMtuDiscard() bool {
	if o != nil && !IsNil(o.Icmpv6TooBigSmallMtuDiscard) {
		return true
	}

	return false
}

// SetIcmpv6TooBigSmallMtuDiscard gets a reference to the given bool and assigns it to the Icmpv6TooBigSmallMtuDiscard field.
func (o *ZoneProtectionProfilesIpv6) SetIcmpv6TooBigSmallMtuDiscard(v bool) {
	o.Icmpv6TooBigSmallMtuDiscard = &v
}

// GetIgnoreInvPkt returns the IgnoreInvPkt field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetIgnoreInvPkt() ZoneProtectionProfilesIpv6IgnoreInvPkt {
	if o == nil || IsNil(o.IgnoreInvPkt) {
		var ret ZoneProtectionProfilesIpv6IgnoreInvPkt
		return ret
	}
	return *o.IgnoreInvPkt
}

// GetIgnoreInvPktOk returns a tuple with the IgnoreInvPkt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetIgnoreInvPktOk() (*ZoneProtectionProfilesIpv6IgnoreInvPkt, bool) {
	if o == nil || IsNil(o.IgnoreInvPkt) {
		return nil, false
	}
	return o.IgnoreInvPkt, true
}

// HasIgnoreInvPkt returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasIgnoreInvPkt() bool {
	if o != nil && !IsNil(o.IgnoreInvPkt) {
		return true
	}

	return false
}

// SetIgnoreInvPkt gets a reference to the given ZoneProtectionProfilesIpv6IgnoreInvPkt and assigns it to the IgnoreInvPkt field.
func (o *ZoneProtectionProfilesIpv6) SetIgnoreInvPkt(v ZoneProtectionProfilesIpv6IgnoreInvPkt) {
	o.IgnoreInvPkt = &v
}

// GetIpv4CompatibleAddress returns the Ipv4CompatibleAddress field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetIpv4CompatibleAddress() bool {
	if o == nil || IsNil(o.Ipv4CompatibleAddress) {
		var ret bool
		return ret
	}
	return *o.Ipv4CompatibleAddress
}

// GetIpv4CompatibleAddressOk returns a tuple with the Ipv4CompatibleAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetIpv4CompatibleAddressOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipv4CompatibleAddress) {
		return nil, false
	}
	return o.Ipv4CompatibleAddress, true
}

// HasIpv4CompatibleAddress returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasIpv4CompatibleAddress() bool {
	if o != nil && !IsNil(o.Ipv4CompatibleAddress) {
		return true
	}

	return false
}

// SetIpv4CompatibleAddress gets a reference to the given bool and assigns it to the Ipv4CompatibleAddress field.
func (o *ZoneProtectionProfilesIpv6) SetIpv4CompatibleAddress(v bool) {
	o.Ipv4CompatibleAddress = &v
}

// GetNeedlessFragmentHdr returns the NeedlessFragmentHdr field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetNeedlessFragmentHdr() bool {
	if o == nil || IsNil(o.NeedlessFragmentHdr) {
		var ret bool
		return ret
	}
	return *o.NeedlessFragmentHdr
}

// GetNeedlessFragmentHdrOk returns a tuple with the NeedlessFragmentHdr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetNeedlessFragmentHdrOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedlessFragmentHdr) {
		return nil, false
	}
	return o.NeedlessFragmentHdr, true
}

// HasNeedlessFragmentHdr returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasNeedlessFragmentHdr() bool {
	if o != nil && !IsNil(o.NeedlessFragmentHdr) {
		return true
	}

	return false
}

// SetNeedlessFragmentHdr gets a reference to the given bool and assigns it to the NeedlessFragmentHdr field.
func (o *ZoneProtectionProfilesIpv6) SetNeedlessFragmentHdr(v bool) {
	o.NeedlessFragmentHdr = &v
}

// GetOptionsInvalidIpv6Discard returns the OptionsInvalidIpv6Discard field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetOptionsInvalidIpv6Discard() bool {
	if o == nil || IsNil(o.OptionsInvalidIpv6Discard) {
		var ret bool
		return ret
	}
	return *o.OptionsInvalidIpv6Discard
}

// GetOptionsInvalidIpv6DiscardOk returns a tuple with the OptionsInvalidIpv6Discard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetOptionsInvalidIpv6DiscardOk() (*bool, bool) {
	if o == nil || IsNil(o.OptionsInvalidIpv6Discard) {
		return nil, false
	}
	return o.OptionsInvalidIpv6Discard, true
}

// HasOptionsInvalidIpv6Discard returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasOptionsInvalidIpv6Discard() bool {
	if o != nil && !IsNil(o.OptionsInvalidIpv6Discard) {
		return true
	}

	return false
}

// SetOptionsInvalidIpv6Discard gets a reference to the given bool and assigns it to the OptionsInvalidIpv6Discard field.
func (o *ZoneProtectionProfilesIpv6) SetOptionsInvalidIpv6Discard(v bool) {
	o.OptionsInvalidIpv6Discard = &v
}

// GetReservedFieldSetDiscard returns the ReservedFieldSetDiscard field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetReservedFieldSetDiscard() bool {
	if o == nil || IsNil(o.ReservedFieldSetDiscard) {
		var ret bool
		return ret
	}
	return *o.ReservedFieldSetDiscard
}

// GetReservedFieldSetDiscardOk returns a tuple with the ReservedFieldSetDiscard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetReservedFieldSetDiscardOk() (*bool, bool) {
	if o == nil || IsNil(o.ReservedFieldSetDiscard) {
		return nil, false
	}
	return o.ReservedFieldSetDiscard, true
}

// HasReservedFieldSetDiscard returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasReservedFieldSetDiscard() bool {
	if o != nil && !IsNil(o.ReservedFieldSetDiscard) {
		return true
	}

	return false
}

// SetReservedFieldSetDiscard gets a reference to the given bool and assigns it to the ReservedFieldSetDiscard field.
func (o *ZoneProtectionProfilesIpv6) SetReservedFieldSetDiscard(v bool) {
	o.ReservedFieldSetDiscard = &v
}

// GetRoutingHeader0 returns the RoutingHeader0 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader0() bool {
	if o == nil || IsNil(o.RoutingHeader0) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader0
}

// GetRoutingHeader0Ok returns a tuple with the RoutingHeader0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader0Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader0) {
		return nil, false
	}
	return o.RoutingHeader0, true
}

// HasRoutingHeader0 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader0() bool {
	if o != nil && !IsNil(o.RoutingHeader0) {
		return true
	}

	return false
}

// SetRoutingHeader0 gets a reference to the given bool and assigns it to the RoutingHeader0 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader0(v bool) {
	o.RoutingHeader0 = &v
}

// GetRoutingHeader1 returns the RoutingHeader1 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader1() bool {
	if o == nil || IsNil(o.RoutingHeader1) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader1
}

// GetRoutingHeader1Ok returns a tuple with the RoutingHeader1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader1Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader1) {
		return nil, false
	}
	return o.RoutingHeader1, true
}

// HasRoutingHeader1 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader1() bool {
	if o != nil && !IsNil(o.RoutingHeader1) {
		return true
	}

	return false
}

// SetRoutingHeader1 gets a reference to the given bool and assigns it to the RoutingHeader1 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader1(v bool) {
	o.RoutingHeader1 = &v
}

// GetRoutingHeader253 returns the RoutingHeader253 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader253() bool {
	if o == nil || IsNil(o.RoutingHeader253) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader253
}

// GetRoutingHeader253Ok returns a tuple with the RoutingHeader253 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader253Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader253) {
		return nil, false
	}
	return o.RoutingHeader253, true
}

// HasRoutingHeader253 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader253() bool {
	if o != nil && !IsNil(o.RoutingHeader253) {
		return true
	}

	return false
}

// SetRoutingHeader253 gets a reference to the given bool and assigns it to the RoutingHeader253 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader253(v bool) {
	o.RoutingHeader253 = &v
}

// GetRoutingHeader254 returns the RoutingHeader254 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader254() bool {
	if o == nil || IsNil(o.RoutingHeader254) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader254
}

// GetRoutingHeader254Ok returns a tuple with the RoutingHeader254 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader254Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader254) {
		return nil, false
	}
	return o.RoutingHeader254, true
}

// HasRoutingHeader254 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader254() bool {
	if o != nil && !IsNil(o.RoutingHeader254) {
		return true
	}

	return false
}

// SetRoutingHeader254 gets a reference to the given bool and assigns it to the RoutingHeader254 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader254(v bool) {
	o.RoutingHeader254 = &v
}

// GetRoutingHeader255 returns the RoutingHeader255 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader255() bool {
	if o == nil || IsNil(o.RoutingHeader255) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader255
}

// GetRoutingHeader255Ok returns a tuple with the RoutingHeader255 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader255Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader255) {
		return nil, false
	}
	return o.RoutingHeader255, true
}

// HasRoutingHeader255 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader255() bool {
	if o != nil && !IsNil(o.RoutingHeader255) {
		return true
	}

	return false
}

// SetRoutingHeader255 gets a reference to the given bool and assigns it to the RoutingHeader255 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader255(v bool) {
	o.RoutingHeader255 = &v
}

// GetRoutingHeader3 returns the RoutingHeader3 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader3() bool {
	if o == nil || IsNil(o.RoutingHeader3) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader3
}

// GetRoutingHeader3Ok returns a tuple with the RoutingHeader3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader3Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader3) {
		return nil, false
	}
	return o.RoutingHeader3, true
}

// HasRoutingHeader3 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader3() bool {
	if o != nil && !IsNil(o.RoutingHeader3) {
		return true
	}

	return false
}

// SetRoutingHeader3 gets a reference to the given bool and assigns it to the RoutingHeader3 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader3(v bool) {
	o.RoutingHeader3 = &v
}

// GetRoutingHeader4252 returns the RoutingHeader4252 field value if set, zero value otherwise.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader4252() bool {
	if o == nil || IsNil(o.RoutingHeader4252) {
		var ret bool
		return ret
	}
	return *o.RoutingHeader4252
}

// GetRoutingHeader4252Ok returns a tuple with the RoutingHeader4252 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneProtectionProfilesIpv6) GetRoutingHeader4252Ok() (*bool, bool) {
	if o == nil || IsNil(o.RoutingHeader4252) {
		return nil, false
	}
	return o.RoutingHeader4252, true
}

// HasRoutingHeader4252 returns a boolean if a field has been set.
func (o *ZoneProtectionProfilesIpv6) HasRoutingHeader4252() bool {
	if o != nil && !IsNil(o.RoutingHeader4252) {
		return true
	}

	return false
}

// SetRoutingHeader4252 gets a reference to the given bool and assigns it to the RoutingHeader4252 field.
func (o *ZoneProtectionProfilesIpv6) SetRoutingHeader4252(v bool) {
	o.RoutingHeader4252 = &v
}

func (o ZoneProtectionProfilesIpv6) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneProtectionProfilesIpv6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnycastSource) {
		toSerialize["anycast_source"] = o.AnycastSource
	}
	if !IsNil(o.FilterExtHdr) {
		toSerialize["filter_ext_hdr"] = o.FilterExtHdr
	}
	if !IsNil(o.Icmpv6TooBigSmallMtuDiscard) {
		toSerialize["icmpv6_too_big_small_mtu_discard"] = o.Icmpv6TooBigSmallMtuDiscard
	}
	if !IsNil(o.IgnoreInvPkt) {
		toSerialize["ignore_inv_pkt"] = o.IgnoreInvPkt
	}
	if !IsNil(o.Ipv4CompatibleAddress) {
		toSerialize["ipv4_compatible_address"] = o.Ipv4CompatibleAddress
	}
	if !IsNil(o.NeedlessFragmentHdr) {
		toSerialize["needless_fragment_hdr"] = o.NeedlessFragmentHdr
	}
	if !IsNil(o.OptionsInvalidIpv6Discard) {
		toSerialize["options_invalid_ipv6_discard"] = o.OptionsInvalidIpv6Discard
	}
	if !IsNil(o.ReservedFieldSetDiscard) {
		toSerialize["reserved_field_set_discard"] = o.ReservedFieldSetDiscard
	}
	if !IsNil(o.RoutingHeader0) {
		toSerialize["routing_header_0"] = o.RoutingHeader0
	}
	if !IsNil(o.RoutingHeader1) {
		toSerialize["routing_header_1"] = o.RoutingHeader1
	}
	if !IsNil(o.RoutingHeader253) {
		toSerialize["routing_header_253"] = o.RoutingHeader253
	}
	if !IsNil(o.RoutingHeader254) {
		toSerialize["routing_header_254"] = o.RoutingHeader254
	}
	if !IsNil(o.RoutingHeader255) {
		toSerialize["routing_header_255"] = o.RoutingHeader255
	}
	if !IsNil(o.RoutingHeader3) {
		toSerialize["routing_header_3"] = o.RoutingHeader3
	}
	if !IsNil(o.RoutingHeader4252) {
		toSerialize["routing_header_4_252"] = o.RoutingHeader4252
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ZoneProtectionProfilesIpv6) UnmarshalJSON(data []byte) (err error) {
	varZoneProtectionProfilesIpv6 := _ZoneProtectionProfilesIpv6{}

	err = json.Unmarshal(data, &varZoneProtectionProfilesIpv6)

	if err != nil {
		return err
	}

	*o = ZoneProtectionProfilesIpv6(varZoneProtectionProfilesIpv6)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "anycast_source")
		delete(additionalProperties, "filter_ext_hdr")
		delete(additionalProperties, "icmpv6_too_big_small_mtu_discard")
		delete(additionalProperties, "ignore_inv_pkt")
		delete(additionalProperties, "ipv4_compatible_address")
		delete(additionalProperties, "needless_fragment_hdr")
		delete(additionalProperties, "options_invalid_ipv6_discard")
		delete(additionalProperties, "reserved_field_set_discard")
		delete(additionalProperties, "routing_header_0")
		delete(additionalProperties, "routing_header_1")
		delete(additionalProperties, "routing_header_253")
		delete(additionalProperties, "routing_header_254")
		delete(additionalProperties, "routing_header_255")
		delete(additionalProperties, "routing_header_3")
		delete(additionalProperties, "routing_header_4_252")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableZoneProtectionProfilesIpv6 struct {
	value *ZoneProtectionProfilesIpv6
	isSet bool
}

func (v NullableZoneProtectionProfilesIpv6) Get() *ZoneProtectionProfilesIpv6 {
	return v.value
}

func (v *NullableZoneProtectionProfilesIpv6) Set(val *ZoneProtectionProfilesIpv6) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneProtectionProfilesIpv6) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneProtectionProfilesIpv6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneProtectionProfilesIpv6(val *ZoneProtectionProfilesIpv6) *NullableZoneProtectionProfilesIpv6 {
	return &NullableZoneProtectionProfilesIpv6{value: val, isSet: true}
}

func (v NullableZoneProtectionProfilesIpv6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneProtectionProfilesIpv6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
