/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the SdwanSaasQualityProfilesMonitorMode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdwanSaasQualityProfilesMonitorMode{}

// SdwanSaasQualityProfilesMonitorMode struct for SdwanSaasQualityProfilesMonitorMode
type SdwanSaasQualityProfilesMonitorMode struct {
	Adaptive             map[string]interface{}                        `json:"adaptive,omitempty"`
	HttpHttps            *SdwanSaasQualityProfilesMonitorModeHttpHttps `json:"http_https,omitempty"`
	StaticIp             *SdwanSaasQualityProfilesMonitorModeStaticIp  `json:"static_ip,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SdwanSaasQualityProfilesMonitorMode SdwanSaasQualityProfilesMonitorMode

// NewSdwanSaasQualityProfilesMonitorMode instantiates a new SdwanSaasQualityProfilesMonitorMode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdwanSaasQualityProfilesMonitorMode() *SdwanSaasQualityProfilesMonitorMode {
	this := SdwanSaasQualityProfilesMonitorMode{}
	return &this
}

// NewSdwanSaasQualityProfilesMonitorModeWithDefaults instantiates a new SdwanSaasQualityProfilesMonitorMode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdwanSaasQualityProfilesMonitorModeWithDefaults() *SdwanSaasQualityProfilesMonitorMode {
	this := SdwanSaasQualityProfilesMonitorMode{}
	return &this
}

// GetAdaptive returns the Adaptive field value if set, zero value otherwise.
func (o *SdwanSaasQualityProfilesMonitorMode) GetAdaptive() map[string]interface{} {
	if o == nil || IsNil(o.Adaptive) {
		var ret map[string]interface{}
		return ret
	}
	return o.Adaptive
}

// GetAdaptiveOk returns a tuple with the Adaptive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanSaasQualityProfilesMonitorMode) GetAdaptiveOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Adaptive) {
		return map[string]interface{}{}, false
	}
	return o.Adaptive, true
}

// HasAdaptive returns a boolean if a field has been set.
func (o *SdwanSaasQualityProfilesMonitorMode) HasAdaptive() bool {
	if o != nil && !IsNil(o.Adaptive) {
		return true
	}

	return false
}

// SetAdaptive gets a reference to the given map[string]interface{} and assigns it to the Adaptive field.
func (o *SdwanSaasQualityProfilesMonitorMode) SetAdaptive(v map[string]interface{}) {
	o.Adaptive = v
}

// GetHttpHttps returns the HttpHttps field value if set, zero value otherwise.
func (o *SdwanSaasQualityProfilesMonitorMode) GetHttpHttps() SdwanSaasQualityProfilesMonitorModeHttpHttps {
	if o == nil || IsNil(o.HttpHttps) {
		var ret SdwanSaasQualityProfilesMonitorModeHttpHttps
		return ret
	}
	return *o.HttpHttps
}

// GetHttpHttpsOk returns a tuple with the HttpHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanSaasQualityProfilesMonitorMode) GetHttpHttpsOk() (*SdwanSaasQualityProfilesMonitorModeHttpHttps, bool) {
	if o == nil || IsNil(o.HttpHttps) {
		return nil, false
	}
	return o.HttpHttps, true
}

// HasHttpHttps returns a boolean if a field has been set.
func (o *SdwanSaasQualityProfilesMonitorMode) HasHttpHttps() bool {
	if o != nil && !IsNil(o.HttpHttps) {
		return true
	}

	return false
}

// SetHttpHttps gets a reference to the given SdwanSaasQualityProfilesMonitorModeHttpHttps and assigns it to the HttpHttps field.
func (o *SdwanSaasQualityProfilesMonitorMode) SetHttpHttps(v SdwanSaasQualityProfilesMonitorModeHttpHttps) {
	o.HttpHttps = &v
}

// GetStaticIp returns the StaticIp field value if set, zero value otherwise.
func (o *SdwanSaasQualityProfilesMonitorMode) GetStaticIp() SdwanSaasQualityProfilesMonitorModeStaticIp {
	if o == nil || IsNil(o.StaticIp) {
		var ret SdwanSaasQualityProfilesMonitorModeStaticIp
		return ret
	}
	return *o.StaticIp
}

// GetStaticIpOk returns a tuple with the StaticIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdwanSaasQualityProfilesMonitorMode) GetStaticIpOk() (*SdwanSaasQualityProfilesMonitorModeStaticIp, bool) {
	if o == nil || IsNil(o.StaticIp) {
		return nil, false
	}
	return o.StaticIp, true
}

// HasStaticIp returns a boolean if a field has been set.
func (o *SdwanSaasQualityProfilesMonitorMode) HasStaticIp() bool {
	if o != nil && !IsNil(o.StaticIp) {
		return true
	}

	return false
}

// SetStaticIp gets a reference to the given SdwanSaasQualityProfilesMonitorModeStaticIp and assigns it to the StaticIp field.
func (o *SdwanSaasQualityProfilesMonitorMode) SetStaticIp(v SdwanSaasQualityProfilesMonitorModeStaticIp) {
	o.StaticIp = &v
}

func (o SdwanSaasQualityProfilesMonitorMode) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdwanSaasQualityProfilesMonitorMode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adaptive) {
		toSerialize["adaptive"] = o.Adaptive
	}
	if !IsNil(o.HttpHttps) {
		toSerialize["http_https"] = o.HttpHttps
	}
	if !IsNil(o.StaticIp) {
		toSerialize["static_ip"] = o.StaticIp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SdwanSaasQualityProfilesMonitorMode) UnmarshalJSON(data []byte) (err error) {
	varSdwanSaasQualityProfilesMonitorMode := _SdwanSaasQualityProfilesMonitorMode{}

	err = json.Unmarshal(data, &varSdwanSaasQualityProfilesMonitorMode)

	if err != nil {
		return err
	}

	*o = SdwanSaasQualityProfilesMonitorMode(varSdwanSaasQualityProfilesMonitorMode)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "adaptive")
		delete(additionalProperties, "http_https")
		delete(additionalProperties, "static_ip")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSdwanSaasQualityProfilesMonitorMode struct {
	value *SdwanSaasQualityProfilesMonitorMode
	isSet bool
}

func (v NullableSdwanSaasQualityProfilesMonitorMode) Get() *SdwanSaasQualityProfilesMonitorMode {
	return v.value
}

func (v *NullableSdwanSaasQualityProfilesMonitorMode) Set(val *SdwanSaasQualityProfilesMonitorMode) {
	v.value = val
	v.isSet = true
}

func (v NullableSdwanSaasQualityProfilesMonitorMode) IsSet() bool {
	return v.isSet
}

func (v *NullableSdwanSaasQualityProfilesMonitorMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdwanSaasQualityProfilesMonitorMode(val *SdwanSaasQualityProfilesMonitorMode) *NullableSdwanSaasQualityProfilesMonitorMode {
	return &NullableSdwanSaasQualityProfilesMonitorMode{value: val, isSet: true}
}

func (v NullableSdwanSaasQualityProfilesMonitorMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdwanSaasQualityProfilesMonitorMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
