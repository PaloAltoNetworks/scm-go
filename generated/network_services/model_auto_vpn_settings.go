/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the AutoVpnSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoVpnSettings{}

// AutoVpnSettings struct for AutoVpnSettings
type AutoVpnSettings struct {
	AsRange AutoVpnSettingsAsRange `json:"as_range"`
	// Enable mesh connection between hubs?
	EnableMeshBetweenHubs *bool `json:"enable_mesh_between_hubs,omitempty"`
	// VPN address pool
	VpnAddressPool       []string `json:"vpn_address_pool"`
	AdditionalProperties map[string]interface{}
}

type _AutoVpnSettings AutoVpnSettings

// NewAutoVpnSettings instantiates a new AutoVpnSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoVpnSettings(asRange AutoVpnSettingsAsRange, vpnAddressPool []string) *AutoVpnSettings {
	this := AutoVpnSettings{}
	this.AsRange = asRange
	this.VpnAddressPool = vpnAddressPool
	return &this
}

// NewAutoVpnSettingsWithDefaults instantiates a new AutoVpnSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoVpnSettingsWithDefaults() *AutoVpnSettings {
	this := AutoVpnSettings{}
	return &this
}

// GetAsRange returns the AsRange field value
func (o *AutoVpnSettings) GetAsRange() AutoVpnSettingsAsRange {
	if o == nil {
		var ret AutoVpnSettingsAsRange
		return ret
	}

	return o.AsRange
}

// GetAsRangeOk returns a tuple with the AsRange field value
// and a boolean to check if the value has been set.
func (o *AutoVpnSettings) GetAsRangeOk() (*AutoVpnSettingsAsRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AsRange, true
}

// SetAsRange sets field value
func (o *AutoVpnSettings) SetAsRange(v AutoVpnSettingsAsRange) {
	o.AsRange = v
}

// GetEnableMeshBetweenHubs returns the EnableMeshBetweenHubs field value if set, zero value otherwise.
func (o *AutoVpnSettings) GetEnableMeshBetweenHubs() bool {
	if o == nil || IsNil(o.EnableMeshBetweenHubs) {
		var ret bool
		return ret
	}
	return *o.EnableMeshBetweenHubs
}

// GetEnableMeshBetweenHubsOk returns a tuple with the EnableMeshBetweenHubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoVpnSettings) GetEnableMeshBetweenHubsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMeshBetweenHubs) {
		return nil, false
	}
	return o.EnableMeshBetweenHubs, true
}

// HasEnableMeshBetweenHubs returns a boolean if a field has been set.
func (o *AutoVpnSettings) HasEnableMeshBetweenHubs() bool {
	if o != nil && !IsNil(o.EnableMeshBetweenHubs) {
		return true
	}

	return false
}

// SetEnableMeshBetweenHubs gets a reference to the given bool and assigns it to the EnableMeshBetweenHubs field.
func (o *AutoVpnSettings) SetEnableMeshBetweenHubs(v bool) {
	o.EnableMeshBetweenHubs = &v
}

// GetVpnAddressPool returns the VpnAddressPool field value
func (o *AutoVpnSettings) GetVpnAddressPool() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VpnAddressPool
}

// GetVpnAddressPoolOk returns a tuple with the VpnAddressPool field value
// and a boolean to check if the value has been set.
func (o *AutoVpnSettings) GetVpnAddressPoolOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpnAddressPool, true
}

// SetVpnAddressPool sets field value
func (o *AutoVpnSettings) SetVpnAddressPool(v []string) {
	o.VpnAddressPool = v
}

func (o AutoVpnSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoVpnSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["as_range"] = o.AsRange
	if !IsNil(o.EnableMeshBetweenHubs) {
		toSerialize["enable_mesh_between_hubs"] = o.EnableMeshBetweenHubs
	}
	toSerialize["vpn_address_pool"] = o.VpnAddressPool

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AutoVpnSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"as_range",
		"vpn_address_pool",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoVpnSettings := _AutoVpnSettings{}

	err = json.Unmarshal(data, &varAutoVpnSettings)

	if err != nil {
		return err
	}

	*o = AutoVpnSettings(varAutoVpnSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "as_range")
		delete(additionalProperties, "enable_mesh_between_hubs")
		delete(additionalProperties, "vpn_address_pool")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAutoVpnSettings struct {
	value *AutoVpnSettings
	isSet bool
}

func (v NullableAutoVpnSettings) Get() *AutoVpnSettings {
	return v.value
}

func (v *NullableAutoVpnSettings) Set(val *AutoVpnSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoVpnSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoVpnSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoVpnSettings(val *AutoVpnSettings) *NullableAutoVpnSettings {
	return &NullableAutoVpnSettings{value: val, isSet: true}
}

func (v NullableAutoVpnSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoVpnSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
