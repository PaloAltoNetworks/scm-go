/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress{}

// RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress struct for RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress
type RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress struct {
	// Source IP address
	Address *string `json:"address,omitempty"`
	// Source IP wildcard
	Wildcard             *string `json:"wildcard,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress

// NewRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress instantiates a new RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress() *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress {
	this := RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress{}
	return &this
}

// NewRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddressWithDefaults instantiates a new RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddressWithDefaults() *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress {
	this := RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) SetAddress(v string) {
	o.Address = &v
}

// GetWildcard returns the Wildcard field value if set, zero value otherwise.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) GetWildcard() string {
	if o == nil || IsNil(o.Wildcard) {
		var ret string
		return ret
	}
	return *o.Wildcard
}

// GetWildcardOk returns a tuple with the Wildcard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) GetWildcardOk() (*string, bool) {
	if o == nil || IsNil(o.Wildcard) {
		return nil, false
	}
	return o.Wildcard, true
}

// HasWildcard returns a boolean if a field has been set.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) HasWildcard() bool {
	if o != nil && !IsNil(o.Wildcard) {
		return true
	}

	return false
}

// SetWildcard gets a reference to the given string and assigns it to the Wildcard field.
func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) SetWildcard(v string) {
	o.Wildcard = &v
}

func (o RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Wildcard) {
		toSerialize["wildcard"] = o.Wildcard
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) UnmarshalJSON(data []byte) (err error) {
	varRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress := _RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress{}

	err = json.Unmarshal(data, &varRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress)

	if err != nil {
		return err
	}

	*o = RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress(varRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "wildcard")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress struct {
	value *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress
	isSet bool
}

func (v NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) Get() *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress {
	return v.value
}

func (v *NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) Set(val *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress(val *RouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) *NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress {
	return &NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress{value: val, isSet: true}
}

func (v NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteAccessListsTypeIpv4Ipv4EntryInnerSourceAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
