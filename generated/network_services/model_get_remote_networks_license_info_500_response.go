/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the GetRemoteNetworksLicenseInfo500Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRemoteNetworksLicenseInfo500Response{}

// GetRemoteNetworksLicenseInfo500Response struct for GetRemoteNetworksLicenseInfo500Response
type GetRemoteNetworksLicenseInfo500Response struct {
	Error                *string `json:"error,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetRemoteNetworksLicenseInfo500Response GetRemoteNetworksLicenseInfo500Response

// NewGetRemoteNetworksLicenseInfo500Response instantiates a new GetRemoteNetworksLicenseInfo500Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRemoteNetworksLicenseInfo500Response() *GetRemoteNetworksLicenseInfo500Response {
	this := GetRemoteNetworksLicenseInfo500Response{}
	return &this
}

// NewGetRemoteNetworksLicenseInfo500ResponseWithDefaults instantiates a new GetRemoteNetworksLicenseInfo500Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRemoteNetworksLicenseInfo500ResponseWithDefaults() *GetRemoteNetworksLicenseInfo500Response {
	this := GetRemoteNetworksLicenseInfo500Response{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GetRemoteNetworksLicenseInfo500Response) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRemoteNetworksLicenseInfo500Response) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetRemoteNetworksLicenseInfo500Response) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *GetRemoteNetworksLicenseInfo500Response) SetError(v string) {
	o.Error = &v
}

func (o GetRemoteNetworksLicenseInfo500Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRemoteNetworksLicenseInfo500Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetRemoteNetworksLicenseInfo500Response) UnmarshalJSON(data []byte) (err error) {
	varGetRemoteNetworksLicenseInfo500Response := _GetRemoteNetworksLicenseInfo500Response{}

	err = json.Unmarshal(data, &varGetRemoteNetworksLicenseInfo500Response)

	if err != nil {
		return err
	}

	*o = GetRemoteNetworksLicenseInfo500Response(varGetRemoteNetworksLicenseInfo500Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "error")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetRemoteNetworksLicenseInfo500Response struct {
	value *GetRemoteNetworksLicenseInfo500Response
	isSet bool
}

func (v NullableGetRemoteNetworksLicenseInfo500Response) Get() *GetRemoteNetworksLicenseInfo500Response {
	return v.value
}

func (v *NullableGetRemoteNetworksLicenseInfo500Response) Set(val *GetRemoteNetworksLicenseInfo500Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRemoteNetworksLicenseInfo500Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRemoteNetworksLicenseInfo500Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRemoteNetworksLicenseInfo500Response(val *GetRemoteNetworksLicenseInfo500Response) *NullableGetRemoteNetworksLicenseInfo500Response {
	return &NullableGetRemoteNetworksLicenseInfo500Response{value: val, isSet: true}
}

func (v NullableGetRemoteNetworksLicenseInfo500Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRemoteNetworksLicenseInfo500Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
