/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner{}

// LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner struct for LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner
type LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner struct {
	AdvertiseFilters     []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner `json:"advertise_filters,omitempty"`
	Enable               *bool                                                                         `json:"enable,omitempty"`
	Name                 string                                                                        `json:"name"`
	NonExistFilters      []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner `json:"non_exist_filters,omitempty"`
	UsedBy               []map[string]interface{}                                                      `json:"used_by,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner

// NewLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner instantiates a new LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner(name string) *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner {
	this := LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInnerWithDefaults instantiates a new LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInnerWithDefaults() *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner {
	this := LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner{}
	return &this
}

// GetAdvertiseFilters returns the AdvertiseFilters field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetAdvertiseFilters() []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner {
	if o == nil || IsNil(o.AdvertiseFilters) {
		var ret []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner
		return ret
	}
	return o.AdvertiseFilters
}

// GetAdvertiseFiltersOk returns a tuple with the AdvertiseFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetAdvertiseFiltersOk() ([]LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner, bool) {
	if o == nil || IsNil(o.AdvertiseFilters) {
		return nil, false
	}
	return o.AdvertiseFilters, true
}

// HasAdvertiseFilters returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) HasAdvertiseFilters() bool {
	if o != nil && !IsNil(o.AdvertiseFilters) {
		return true
	}

	return false
}

// SetAdvertiseFilters gets a reference to the given []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner and assigns it to the AdvertiseFilters field.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) SetAdvertiseFilters(v []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner) {
	o.AdvertiseFilters = v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) SetName(v string) {
	o.Name = v
}

// GetNonExistFilters returns the NonExistFilters field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetNonExistFilters() []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner {
	if o == nil || IsNil(o.NonExistFilters) {
		var ret []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner
		return ret
	}
	return o.NonExistFilters
}

// GetNonExistFiltersOk returns a tuple with the NonExistFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetNonExistFiltersOk() ([]LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner, bool) {
	if o == nil || IsNil(o.NonExistFilters) {
		return nil, false
	}
	return o.NonExistFilters, true
}

// HasNonExistFilters returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) HasNonExistFilters() bool {
	if o != nil && !IsNil(o.NonExistFilters) {
		return true
	}

	return false
}

// SetNonExistFilters gets a reference to the given []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner and assigns it to the NonExistFilters field.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) SetNonExistFilters(v []LogicalRoutersVrfInnerBgpPolicyAggregationAddressInnerAdvertiseFiltersInner) {
	o.NonExistFilters = v
}

// GetUsedBy returns the UsedBy field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetUsedBy() []map[string]interface{} {
	if o == nil || IsNil(o.UsedBy) {
		var ret []map[string]interface{}
		return ret
	}
	return o.UsedBy
}

// GetUsedByOk returns a tuple with the UsedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) GetUsedByOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.UsedBy) {
		return nil, false
	}
	return o.UsedBy, true
}

// HasUsedBy returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) HasUsedBy() bool {
	if o != nil && !IsNil(o.UsedBy) {
		return true
	}

	return false
}

// SetUsedBy gets a reference to the given []map[string]interface{} and assigns it to the UsedBy field.
func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) SetUsedBy(v []map[string]interface{}) {
	o.UsedBy = v
}

func (o LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvertiseFilters) {
		toSerialize["advertise_filters"] = o.AdvertiseFilters
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NonExistFilters) {
		toSerialize["non_exist_filters"] = o.NonExistFilters
	}
	if !IsNil(o.UsedBy) {
		toSerialize["used_by"] = o.UsedBy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner := _LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner(varLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "advertise_filters")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "name")
		delete(additionalProperties, "non_exist_filters")
		delete(additionalProperties, "used_by")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner struct {
	value *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) Get() *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) Set(val *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner(val *LogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) *NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner {
	return &NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerBgpPolicyConditionalAdvertisementPolicyInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
