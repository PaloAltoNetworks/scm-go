/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission{}

// LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission struct for LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission
type LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission struct {
	AnySourceMulticast      []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner      `json:"any_source_multicast,omitempty"`
	SourceSpecificMulticast []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionSourceSpecificMulticastInner `json:"source_specific_multicast,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission

// NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission instantiates a new LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission() *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission {
	this := LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission{}
	return &this
}

// NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionWithDefaults() *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission {
	this := LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission{}
	return &this
}

// GetAnySourceMulticast returns the AnySourceMulticast field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) GetAnySourceMulticast() []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner {
	if o == nil || IsNil(o.AnySourceMulticast) {
		var ret []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner
		return ret
	}
	return o.AnySourceMulticast
}

// GetAnySourceMulticastOk returns a tuple with the AnySourceMulticast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) GetAnySourceMulticastOk() ([]LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner, bool) {
	if o == nil || IsNil(o.AnySourceMulticast) {
		return nil, false
	}
	return o.AnySourceMulticast, true
}

// HasAnySourceMulticast returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) HasAnySourceMulticast() bool {
	if o != nil && !IsNil(o.AnySourceMulticast) {
		return true
	}

	return false
}

// SetAnySourceMulticast gets a reference to the given []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner and assigns it to the AnySourceMulticast field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) SetAnySourceMulticast(v []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionAnySourceMulticastInner) {
	o.AnySourceMulticast = v
}

// GetSourceSpecificMulticast returns the SourceSpecificMulticast field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) GetSourceSpecificMulticast() []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionSourceSpecificMulticastInner {
	if o == nil || IsNil(o.SourceSpecificMulticast) {
		var ret []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionSourceSpecificMulticastInner
		return ret
	}
	return o.SourceSpecificMulticast
}

// GetSourceSpecificMulticastOk returns a tuple with the SourceSpecificMulticast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) GetSourceSpecificMulticastOk() ([]LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionSourceSpecificMulticastInner, bool) {
	if o == nil || IsNil(o.SourceSpecificMulticast) {
		return nil, false
	}
	return o.SourceSpecificMulticast, true
}

// HasSourceSpecificMulticast returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) HasSourceSpecificMulticast() bool {
	if o != nil && !IsNil(o.SourceSpecificMulticast) {
		return true
	}

	return false
}

// SetSourceSpecificMulticast gets a reference to the given []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionSourceSpecificMulticastInner and assigns it to the SourceSpecificMulticast field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) SetSourceSpecificMulticast(v []LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermissionSourceSpecificMulticastInner) {
	o.SourceSpecificMulticast = v
}

func (o LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnySourceMulticast) {
		toSerialize["any_source_multicast"] = o.AnySourceMulticast
	}
	if !IsNil(o.SourceSpecificMulticast) {
		toSerialize["source_specific_multicast"] = o.SourceSpecificMulticast
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission := _LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission(varLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "any_source_multicast")
		delete(additionalProperties, "source_specific_multicast")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission struct {
	value *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) Get() *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) Set(val *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission(val *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission {
	return &NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
