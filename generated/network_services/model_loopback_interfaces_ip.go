/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LoopbackInterfacesIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoopbackInterfacesIp{}

// LoopbackInterfacesIp loopback ip parent
type LoopbackInterfacesIp struct {
	// Loopback IP address(es)
	Ip                   []string `json:"ip,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoopbackInterfacesIp LoopbackInterfacesIp

// NewLoopbackInterfacesIp instantiates a new LoopbackInterfacesIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoopbackInterfacesIp() *LoopbackInterfacesIp {
	this := LoopbackInterfacesIp{}
	return &this
}

// NewLoopbackInterfacesIpWithDefaults instantiates a new LoopbackInterfacesIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoopbackInterfacesIpWithDefaults() *LoopbackInterfacesIp {
	this := LoopbackInterfacesIp{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *LoopbackInterfacesIp) GetIp() []string {
	if o == nil || IsNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoopbackInterfacesIp) GetIpOk() ([]string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *LoopbackInterfacesIp) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *LoopbackInterfacesIp) SetIp(v []string) {
	o.Ip = v
}

func (o LoopbackInterfacesIp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoopbackInterfacesIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoopbackInterfacesIp) UnmarshalJSON(data []byte) (err error) {
	varLoopbackInterfacesIp := _LoopbackInterfacesIp{}

	err = json.Unmarshal(data, &varLoopbackInterfacesIp)

	if err != nil {
		return err
	}

	*o = LoopbackInterfacesIp(varLoopbackInterfacesIp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoopbackInterfacesIp struct {
	value *LoopbackInterfacesIp
	isSet bool
}

func (v NullableLoopbackInterfacesIp) Get() *LoopbackInterfacesIp {
	return v.value
}

func (v *NullableLoopbackInterfacesIp) Set(val *LoopbackInterfacesIp) {
	v.value = val
	v.isSet = true
}

func (v NullableLoopbackInterfacesIp) IsSet() bool {
	return v.isSet
}

func (v *NullableLoopbackInterfacesIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoopbackInterfacesIp(val *LoopbackInterfacesIp) *NullableLoopbackInterfacesIp {
	return &NullableLoopbackInterfacesIp{value: val, isSet: true}
}

func (v NullableLoopbackInterfacesIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoopbackInterfacesIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
