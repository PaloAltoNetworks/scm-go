/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerOspfGracefulRestart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfGracefulRestart{}

// LogicalRoutersVrfInnerOspfGracefulRestart struct for LogicalRoutersVrfInnerOspfGracefulRestart
type LogicalRoutersVrfInnerOspfGracefulRestart struct {
	Enable                 *bool  `json:"enable,omitempty"`
	GracePeriod            *int32 `json:"grace_period,omitempty"`
	HelperEnable           *bool  `json:"helper_enable,omitempty"`
	MaxNeighborRestartTime *int32 `json:"max_neighbor_restart_time,omitempty"`
	StrictLSAChecking      *bool  `json:"strict_LSA_checking,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfGracefulRestart LogicalRoutersVrfInnerOspfGracefulRestart

// NewLogicalRoutersVrfInnerOspfGracefulRestart instantiates a new LogicalRoutersVrfInnerOspfGracefulRestart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfGracefulRestart() *LogicalRoutersVrfInnerOspfGracefulRestart {
	this := LogicalRoutersVrfInnerOspfGracefulRestart{}
	return &this
}

// NewLogicalRoutersVrfInnerOspfGracefulRestartWithDefaults instantiates a new LogicalRoutersVrfInnerOspfGracefulRestart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfGracefulRestartWithDefaults() *LogicalRoutersVrfInnerOspfGracefulRestart {
	this := LogicalRoutersVrfInnerOspfGracefulRestart{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) SetEnable(v bool) {
	o.Enable = &v
}

// GetGracePeriod returns the GracePeriod field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetGracePeriod() int32 {
	if o == nil || IsNil(o.GracePeriod) {
		var ret int32
		return ret
	}
	return *o.GracePeriod
}

// GetGracePeriodOk returns a tuple with the GracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetGracePeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.GracePeriod) {
		return nil, false
	}
	return o.GracePeriod, true
}

// HasGracePeriod returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) HasGracePeriod() bool {
	if o != nil && !IsNil(o.GracePeriod) {
		return true
	}

	return false
}

// SetGracePeriod gets a reference to the given int32 and assigns it to the GracePeriod field.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) SetGracePeriod(v int32) {
	o.GracePeriod = &v
}

// GetHelperEnable returns the HelperEnable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetHelperEnable() bool {
	if o == nil || IsNil(o.HelperEnable) {
		var ret bool
		return ret
	}
	return *o.HelperEnable
}

// GetHelperEnableOk returns a tuple with the HelperEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetHelperEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.HelperEnable) {
		return nil, false
	}
	return o.HelperEnable, true
}

// HasHelperEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) HasHelperEnable() bool {
	if o != nil && !IsNil(o.HelperEnable) {
		return true
	}

	return false
}

// SetHelperEnable gets a reference to the given bool and assigns it to the HelperEnable field.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) SetHelperEnable(v bool) {
	o.HelperEnable = &v
}

// GetMaxNeighborRestartTime returns the MaxNeighborRestartTime field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetMaxNeighborRestartTime() int32 {
	if o == nil || IsNil(o.MaxNeighborRestartTime) {
		var ret int32
		return ret
	}
	return *o.MaxNeighborRestartTime
}

// GetMaxNeighborRestartTimeOk returns a tuple with the MaxNeighborRestartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetMaxNeighborRestartTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxNeighborRestartTime) {
		return nil, false
	}
	return o.MaxNeighborRestartTime, true
}

// HasMaxNeighborRestartTime returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) HasMaxNeighborRestartTime() bool {
	if o != nil && !IsNil(o.MaxNeighborRestartTime) {
		return true
	}

	return false
}

// SetMaxNeighborRestartTime gets a reference to the given int32 and assigns it to the MaxNeighborRestartTime field.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) SetMaxNeighborRestartTime(v int32) {
	o.MaxNeighborRestartTime = &v
}

// GetStrictLSAChecking returns the StrictLSAChecking field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetStrictLSAChecking() bool {
	if o == nil || IsNil(o.StrictLSAChecking) {
		var ret bool
		return ret
	}
	return *o.StrictLSAChecking
}

// GetStrictLSACheckingOk returns a tuple with the StrictLSAChecking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) GetStrictLSACheckingOk() (*bool, bool) {
	if o == nil || IsNil(o.StrictLSAChecking) {
		return nil, false
	}
	return o.StrictLSAChecking, true
}

// HasStrictLSAChecking returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) HasStrictLSAChecking() bool {
	if o != nil && !IsNil(o.StrictLSAChecking) {
		return true
	}

	return false
}

// SetStrictLSAChecking gets a reference to the given bool and assigns it to the StrictLSAChecking field.
func (o *LogicalRoutersVrfInnerOspfGracefulRestart) SetStrictLSAChecking(v bool) {
	o.StrictLSAChecking = &v
}

func (o LogicalRoutersVrfInnerOspfGracefulRestart) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfGracefulRestart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.GracePeriod) {
		toSerialize["grace_period"] = o.GracePeriod
	}
	if !IsNil(o.HelperEnable) {
		toSerialize["helper_enable"] = o.HelperEnable
	}
	if !IsNil(o.MaxNeighborRestartTime) {
		toSerialize["max_neighbor_restart_time"] = o.MaxNeighborRestartTime
	}
	if !IsNil(o.StrictLSAChecking) {
		toSerialize["strict_LSA_checking"] = o.StrictLSAChecking
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfGracefulRestart) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerOspfGracefulRestart := _LogicalRoutersVrfInnerOspfGracefulRestart{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfGracefulRestart)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfGracefulRestart(varLogicalRoutersVrfInnerOspfGracefulRestart)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "grace_period")
		delete(additionalProperties, "helper_enable")
		delete(additionalProperties, "max_neighbor_restart_time")
		delete(additionalProperties, "strict_LSA_checking")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfGracefulRestart struct {
	value *LogicalRoutersVrfInnerOspfGracefulRestart
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfGracefulRestart) Get() *LogicalRoutersVrfInnerOspfGracefulRestart {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfGracefulRestart) Set(val *LogicalRoutersVrfInnerOspfGracefulRestart) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfGracefulRestart) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfGracefulRestart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfGracefulRestart(val *LogicalRoutersVrfInnerOspfGracefulRestart) *NullableLogicalRoutersVrfInnerOspfGracefulRestart {
	return &NullableLogicalRoutersVrfInnerOspfGracefulRestart{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfGracefulRestart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfGracefulRestart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
