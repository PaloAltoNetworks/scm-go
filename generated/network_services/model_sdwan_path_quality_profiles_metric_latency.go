/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the SdwanPathQualityProfilesMetricLatency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdwanPathQualityProfilesMetricLatency{}

// SdwanPathQualityProfilesMetricLatency struct for SdwanPathQualityProfilesMetricLatency
type SdwanPathQualityProfilesMetricLatency struct {
	// Latency sensitivity
	Sensitivity string `json:"sensitivity"`
	// Latency threshold (ms)
	Threshold            int32 `json:"threshold"`
	AdditionalProperties map[string]interface{}
}

type _SdwanPathQualityProfilesMetricLatency SdwanPathQualityProfilesMetricLatency

// NewSdwanPathQualityProfilesMetricLatency instantiates a new SdwanPathQualityProfilesMetricLatency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdwanPathQualityProfilesMetricLatency(sensitivity string, threshold int32) *SdwanPathQualityProfilesMetricLatency {
	this := SdwanPathQualityProfilesMetricLatency{}
	this.Sensitivity = sensitivity
	this.Threshold = threshold
	return &this
}

// NewSdwanPathQualityProfilesMetricLatencyWithDefaults instantiates a new SdwanPathQualityProfilesMetricLatency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdwanPathQualityProfilesMetricLatencyWithDefaults() *SdwanPathQualityProfilesMetricLatency {
	this := SdwanPathQualityProfilesMetricLatency{}
	var sensitivity string = "medium"
	this.Sensitivity = sensitivity
	var threshold int32 = 100
	this.Threshold = threshold
	return &this
}

// GetSensitivity returns the Sensitivity field value
func (o *SdwanPathQualityProfilesMetricLatency) GetSensitivity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field value
// and a boolean to check if the value has been set.
func (o *SdwanPathQualityProfilesMetricLatency) GetSensitivityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sensitivity, true
}

// SetSensitivity sets field value
func (o *SdwanPathQualityProfilesMetricLatency) SetSensitivity(v string) {
	o.Sensitivity = v
}

// GetThreshold returns the Threshold field value
func (o *SdwanPathQualityProfilesMetricLatency) GetThreshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *SdwanPathQualityProfilesMetricLatency) GetThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *SdwanPathQualityProfilesMetricLatency) SetThreshold(v int32) {
	o.Threshold = v
}

func (o SdwanPathQualityProfilesMetricLatency) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdwanPathQualityProfilesMetricLatency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sensitivity"] = o.Sensitivity
	toSerialize["threshold"] = o.Threshold

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SdwanPathQualityProfilesMetricLatency) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sensitivity",
		"threshold",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSdwanPathQualityProfilesMetricLatency := _SdwanPathQualityProfilesMetricLatency{}

	err = json.Unmarshal(data, &varSdwanPathQualityProfilesMetricLatency)

	if err != nil {
		return err
	}

	*o = SdwanPathQualityProfilesMetricLatency(varSdwanPathQualityProfilesMetricLatency)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sensitivity")
		delete(additionalProperties, "threshold")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSdwanPathQualityProfilesMetricLatency struct {
	value *SdwanPathQualityProfilesMetricLatency
	isSet bool
}

func (v NullableSdwanPathQualityProfilesMetricLatency) Get() *SdwanPathQualityProfilesMetricLatency {
	return v.value
}

func (v *NullableSdwanPathQualityProfilesMetricLatency) Set(val *SdwanPathQualityProfilesMetricLatency) {
	v.value = val
	v.isSet = true
}

func (v NullableSdwanPathQualityProfilesMetricLatency) IsSet() bool {
	return v.isSet
}

func (v *NullableSdwanPathQualityProfilesMetricLatency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdwanPathQualityProfilesMetricLatency(val *SdwanPathQualityProfilesMetricLatency) *NullableSdwanPathQualityProfilesMetricLatency {
	return &NullableSdwanPathQualityProfilesMetricLatency{value: val, isSet: true}
}

func (v NullableSdwanPathQualityProfilesMetricLatency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdwanPathQualityProfilesMetricLatency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
