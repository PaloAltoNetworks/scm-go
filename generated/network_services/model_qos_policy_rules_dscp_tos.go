/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the QosPolicyRulesDscpTos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosPolicyRulesDscpTos{}

// QosPolicyRulesDscpTos struct for QosPolicyRulesDscpTos
type QosPolicyRulesDscpTos struct {
	Codepoints           []QosPolicyRulesDscpTosCodepointsInner `json:"codepoints,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QosPolicyRulesDscpTos QosPolicyRulesDscpTos

// NewQosPolicyRulesDscpTos instantiates a new QosPolicyRulesDscpTos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosPolicyRulesDscpTos() *QosPolicyRulesDscpTos {
	this := QosPolicyRulesDscpTos{}
	return &this
}

// NewQosPolicyRulesDscpTosWithDefaults instantiates a new QosPolicyRulesDscpTos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosPolicyRulesDscpTosWithDefaults() *QosPolicyRulesDscpTos {
	this := QosPolicyRulesDscpTos{}
	return &this
}

// GetCodepoints returns the Codepoints field value if set, zero value otherwise.
func (o *QosPolicyRulesDscpTos) GetCodepoints() []QosPolicyRulesDscpTosCodepointsInner {
	if o == nil || IsNil(o.Codepoints) {
		var ret []QosPolicyRulesDscpTosCodepointsInner
		return ret
	}
	return o.Codepoints
}

// GetCodepointsOk returns a tuple with the Codepoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosPolicyRulesDscpTos) GetCodepointsOk() ([]QosPolicyRulesDscpTosCodepointsInner, bool) {
	if o == nil || IsNil(o.Codepoints) {
		return nil, false
	}
	return o.Codepoints, true
}

// HasCodepoints returns a boolean if a field has been set.
func (o *QosPolicyRulesDscpTos) HasCodepoints() bool {
	if o != nil && !IsNil(o.Codepoints) {
		return true
	}

	return false
}

// SetCodepoints gets a reference to the given []QosPolicyRulesDscpTosCodepointsInner and assigns it to the Codepoints field.
func (o *QosPolicyRulesDscpTos) SetCodepoints(v []QosPolicyRulesDscpTosCodepointsInner) {
	o.Codepoints = v
}

func (o QosPolicyRulesDscpTos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosPolicyRulesDscpTos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Codepoints) {
		toSerialize["codepoints"] = o.Codepoints
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QosPolicyRulesDscpTos) UnmarshalJSON(data []byte) (err error) {
	varQosPolicyRulesDscpTos := _QosPolicyRulesDscpTos{}

	err = json.Unmarshal(data, &varQosPolicyRulesDscpTos)

	if err != nil {
		return err
	}

	*o = QosPolicyRulesDscpTos(varQosPolicyRulesDscpTos)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "codepoints")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQosPolicyRulesDscpTos struct {
	value *QosPolicyRulesDscpTos
	isSet bool
}

func (v NullableQosPolicyRulesDscpTos) Get() *QosPolicyRulesDscpTos {
	return v.value
}

func (v *NullableQosPolicyRulesDscpTos) Set(val *QosPolicyRulesDscpTos) {
	v.value = val
	v.isSet = true
}

func (v NullableQosPolicyRulesDscpTos) IsSet() bool {
	return v.isSet
}

func (v *NullableQosPolicyRulesDscpTos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosPolicyRulesDscpTos(val *QosPolicyRulesDscpTos) *NullableQosPolicyRulesDscpTos {
	return &NullableQosPolicyRulesDscpTos{value: val, isSet: true}
}

func (v NullableQosPolicyRulesDscpTos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosPolicyRulesDscpTos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
