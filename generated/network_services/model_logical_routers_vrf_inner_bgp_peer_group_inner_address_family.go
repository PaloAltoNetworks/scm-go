/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily{}

// LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily struct for LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily
type LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily struct {
	Ipv4                 *string `json:"ipv4,omitempty"`
	Ipv6                 *string `json:"ipv6,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily

// NewLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily instantiates a new LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily() *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily {
	this := LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily{}
	return &this
}

// NewLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamilyWithDefaults instantiates a new LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamilyWithDefaults() *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily {
	this := LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) GetIpv4() string {
	if o == nil || IsNil(o.Ipv4) {
		var ret string
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) GetIpv4Ok() (*string, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given string and assigns it to the Ipv4 field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) SetIpv4(v string) {
	o.Ipv4 = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) GetIpv6() string {
	if o == nil || IsNil(o.Ipv6) {
		var ret string
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) GetIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given string and assigns it to the Ipv6 field.
func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) SetIpv6(v string) {
	o.Ipv6 = &v
}

func (o LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily := _LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily(varLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "ipv6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily struct {
	value *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) Get() *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) Set(val *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily(val *LogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily {
	return &NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerBgpPeerGroupInnerAddressFamily) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
