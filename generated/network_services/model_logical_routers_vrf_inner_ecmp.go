/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerEcmp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerEcmp{}

// LogicalRoutersVrfInnerEcmp struct for LogicalRoutersVrfInnerEcmp
type LogicalRoutersVrfInnerEcmp struct {
	Algorithm            *LogicalRoutersVrfInnerEcmpAlgorithm `json:"algorithm,omitempty"`
	Enable               *bool                                `json:"enable,omitempty"`
	MaxPath              *float32                             `json:"max_path,omitempty"`
	StrictSourcePath     *bool                                `json:"strict_source_path,omitempty"`
	SymmetricReturn      *bool                                `json:"symmetric_return,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerEcmp LogicalRoutersVrfInnerEcmp

// NewLogicalRoutersVrfInnerEcmp instantiates a new LogicalRoutersVrfInnerEcmp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerEcmp() *LogicalRoutersVrfInnerEcmp {
	this := LogicalRoutersVrfInnerEcmp{}
	return &this
}

// NewLogicalRoutersVrfInnerEcmpWithDefaults instantiates a new LogicalRoutersVrfInnerEcmp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerEcmpWithDefaults() *LogicalRoutersVrfInnerEcmp {
	this := LogicalRoutersVrfInnerEcmp{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmp) GetAlgorithm() LogicalRoutersVrfInnerEcmpAlgorithm {
	if o == nil || IsNil(o.Algorithm) {
		var ret LogicalRoutersVrfInnerEcmpAlgorithm
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmp) GetAlgorithmOk() (*LogicalRoutersVrfInnerEcmpAlgorithm, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmp) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given LogicalRoutersVrfInnerEcmpAlgorithm and assigns it to the Algorithm field.
func (o *LogicalRoutersVrfInnerEcmp) SetAlgorithm(v LogicalRoutersVrfInnerEcmpAlgorithm) {
	o.Algorithm = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmp) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmp) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmp) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *LogicalRoutersVrfInnerEcmp) SetEnable(v bool) {
	o.Enable = &v
}

// GetMaxPath returns the MaxPath field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmp) GetMaxPath() float32 {
	if o == nil || IsNil(o.MaxPath) {
		var ret float32
		return ret
	}
	return *o.MaxPath
}

// GetMaxPathOk returns a tuple with the MaxPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmp) GetMaxPathOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxPath) {
		return nil, false
	}
	return o.MaxPath, true
}

// HasMaxPath returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmp) HasMaxPath() bool {
	if o != nil && !IsNil(o.MaxPath) {
		return true
	}

	return false
}

// SetMaxPath gets a reference to the given float32 and assigns it to the MaxPath field.
func (o *LogicalRoutersVrfInnerEcmp) SetMaxPath(v float32) {
	o.MaxPath = &v
}

// GetStrictSourcePath returns the StrictSourcePath field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmp) GetStrictSourcePath() bool {
	if o == nil || IsNil(o.StrictSourcePath) {
		var ret bool
		return ret
	}
	return *o.StrictSourcePath
}

// GetStrictSourcePathOk returns a tuple with the StrictSourcePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmp) GetStrictSourcePathOk() (*bool, bool) {
	if o == nil || IsNil(o.StrictSourcePath) {
		return nil, false
	}
	return o.StrictSourcePath, true
}

// HasStrictSourcePath returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmp) HasStrictSourcePath() bool {
	if o != nil && !IsNil(o.StrictSourcePath) {
		return true
	}

	return false
}

// SetStrictSourcePath gets a reference to the given bool and assigns it to the StrictSourcePath field.
func (o *LogicalRoutersVrfInnerEcmp) SetStrictSourcePath(v bool) {
	o.StrictSourcePath = &v
}

// GetSymmetricReturn returns the SymmetricReturn field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerEcmp) GetSymmetricReturn() bool {
	if o == nil || IsNil(o.SymmetricReturn) {
		var ret bool
		return ret
	}
	return *o.SymmetricReturn
}

// GetSymmetricReturnOk returns a tuple with the SymmetricReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerEcmp) GetSymmetricReturnOk() (*bool, bool) {
	if o == nil || IsNil(o.SymmetricReturn) {
		return nil, false
	}
	return o.SymmetricReturn, true
}

// HasSymmetricReturn returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerEcmp) HasSymmetricReturn() bool {
	if o != nil && !IsNil(o.SymmetricReturn) {
		return true
	}

	return false
}

// SetSymmetricReturn gets a reference to the given bool and assigns it to the SymmetricReturn field.
func (o *LogicalRoutersVrfInnerEcmp) SetSymmetricReturn(v bool) {
	o.SymmetricReturn = &v
}

func (o LogicalRoutersVrfInnerEcmp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerEcmp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.MaxPath) {
		toSerialize["max_path"] = o.MaxPath
	}
	if !IsNil(o.StrictSourcePath) {
		toSerialize["strict_source_path"] = o.StrictSourcePath
	}
	if !IsNil(o.SymmetricReturn) {
		toSerialize["symmetric_return"] = o.SymmetricReturn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerEcmp) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerEcmp := _LogicalRoutersVrfInnerEcmp{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerEcmp)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerEcmp(varLogicalRoutersVrfInnerEcmp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "algorithm")
		delete(additionalProperties, "enable")
		delete(additionalProperties, "max_path")
		delete(additionalProperties, "strict_source_path")
		delete(additionalProperties, "symmetric_return")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerEcmp struct {
	value *LogicalRoutersVrfInnerEcmp
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerEcmp) Get() *LogicalRoutersVrfInnerEcmp {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerEcmp) Set(val *LogicalRoutersVrfInnerEcmp) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerEcmp) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerEcmp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerEcmp(val *LogicalRoutersVrfInnerEcmp) *NullableLogicalRoutersVrfInnerEcmp {
	return &NullableLogicalRoutersVrfInnerEcmp{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerEcmp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerEcmp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
