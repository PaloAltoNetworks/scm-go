/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the EthernetInterfacesLayer2Lldp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthernetInterfacesLayer2Lldp{}

// EthernetInterfacesLayer2Lldp LLDP Settings
type EthernetInterfacesLayer2Lldp struct {
	// Enable LLDP on Interface
	Enable               bool `json:"enable"`
	AdditionalProperties map[string]interface{}
}

type _EthernetInterfacesLayer2Lldp EthernetInterfacesLayer2Lldp

// NewEthernetInterfacesLayer2Lldp instantiates a new EthernetInterfacesLayer2Lldp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthernetInterfacesLayer2Lldp(enable bool) *EthernetInterfacesLayer2Lldp {
	this := EthernetInterfacesLayer2Lldp{}
	this.Enable = enable
	return &this
}

// NewEthernetInterfacesLayer2LldpWithDefaults instantiates a new EthernetInterfacesLayer2Lldp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthernetInterfacesLayer2LldpWithDefaults() *EthernetInterfacesLayer2Lldp {
	this := EthernetInterfacesLayer2Lldp{}
	var enable bool = false
	this.Enable = enable
	return &this
}

// GetEnable returns the Enable field value
func (o *EthernetInterfacesLayer2Lldp) GetEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value
// and a boolean to check if the value has been set.
func (o *EthernetInterfacesLayer2Lldp) GetEnableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enable, true
}

// SetEnable sets field value
func (o *EthernetInterfacesLayer2Lldp) SetEnable(v bool) {
	o.Enable = v
}

func (o EthernetInterfacesLayer2Lldp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthernetInterfacesLayer2Lldp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enable"] = o.Enable

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EthernetInterfacesLayer2Lldp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEthernetInterfacesLayer2Lldp := _EthernetInterfacesLayer2Lldp{}

	err = json.Unmarshal(data, &varEthernetInterfacesLayer2Lldp)

	if err != nil {
		return err
	}

	*o = EthernetInterfacesLayer2Lldp(varEthernetInterfacesLayer2Lldp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEthernetInterfacesLayer2Lldp struct {
	value *EthernetInterfacesLayer2Lldp
	isSet bool
}

func (v NullableEthernetInterfacesLayer2Lldp) Get() *EthernetInterfacesLayer2Lldp {
	return v.value
}

func (v *NullableEthernetInterfacesLayer2Lldp) Set(val *EthernetInterfacesLayer2Lldp) {
	v.value = val
	v.isSet = true
}

func (v NullableEthernetInterfacesLayer2Lldp) IsSet() bool {
	return v.isSet
}

func (v *NullableEthernetInterfacesLayer2Lldp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthernetInterfacesLayer2Lldp(val *EthernetInterfacesLayer2Lldp) *NullableEthernetInterfacesLayer2Lldp {
	return &NullableEthernetInterfacesLayer2Lldp{value: val, isSet: true}
}

func (v NullableEthernetInterfacesLayer2Lldp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthernetInterfacesLayer2Lldp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
