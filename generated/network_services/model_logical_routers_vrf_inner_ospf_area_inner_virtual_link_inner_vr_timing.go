/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming{}

// LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming struct for LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming
type LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming struct {
	DeadCounts           *float32 `json:"dead_counts,omitempty"`
	HelloInterval        *float32 `json:"hello_interval,omitempty"`
	RetransmitInterval   *float32 `json:"retransmit_interval,omitempty"`
	TransitDelay         *float32 `json:"transit_delay,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming

// NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming instantiates a new LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming() *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming {
	this := LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming{}
	return &this
}

// NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTimingWithDefaults instantiates a new LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTimingWithDefaults() *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming {
	this := LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming{}
	return &this
}

// GetDeadCounts returns the DeadCounts field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetDeadCounts() float32 {
	if o == nil || IsNil(o.DeadCounts) {
		var ret float32
		return ret
	}
	return *o.DeadCounts
}

// GetDeadCountsOk returns a tuple with the DeadCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetDeadCountsOk() (*float32, bool) {
	if o == nil || IsNil(o.DeadCounts) {
		return nil, false
	}
	return o.DeadCounts, true
}

// HasDeadCounts returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) HasDeadCounts() bool {
	if o != nil && !IsNil(o.DeadCounts) {
		return true
	}

	return false
}

// SetDeadCounts gets a reference to the given float32 and assigns it to the DeadCounts field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) SetDeadCounts(v float32) {
	o.DeadCounts = &v
}

// GetHelloInterval returns the HelloInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetHelloInterval() float32 {
	if o == nil || IsNil(o.HelloInterval) {
		var ret float32
		return ret
	}
	return *o.HelloInterval
}

// GetHelloIntervalOk returns a tuple with the HelloInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetHelloIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.HelloInterval) {
		return nil, false
	}
	return o.HelloInterval, true
}

// HasHelloInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) HasHelloInterval() bool {
	if o != nil && !IsNil(o.HelloInterval) {
		return true
	}

	return false
}

// SetHelloInterval gets a reference to the given float32 and assigns it to the HelloInterval field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) SetHelloInterval(v float32) {
	o.HelloInterval = &v
}

// GetRetransmitInterval returns the RetransmitInterval field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetRetransmitInterval() float32 {
	if o == nil || IsNil(o.RetransmitInterval) {
		var ret float32
		return ret
	}
	return *o.RetransmitInterval
}

// GetRetransmitIntervalOk returns a tuple with the RetransmitInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetRetransmitIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.RetransmitInterval) {
		return nil, false
	}
	return o.RetransmitInterval, true
}

// HasRetransmitInterval returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) HasRetransmitInterval() bool {
	if o != nil && !IsNil(o.RetransmitInterval) {
		return true
	}

	return false
}

// SetRetransmitInterval gets a reference to the given float32 and assigns it to the RetransmitInterval field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) SetRetransmitInterval(v float32) {
	o.RetransmitInterval = &v
}

// GetTransitDelay returns the TransitDelay field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetTransitDelay() float32 {
	if o == nil || IsNil(o.TransitDelay) {
		var ret float32
		return ret
	}
	return *o.TransitDelay
}

// GetTransitDelayOk returns a tuple with the TransitDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) GetTransitDelayOk() (*float32, bool) {
	if o == nil || IsNil(o.TransitDelay) {
		return nil, false
	}
	return o.TransitDelay, true
}

// HasTransitDelay returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) HasTransitDelay() bool {
	if o != nil && !IsNil(o.TransitDelay) {
		return true
	}

	return false
}

// SetTransitDelay gets a reference to the given float32 and assigns it to the TransitDelay field.
func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) SetTransitDelay(v float32) {
	o.TransitDelay = &v
}

func (o LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeadCounts) {
		toSerialize["dead_counts"] = o.DeadCounts
	}
	if !IsNil(o.HelloInterval) {
		toSerialize["hello_interval"] = o.HelloInterval
	}
	if !IsNil(o.RetransmitInterval) {
		toSerialize["retransmit_interval"] = o.RetransmitInterval
	}
	if !IsNil(o.TransitDelay) {
		toSerialize["transit_delay"] = o.TransitDelay
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming := _LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming(varLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dead_counts")
		delete(additionalProperties, "hello_interval")
		delete(additionalProperties, "retransmit_interval")
		delete(additionalProperties, "transit_delay")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming struct {
	value *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) Get() *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) Set(val *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming(val *LogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming {
	return &NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfAreaInnerVirtualLinkInnerVrTiming) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
