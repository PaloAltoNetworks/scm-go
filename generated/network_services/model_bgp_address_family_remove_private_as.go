/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the BgpAddressFamilyRemovePrivateAS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpAddressFamilyRemovePrivateAS{}

// BgpAddressFamilyRemovePrivateAS struct for BgpAddressFamilyRemovePrivateAS
type BgpAddressFamilyRemovePrivateAS struct {
	All                  map[string]interface{} `json:"all,omitempty"`
	ReplaceAS            map[string]interface{} `json:"replace_AS,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpAddressFamilyRemovePrivateAS BgpAddressFamilyRemovePrivateAS

// NewBgpAddressFamilyRemovePrivateAS instantiates a new BgpAddressFamilyRemovePrivateAS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpAddressFamilyRemovePrivateAS() *BgpAddressFamilyRemovePrivateAS {
	this := BgpAddressFamilyRemovePrivateAS{}
	return &this
}

// NewBgpAddressFamilyRemovePrivateASWithDefaults instantiates a new BgpAddressFamilyRemovePrivateAS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpAddressFamilyRemovePrivateASWithDefaults() *BgpAddressFamilyRemovePrivateAS {
	this := BgpAddressFamilyRemovePrivateAS{}
	return &this
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *BgpAddressFamilyRemovePrivateAS) GetAll() map[string]interface{} {
	if o == nil || IsNil(o.All) {
		var ret map[string]interface{}
		return ret
	}
	return o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpAddressFamilyRemovePrivateAS) GetAllOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.All) {
		return map[string]interface{}{}, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *BgpAddressFamilyRemovePrivateAS) HasAll() bool {
	if o != nil && !IsNil(o.All) {
		return true
	}

	return false
}

// SetAll gets a reference to the given map[string]interface{} and assigns it to the All field.
func (o *BgpAddressFamilyRemovePrivateAS) SetAll(v map[string]interface{}) {
	o.All = v
}

// GetReplaceAS returns the ReplaceAS field value if set, zero value otherwise.
func (o *BgpAddressFamilyRemovePrivateAS) GetReplaceAS() map[string]interface{} {
	if o == nil || IsNil(o.ReplaceAS) {
		var ret map[string]interface{}
		return ret
	}
	return o.ReplaceAS
}

// GetReplaceASOk returns a tuple with the ReplaceAS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpAddressFamilyRemovePrivateAS) GetReplaceASOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ReplaceAS) {
		return map[string]interface{}{}, false
	}
	return o.ReplaceAS, true
}

// HasReplaceAS returns a boolean if a field has been set.
func (o *BgpAddressFamilyRemovePrivateAS) HasReplaceAS() bool {
	if o != nil && !IsNil(o.ReplaceAS) {
		return true
	}

	return false
}

// SetReplaceAS gets a reference to the given map[string]interface{} and assigns it to the ReplaceAS field.
func (o *BgpAddressFamilyRemovePrivateAS) SetReplaceAS(v map[string]interface{}) {
	o.ReplaceAS = v
}

func (o BgpAddressFamilyRemovePrivateAS) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpAddressFamilyRemovePrivateAS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.All) {
		toSerialize["all"] = o.All
	}
	if !IsNil(o.ReplaceAS) {
		toSerialize["replace_AS"] = o.ReplaceAS
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpAddressFamilyRemovePrivateAS) UnmarshalJSON(data []byte) (err error) {
	varBgpAddressFamilyRemovePrivateAS := _BgpAddressFamilyRemovePrivateAS{}

	err = json.Unmarshal(data, &varBgpAddressFamilyRemovePrivateAS)

	if err != nil {
		return err
	}

	*o = BgpAddressFamilyRemovePrivateAS(varBgpAddressFamilyRemovePrivateAS)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "all")
		delete(additionalProperties, "replace_AS")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpAddressFamilyRemovePrivateAS struct {
	value *BgpAddressFamilyRemovePrivateAS
	isSet bool
}

func (v NullableBgpAddressFamilyRemovePrivateAS) Get() *BgpAddressFamilyRemovePrivateAS {
	return v.value
}

func (v *NullableBgpAddressFamilyRemovePrivateAS) Set(val *BgpAddressFamilyRemovePrivateAS) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpAddressFamilyRemovePrivateAS) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpAddressFamilyRemovePrivateAS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpAddressFamilyRemovePrivateAS(val *BgpAddressFamilyRemovePrivateAS) *NullableBgpAddressFamilyRemovePrivateAS {
	return &NullableBgpAddressFamilyRemovePrivateAS{value: val, isSet: true}
}

func (v NullableBgpAddressFamilyRemovePrivateAS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpAddressFamilyRemovePrivateAS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
