/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop{}

// LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop struct for LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop
type LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop struct {
	Discard              map[string]interface{} `json:"discard,omitempty"`
	Fqdn                 *string                `json:"fqdn,omitempty"`
	Ipv6Address          *string                `json:"ipv6_address,omitempty"`
	NextLr               *string                `json:"next_lr,omitempty"`
	NextVr               *string                `json:"next_vr,omitempty"`
	Receive              map[string]interface{} `json:"receive,omitempty"`
	Tunnel               *string                `json:"tunnel,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop

// NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop instantiates a new LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop() *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop {
	this := LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop{}
	return &this
}

// NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthopWithDefaults instantiates a new LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthopWithDefaults() *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop {
	this := LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop{}
	return &this
}

// GetDiscard returns the Discard field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetDiscard() map[string]interface{} {
	if o == nil || IsNil(o.Discard) {
		var ret map[string]interface{}
		return ret
	}
	return o.Discard
}

// GetDiscardOk returns a tuple with the Discard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetDiscardOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Discard) {
		return map[string]interface{}{}, false
	}
	return o.Discard, true
}

// HasDiscard returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasDiscard() bool {
	if o != nil && !IsNil(o.Discard) {
		return true
	}

	return false
}

// SetDiscard gets a reference to the given map[string]interface{} and assigns it to the Discard field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetDiscard(v map[string]interface{}) {
	o.Discard = v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetIpv6Address returns the Ipv6Address field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetIpv6Address() string {
	if o == nil || IsNil(o.Ipv6Address) {
		var ret string
		return ret
	}
	return *o.Ipv6Address
}

// GetIpv6AddressOk returns a tuple with the Ipv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetIpv6AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6Address) {
		return nil, false
	}
	return o.Ipv6Address, true
}

// HasIpv6Address returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasIpv6Address() bool {
	if o != nil && !IsNil(o.Ipv6Address) {
		return true
	}

	return false
}

// SetIpv6Address gets a reference to the given string and assigns it to the Ipv6Address field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetIpv6Address(v string) {
	o.Ipv6Address = &v
}

// GetNextLr returns the NextLr field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetNextLr() string {
	if o == nil || IsNil(o.NextLr) {
		var ret string
		return ret
	}
	return *o.NextLr
}

// GetNextLrOk returns a tuple with the NextLr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetNextLrOk() (*string, bool) {
	if o == nil || IsNil(o.NextLr) {
		return nil, false
	}
	return o.NextLr, true
}

// HasNextLr returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasNextLr() bool {
	if o != nil && !IsNil(o.NextLr) {
		return true
	}

	return false
}

// SetNextLr gets a reference to the given string and assigns it to the NextLr field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetNextLr(v string) {
	o.NextLr = &v
}

// GetNextVr returns the NextVr field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetNextVr() string {
	if o == nil || IsNil(o.NextVr) {
		var ret string
		return ret
	}
	return *o.NextVr
}

// GetNextVrOk returns a tuple with the NextVr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetNextVrOk() (*string, bool) {
	if o == nil || IsNil(o.NextVr) {
		return nil, false
	}
	return o.NextVr, true
}

// HasNextVr returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasNextVr() bool {
	if o != nil && !IsNil(o.NextVr) {
		return true
	}

	return false
}

// SetNextVr gets a reference to the given string and assigns it to the NextVr field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetNextVr(v string) {
	o.NextVr = &v
}

// GetReceive returns the Receive field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetReceive() map[string]interface{} {
	if o == nil || IsNil(o.Receive) {
		var ret map[string]interface{}
		return ret
	}
	return o.Receive
}

// GetReceiveOk returns a tuple with the Receive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetReceiveOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Receive) {
		return map[string]interface{}{}, false
	}
	return o.Receive, true
}

// HasReceive returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasReceive() bool {
	if o != nil && !IsNil(o.Receive) {
		return true
	}

	return false
}

// SetReceive gets a reference to the given map[string]interface{} and assigns it to the Receive field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetReceive(v map[string]interface{}) {
	o.Receive = v
}

// GetTunnel returns the Tunnel field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetTunnel() string {
	if o == nil || IsNil(o.Tunnel) {
		var ret string
		return ret
	}
	return *o.Tunnel
}

// GetTunnelOk returns a tuple with the Tunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) GetTunnelOk() (*string, bool) {
	if o == nil || IsNil(o.Tunnel) {
		return nil, false
	}
	return o.Tunnel, true
}

// HasTunnel returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) HasTunnel() bool {
	if o != nil && !IsNil(o.Tunnel) {
		return true
	}

	return false
}

// SetTunnel gets a reference to the given string and assigns it to the Tunnel field.
func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) SetTunnel(v string) {
	o.Tunnel = &v
}

func (o LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discard) {
		toSerialize["discard"] = o.Discard
	}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if !IsNil(o.Ipv6Address) {
		toSerialize["ipv6_address"] = o.Ipv6Address
	}
	if !IsNil(o.NextLr) {
		toSerialize["next_lr"] = o.NextLr
	}
	if !IsNil(o.NextVr) {
		toSerialize["next_vr"] = o.NextVr
	}
	if !IsNil(o.Receive) {
		toSerialize["receive"] = o.Receive
	}
	if !IsNil(o.Tunnel) {
		toSerialize["tunnel"] = o.Tunnel
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) UnmarshalJSON(data []byte) (err error) {
	varLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop := _LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop(varLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "discard")
		delete(additionalProperties, "fqdn")
		delete(additionalProperties, "ipv6_address")
		delete(additionalProperties, "next_lr")
		delete(additionalProperties, "next_vr")
		delete(additionalProperties, "receive")
		delete(additionalProperties, "tunnel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop struct {
	value *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) Get() *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) Set(val *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop(val *LogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop {
	return &NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerRoutingTableIpStaticRouteInnerNexthop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
