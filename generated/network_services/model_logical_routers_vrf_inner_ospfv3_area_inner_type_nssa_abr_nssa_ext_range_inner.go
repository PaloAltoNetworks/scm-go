/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner{}

// LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner struct for LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner
type LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner struct {
	Advertise            map[string]interface{} `json:"advertise,omitempty"`
	Name                 string                 `json:"name"`
	RouteTag             *float32               `json:"route_tag,omitempty"`
	Suppress             map[string]interface{} `json:"suppress,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner

// NewLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner instantiates a new LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner(name string) *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner {
	this := LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInnerWithDefaults instantiates a new LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInnerWithDefaults() *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner {
	this := LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner{}
	return &this
}

// GetAdvertise returns the Advertise field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetAdvertise() map[string]interface{} {
	if o == nil || IsNil(o.Advertise) {
		var ret map[string]interface{}
		return ret
	}
	return o.Advertise
}

// GetAdvertiseOk returns a tuple with the Advertise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetAdvertiseOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Advertise) {
		return map[string]interface{}{}, false
	}
	return o.Advertise, true
}

// HasAdvertise returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) HasAdvertise() bool {
	if o != nil && !IsNil(o.Advertise) {
		return true
	}

	return false
}

// SetAdvertise gets a reference to the given map[string]interface{} and assigns it to the Advertise field.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) SetAdvertise(v map[string]interface{}) {
	o.Advertise = v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) SetName(v string) {
	o.Name = v
}

// GetRouteTag returns the RouteTag field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetRouteTag() float32 {
	if o == nil || IsNil(o.RouteTag) {
		var ret float32
		return ret
	}
	return *o.RouteTag
}

// GetRouteTagOk returns a tuple with the RouteTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetRouteTagOk() (*float32, bool) {
	if o == nil || IsNil(o.RouteTag) {
		return nil, false
	}
	return o.RouteTag, true
}

// HasRouteTag returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) HasRouteTag() bool {
	if o != nil && !IsNil(o.RouteTag) {
		return true
	}

	return false
}

// SetRouteTag gets a reference to the given float32 and assigns it to the RouteTag field.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) SetRouteTag(v float32) {
	o.RouteTag = &v
}

// GetSuppress returns the Suppress field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetSuppress() map[string]interface{} {
	if o == nil || IsNil(o.Suppress) {
		var ret map[string]interface{}
		return ret
	}
	return o.Suppress
}

// GetSuppressOk returns a tuple with the Suppress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) GetSuppressOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Suppress) {
		return map[string]interface{}{}, false
	}
	return o.Suppress, true
}

// HasSuppress returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) HasSuppress() bool {
	if o != nil && !IsNil(o.Suppress) {
		return true
	}

	return false
}

// SetSuppress gets a reference to the given map[string]interface{} and assigns it to the Suppress field.
func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) SetSuppress(v map[string]interface{}) {
	o.Suppress = v
}

func (o LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Advertise) {
		toSerialize["advertise"] = o.Advertise
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.RouteTag) {
		toSerialize["route_tag"] = o.RouteTag
	}
	if !IsNil(o.Suppress) {
		toSerialize["suppress"] = o.Suppress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner := _LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner(varLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "advertise")
		delete(additionalProperties, "name")
		delete(additionalProperties, "route_tag")
		delete(additionalProperties, "suppress")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner struct {
	value *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) Get() *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) Set(val *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner(val *LogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) *NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner {
	return &NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerOspfv3AreaInnerTypeNssaAbrNssaExtRangeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
