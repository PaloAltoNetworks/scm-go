/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the PbfRulesAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PbfRulesAction{}

// PbfRulesAction struct for PbfRulesAction
type PbfRulesAction struct {
	Discard              map[string]interface{} `json:"discard,omitempty"`
	Forward              *PbfRulesActionForward `json:"forward,omitempty"`
	NoPbf                map[string]interface{} `json:"no_pbf,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PbfRulesAction PbfRulesAction

// NewPbfRulesAction instantiates a new PbfRulesAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPbfRulesAction() *PbfRulesAction {
	this := PbfRulesAction{}
	return &this
}

// NewPbfRulesActionWithDefaults instantiates a new PbfRulesAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPbfRulesActionWithDefaults() *PbfRulesAction {
	this := PbfRulesAction{}
	return &this
}

// GetDiscard returns the Discard field value if set, zero value otherwise.
func (o *PbfRulesAction) GetDiscard() map[string]interface{} {
	if o == nil || IsNil(o.Discard) {
		var ret map[string]interface{}
		return ret
	}
	return o.Discard
}

// GetDiscardOk returns a tuple with the Discard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesAction) GetDiscardOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Discard) {
		return map[string]interface{}{}, false
	}
	return o.Discard, true
}

// HasDiscard returns a boolean if a field has been set.
func (o *PbfRulesAction) HasDiscard() bool {
	if o != nil && !IsNil(o.Discard) {
		return true
	}

	return false
}

// SetDiscard gets a reference to the given map[string]interface{} and assigns it to the Discard field.
func (o *PbfRulesAction) SetDiscard(v map[string]interface{}) {
	o.Discard = v
}

// GetForward returns the Forward field value if set, zero value otherwise.
func (o *PbfRulesAction) GetForward() PbfRulesActionForward {
	if o == nil || IsNil(o.Forward) {
		var ret PbfRulesActionForward
		return ret
	}
	return *o.Forward
}

// GetForwardOk returns a tuple with the Forward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesAction) GetForwardOk() (*PbfRulesActionForward, bool) {
	if o == nil || IsNil(o.Forward) {
		return nil, false
	}
	return o.Forward, true
}

// HasForward returns a boolean if a field has been set.
func (o *PbfRulesAction) HasForward() bool {
	if o != nil && !IsNil(o.Forward) {
		return true
	}

	return false
}

// SetForward gets a reference to the given PbfRulesActionForward and assigns it to the Forward field.
func (o *PbfRulesAction) SetForward(v PbfRulesActionForward) {
	o.Forward = &v
}

// GetNoPbf returns the NoPbf field value if set, zero value otherwise.
func (o *PbfRulesAction) GetNoPbf() map[string]interface{} {
	if o == nil || IsNil(o.NoPbf) {
		var ret map[string]interface{}
		return ret
	}
	return o.NoPbf
}

// GetNoPbfOk returns a tuple with the NoPbf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PbfRulesAction) GetNoPbfOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NoPbf) {
		return map[string]interface{}{}, false
	}
	return o.NoPbf, true
}

// HasNoPbf returns a boolean if a field has been set.
func (o *PbfRulesAction) HasNoPbf() bool {
	if o != nil && !IsNil(o.NoPbf) {
		return true
	}

	return false
}

// SetNoPbf gets a reference to the given map[string]interface{} and assigns it to the NoPbf field.
func (o *PbfRulesAction) SetNoPbf(v map[string]interface{}) {
	o.NoPbf = v
}

func (o PbfRulesAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PbfRulesAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discard) {
		toSerialize["discard"] = o.Discard
	}
	if !IsNil(o.Forward) {
		toSerialize["forward"] = o.Forward
	}
	if !IsNil(o.NoPbf) {
		toSerialize["no_pbf"] = o.NoPbf
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PbfRulesAction) UnmarshalJSON(data []byte) (err error) {
	varPbfRulesAction := _PbfRulesAction{}

	err = json.Unmarshal(data, &varPbfRulesAction)

	if err != nil {
		return err
	}

	*o = PbfRulesAction(varPbfRulesAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "discard")
		delete(additionalProperties, "forward")
		delete(additionalProperties, "no_pbf")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePbfRulesAction struct {
	value *PbfRulesAction
	isSet bool
}

func (v NullablePbfRulesAction) Get() *PbfRulesAction {
	return v.value
}

func (v *NullablePbfRulesAction) Set(val *PbfRulesAction) {
	v.value = val
	v.isSet = true
}

func (v NullablePbfRulesAction) IsSet() bool {
	return v.isSet
}

func (v *NullablePbfRulesAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePbfRulesAction(val *PbfRulesAction) *NullablePbfRulesAction {
	return &NullablePbfRulesAction{value: val, isSet: true}
}

func (v NullablePbfRulesAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePbfRulesAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
