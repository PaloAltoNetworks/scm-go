/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
)

// checks if the DnsProxiesUdpQueries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsProxiesUdpQueries{}

// DnsProxiesUdpQueries struct for DnsProxiesUdpQueries
type DnsProxiesUdpQueries struct {
	Retries              *DnsProxiesUdpQueriesRetries `json:"retries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DnsProxiesUdpQueries DnsProxiesUdpQueries

// NewDnsProxiesUdpQueries instantiates a new DnsProxiesUdpQueries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsProxiesUdpQueries() *DnsProxiesUdpQueries {
	this := DnsProxiesUdpQueries{}
	return &this
}

// NewDnsProxiesUdpQueriesWithDefaults instantiates a new DnsProxiesUdpQueries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsProxiesUdpQueriesWithDefaults() *DnsProxiesUdpQueries {
	this := DnsProxiesUdpQueries{}
	return &this
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *DnsProxiesUdpQueries) GetRetries() DnsProxiesUdpQueriesRetries {
	if o == nil || IsNil(o.Retries) {
		var ret DnsProxiesUdpQueriesRetries
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsProxiesUdpQueries) GetRetriesOk() (*DnsProxiesUdpQueriesRetries, bool) {
	if o == nil || IsNil(o.Retries) {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *DnsProxiesUdpQueries) HasRetries() bool {
	if o != nil && !IsNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given DnsProxiesUdpQueriesRetries and assigns it to the Retries field.
func (o *DnsProxiesUdpQueries) SetRetries(v DnsProxiesUdpQueriesRetries) {
	o.Retries = &v
}

func (o DnsProxiesUdpQueries) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsProxiesUdpQueries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DnsProxiesUdpQueries) UnmarshalJSON(data []byte) (err error) {
	varDnsProxiesUdpQueries := _DnsProxiesUdpQueries{}

	err = json.Unmarshal(data, &varDnsProxiesUdpQueries)

	if err != nil {
		return err
	}

	*o = DnsProxiesUdpQueries(varDnsProxiesUdpQueries)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "retries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDnsProxiesUdpQueries struct {
	value *DnsProxiesUdpQueries
	isSet bool
}

func (v NullableDnsProxiesUdpQueries) Get() *DnsProxiesUdpQueries {
	return v.value
}

func (v *NullableDnsProxiesUdpQueries) Set(val *DnsProxiesUdpQueries) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsProxiesUdpQueries) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsProxiesUdpQueries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsProxiesUdpQueries(val *DnsProxiesUdpQueries) *NullableDnsProxiesUdpQueries {
	return &NullableDnsProxiesUdpQueries{value: val, isSet: true}
}

func (v NullableDnsProxiesUdpQueries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsProxiesUdpQueries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
