/*
Network Services

These APIs are used for defining and managing network services configuration within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network_services

import (
	"encoding/json"
	"fmt"
)

// checks if the LogicalRoutersVrfInnerMulticastInterfaceGroupInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogicalRoutersVrfInnerMulticastInterfaceGroupInner{}

// LogicalRoutersVrfInnerMulticastInterfaceGroupInner struct for LogicalRoutersVrfInnerMulticastInterfaceGroupInner
type LogicalRoutersVrfInnerMulticastInterfaceGroupInner struct {
	Description          *string                                                            `json:"description,omitempty"`
	GroupPermission      *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission `json:"group_permission,omitempty"`
	Igmp                 *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerIgmp            `json:"igmp,omitempty"`
	Interface            []string                                                           `json:"interface,omitempty"`
	Name                 string                                                             `json:"name"`
	Pim                  *LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim             `json:"pim,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogicalRoutersVrfInnerMulticastInterfaceGroupInner LogicalRoutersVrfInnerMulticastInterfaceGroupInner

// NewLogicalRoutersVrfInnerMulticastInterfaceGroupInner instantiates a new LogicalRoutersVrfInnerMulticastInterfaceGroupInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogicalRoutersVrfInnerMulticastInterfaceGroupInner(name string) *LogicalRoutersVrfInnerMulticastInterfaceGroupInner {
	this := LogicalRoutersVrfInnerMulticastInterfaceGroupInner{}
	this.Name = name
	return &this
}

// NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerWithDefaults instantiates a new LogicalRoutersVrfInnerMulticastInterfaceGroupInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogicalRoutersVrfInnerMulticastInterfaceGroupInnerWithDefaults() *LogicalRoutersVrfInnerMulticastInterfaceGroupInner {
	this := LogicalRoutersVrfInnerMulticastInterfaceGroupInner{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) SetDescription(v string) {
	o.Description = &v
}

// GetGroupPermission returns the GroupPermission field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetGroupPermission() LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission {
	if o == nil || IsNil(o.GroupPermission) {
		var ret LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission
		return ret
	}
	return *o.GroupPermission
}

// GetGroupPermissionOk returns a tuple with the GroupPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetGroupPermissionOk() (*LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission, bool) {
	if o == nil || IsNil(o.GroupPermission) {
		return nil, false
	}
	return o.GroupPermission, true
}

// HasGroupPermission returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) HasGroupPermission() bool {
	if o != nil && !IsNil(o.GroupPermission) {
		return true
	}

	return false
}

// SetGroupPermission gets a reference to the given LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission and assigns it to the GroupPermission field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) SetGroupPermission(v LogicalRoutersVrfInnerMulticastInterfaceGroupInnerGroupPermission) {
	o.GroupPermission = &v
}

// GetIgmp returns the Igmp field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetIgmp() LogicalRoutersVrfInnerMulticastInterfaceGroupInnerIgmp {
	if o == nil || IsNil(o.Igmp) {
		var ret LogicalRoutersVrfInnerMulticastInterfaceGroupInnerIgmp
		return ret
	}
	return *o.Igmp
}

// GetIgmpOk returns a tuple with the Igmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetIgmpOk() (*LogicalRoutersVrfInnerMulticastInterfaceGroupInnerIgmp, bool) {
	if o == nil || IsNil(o.Igmp) {
		return nil, false
	}
	return o.Igmp, true
}

// HasIgmp returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) HasIgmp() bool {
	if o != nil && !IsNil(o.Igmp) {
		return true
	}

	return false
}

// SetIgmp gets a reference to the given LogicalRoutersVrfInnerMulticastInterfaceGroupInnerIgmp and assigns it to the Igmp field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) SetIgmp(v LogicalRoutersVrfInnerMulticastInterfaceGroupInnerIgmp) {
	o.Igmp = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetInterface() []string {
	if o == nil || IsNil(o.Interface) {
		var ret []string
		return ret
	}
	return o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetInterfaceOk() ([]string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given []string and assigns it to the Interface field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) SetInterface(v []string) {
	o.Interface = v
}

// GetName returns the Name field value
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) SetName(v string) {
	o.Name = v
}

// GetPim returns the Pim field value if set, zero value otherwise.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetPim() LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim {
	if o == nil || IsNil(o.Pim) {
		var ret LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim
		return ret
	}
	return *o.Pim
}

// GetPimOk returns a tuple with the Pim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) GetPimOk() (*LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim, bool) {
	if o == nil || IsNil(o.Pim) {
		return nil, false
	}
	return o.Pim, true
}

// HasPim returns a boolean if a field has been set.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) HasPim() bool {
	if o != nil && !IsNil(o.Pim) {
		return true
	}

	return false
}

// SetPim gets a reference to the given LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim and assigns it to the Pim field.
func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) SetPim(v LogicalRoutersVrfInnerMulticastInterfaceGroupInnerPim) {
	o.Pim = &v
}

func (o LogicalRoutersVrfInnerMulticastInterfaceGroupInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogicalRoutersVrfInnerMulticastInterfaceGroupInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GroupPermission) {
		toSerialize["group_permission"] = o.GroupPermission
	}
	if !IsNil(o.Igmp) {
		toSerialize["igmp"] = o.Igmp
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Pim) {
		toSerialize["pim"] = o.Pim
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogicalRoutersVrfInnerMulticastInterfaceGroupInner := _LogicalRoutersVrfInnerMulticastInterfaceGroupInner{}

	err = json.Unmarshal(data, &varLogicalRoutersVrfInnerMulticastInterfaceGroupInner)

	if err != nil {
		return err
	}

	*o = LogicalRoutersVrfInnerMulticastInterfaceGroupInner(varLogicalRoutersVrfInnerMulticastInterfaceGroupInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "group_permission")
		delete(additionalProperties, "igmp")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "name")
		delete(additionalProperties, "pim")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner struct {
	value *LogicalRoutersVrfInnerMulticastInterfaceGroupInner
	isSet bool
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner) Get() *LogicalRoutersVrfInnerMulticastInterfaceGroupInner {
	return v.value
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner) Set(val *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner(val *LogicalRoutersVrfInnerMulticastInterfaceGroupInner) *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner {
	return &NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner{value: val, isSet: true}
}

func (v NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogicalRoutersVrfInnerMulticastInterfaceGroupInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
