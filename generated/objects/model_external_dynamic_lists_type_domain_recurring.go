/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the ExternalDynamicListsTypeDomainRecurring type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalDynamicListsTypeDomainRecurring{}

// ExternalDynamicListsTypeDomainRecurring struct for ExternalDynamicListsTypeDomainRecurring
type ExternalDynamicListsTypeDomainRecurring struct {
	Daily                *ExternalDynamicListsTypeDomainRecurringDaily   `json:"daily,omitempty"`
	FiveMinute           map[string]interface{}                          `json:"five_minute,omitempty"`
	Hourly               map[string]interface{}                          `json:"hourly,omitempty"`
	Monthly              *ExternalDynamicListsTypeDomainRecurringMonthly `json:"monthly,omitempty"`
	Weekly               *ExternalDynamicListsTypeDomainRecurringWeekly  `json:"weekly,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExternalDynamicListsTypeDomainRecurring ExternalDynamicListsTypeDomainRecurring

// NewExternalDynamicListsTypeDomainRecurring instantiates a new ExternalDynamicListsTypeDomainRecurring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalDynamicListsTypeDomainRecurring() *ExternalDynamicListsTypeDomainRecurring {
	this := ExternalDynamicListsTypeDomainRecurring{}
	return &this
}

// NewExternalDynamicListsTypeDomainRecurringWithDefaults instantiates a new ExternalDynamicListsTypeDomainRecurring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalDynamicListsTypeDomainRecurringWithDefaults() *ExternalDynamicListsTypeDomainRecurring {
	this := ExternalDynamicListsTypeDomainRecurring{}
	return &this
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeDomainRecurring) GetDaily() ExternalDynamicListsTypeDomainRecurringDaily {
	if o == nil || IsNil(o.Daily) {
		var ret ExternalDynamicListsTypeDomainRecurringDaily
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) GetDailyOk() (*ExternalDynamicListsTypeDomainRecurringDaily, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) HasDaily() bool {
	if o != nil && !IsNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given ExternalDynamicListsTypeDomainRecurringDaily and assigns it to the Daily field.
func (o *ExternalDynamicListsTypeDomainRecurring) SetDaily(v ExternalDynamicListsTypeDomainRecurringDaily) {
	o.Daily = &v
}

// GetFiveMinute returns the FiveMinute field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeDomainRecurring) GetFiveMinute() map[string]interface{} {
	if o == nil || IsNil(o.FiveMinute) {
		var ret map[string]interface{}
		return ret
	}
	return o.FiveMinute
}

// GetFiveMinuteOk returns a tuple with the FiveMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) GetFiveMinuteOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FiveMinute) {
		return map[string]interface{}{}, false
	}
	return o.FiveMinute, true
}

// HasFiveMinute returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) HasFiveMinute() bool {
	if o != nil && !IsNil(o.FiveMinute) {
		return true
	}

	return false
}

// SetFiveMinute gets a reference to the given map[string]interface{} and assigns it to the FiveMinute field.
func (o *ExternalDynamicListsTypeDomainRecurring) SetFiveMinute(v map[string]interface{}) {
	o.FiveMinute = v
}

// GetHourly returns the Hourly field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeDomainRecurring) GetHourly() map[string]interface{} {
	if o == nil || IsNil(o.Hourly) {
		var ret map[string]interface{}
		return ret
	}
	return o.Hourly
}

// GetHourlyOk returns a tuple with the Hourly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) GetHourlyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Hourly) {
		return map[string]interface{}{}, false
	}
	return o.Hourly, true
}

// HasHourly returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) HasHourly() bool {
	if o != nil && !IsNil(o.Hourly) {
		return true
	}

	return false
}

// SetHourly gets a reference to the given map[string]interface{} and assigns it to the Hourly field.
func (o *ExternalDynamicListsTypeDomainRecurring) SetHourly(v map[string]interface{}) {
	o.Hourly = v
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeDomainRecurring) GetMonthly() ExternalDynamicListsTypeDomainRecurringMonthly {
	if o == nil || IsNil(o.Monthly) {
		var ret ExternalDynamicListsTypeDomainRecurringMonthly
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) GetMonthlyOk() (*ExternalDynamicListsTypeDomainRecurringMonthly, bool) {
	if o == nil || IsNil(o.Monthly) {
		return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) HasMonthly() bool {
	if o != nil && !IsNil(o.Monthly) {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given ExternalDynamicListsTypeDomainRecurringMonthly and assigns it to the Monthly field.
func (o *ExternalDynamicListsTypeDomainRecurring) SetMonthly(v ExternalDynamicListsTypeDomainRecurringMonthly) {
	o.Monthly = &v
}

// GetWeekly returns the Weekly field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeDomainRecurring) GetWeekly() ExternalDynamicListsTypeDomainRecurringWeekly {
	if o == nil || IsNil(o.Weekly) {
		var ret ExternalDynamicListsTypeDomainRecurringWeekly
		return ret
	}
	return *o.Weekly
}

// GetWeeklyOk returns a tuple with the Weekly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) GetWeeklyOk() (*ExternalDynamicListsTypeDomainRecurringWeekly, bool) {
	if o == nil || IsNil(o.Weekly) {
		return nil, false
	}
	return o.Weekly, true
}

// HasWeekly returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeDomainRecurring) HasWeekly() bool {
	if o != nil && !IsNil(o.Weekly) {
		return true
	}

	return false
}

// SetWeekly gets a reference to the given ExternalDynamicListsTypeDomainRecurringWeekly and assigns it to the Weekly field.
func (o *ExternalDynamicListsTypeDomainRecurring) SetWeekly(v ExternalDynamicListsTypeDomainRecurringWeekly) {
	o.Weekly = &v
}

func (o ExternalDynamicListsTypeDomainRecurring) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalDynamicListsTypeDomainRecurring) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.FiveMinute) {
		toSerialize["five_minute"] = o.FiveMinute
	}
	if !IsNil(o.Hourly) {
		toSerialize["hourly"] = o.Hourly
	}
	if !IsNil(o.Monthly) {
		toSerialize["monthly"] = o.Monthly
	}
	if !IsNil(o.Weekly) {
		toSerialize["weekly"] = o.Weekly
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalDynamicListsTypeDomainRecurring) UnmarshalJSON(data []byte) (err error) {
	varExternalDynamicListsTypeDomainRecurring := _ExternalDynamicListsTypeDomainRecurring{}

	err = json.Unmarshal(data, &varExternalDynamicListsTypeDomainRecurring)

	if err != nil {
		return err
	}

	*o = ExternalDynamicListsTypeDomainRecurring(varExternalDynamicListsTypeDomainRecurring)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "daily")
		delete(additionalProperties, "five_minute")
		delete(additionalProperties, "hourly")
		delete(additionalProperties, "monthly")
		delete(additionalProperties, "weekly")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalDynamicListsTypeDomainRecurring struct {
	value *ExternalDynamicListsTypeDomainRecurring
	isSet bool
}

func (v NullableExternalDynamicListsTypeDomainRecurring) Get() *ExternalDynamicListsTypeDomainRecurring {
	return v.value
}

func (v *NullableExternalDynamicListsTypeDomainRecurring) Set(val *ExternalDynamicListsTypeDomainRecurring) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalDynamicListsTypeDomainRecurring) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalDynamicListsTypeDomainRecurring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalDynamicListsTypeDomainRecurring(val *ExternalDynamicListsTypeDomainRecurring) *NullableExternalDynamicListsTypeDomainRecurring {
	return &NullableExternalDynamicListsTypeDomainRecurring{value: val, isSet: true}
}

func (v NullableExternalDynamicListsTypeDomainRecurring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalDynamicListsTypeDomainRecurring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
