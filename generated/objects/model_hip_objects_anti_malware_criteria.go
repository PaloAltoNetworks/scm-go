/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsAntiMalwareCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsAntiMalwareCriteria{}

// HipObjectsAntiMalwareCriteria struct for HipObjectsAntiMalwareCriteria
type HipObjectsAntiMalwareCriteria struct {
	// Is Installed
	IsInstalled    *bool                                        `json:"is_installed,omitempty"`
	LastScanTime   *HipObjectsAntiMalwareCriteriaLastScanTime   `json:"last_scan_time,omitempty"`
	ProductVersion *HipObjectsAntiMalwareCriteriaProductVersion `json:"product_version,omitempty"`
	// real time protection
	RealTimeProtection   *string                                     `json:"real_time_protection,omitempty"`
	VirdefVersion        *HipObjectsAntiMalwareCriteriaVirdefVersion `json:"virdef_version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsAntiMalwareCriteria HipObjectsAntiMalwareCriteria

// NewHipObjectsAntiMalwareCriteria instantiates a new HipObjectsAntiMalwareCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsAntiMalwareCriteria() *HipObjectsAntiMalwareCriteria {
	this := HipObjectsAntiMalwareCriteria{}
	var isInstalled bool = true
	this.IsInstalled = &isInstalled
	return &this
}

// NewHipObjectsAntiMalwareCriteriaWithDefaults instantiates a new HipObjectsAntiMalwareCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsAntiMalwareCriteriaWithDefaults() *HipObjectsAntiMalwareCriteria {
	this := HipObjectsAntiMalwareCriteria{}
	var isInstalled bool = true
	this.IsInstalled = &isInstalled
	return &this
}

// GetIsInstalled returns the IsInstalled field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteria) GetIsInstalled() bool {
	if o == nil || IsNil(o.IsInstalled) {
		var ret bool
		return ret
	}
	return *o.IsInstalled
}

// GetIsInstalledOk returns a tuple with the IsInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteria) GetIsInstalledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInstalled) {
		return nil, false
	}
	return o.IsInstalled, true
}

// HasIsInstalled returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteria) HasIsInstalled() bool {
	if o != nil && !IsNil(o.IsInstalled) {
		return true
	}

	return false
}

// SetIsInstalled gets a reference to the given bool and assigns it to the IsInstalled field.
func (o *HipObjectsAntiMalwareCriteria) SetIsInstalled(v bool) {
	o.IsInstalled = &v
}

// GetLastScanTime returns the LastScanTime field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteria) GetLastScanTime() HipObjectsAntiMalwareCriteriaLastScanTime {
	if o == nil || IsNil(o.LastScanTime) {
		var ret HipObjectsAntiMalwareCriteriaLastScanTime
		return ret
	}
	return *o.LastScanTime
}

// GetLastScanTimeOk returns a tuple with the LastScanTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteria) GetLastScanTimeOk() (*HipObjectsAntiMalwareCriteriaLastScanTime, bool) {
	if o == nil || IsNil(o.LastScanTime) {
		return nil, false
	}
	return o.LastScanTime, true
}

// HasLastScanTime returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteria) HasLastScanTime() bool {
	if o != nil && !IsNil(o.LastScanTime) {
		return true
	}

	return false
}

// SetLastScanTime gets a reference to the given HipObjectsAntiMalwareCriteriaLastScanTime and assigns it to the LastScanTime field.
func (o *HipObjectsAntiMalwareCriteria) SetLastScanTime(v HipObjectsAntiMalwareCriteriaLastScanTime) {
	o.LastScanTime = &v
}

// GetProductVersion returns the ProductVersion field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteria) GetProductVersion() HipObjectsAntiMalwareCriteriaProductVersion {
	if o == nil || IsNil(o.ProductVersion) {
		var ret HipObjectsAntiMalwareCriteriaProductVersion
		return ret
	}
	return *o.ProductVersion
}

// GetProductVersionOk returns a tuple with the ProductVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteria) GetProductVersionOk() (*HipObjectsAntiMalwareCriteriaProductVersion, bool) {
	if o == nil || IsNil(o.ProductVersion) {
		return nil, false
	}
	return o.ProductVersion, true
}

// HasProductVersion returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteria) HasProductVersion() bool {
	if o != nil && !IsNil(o.ProductVersion) {
		return true
	}

	return false
}

// SetProductVersion gets a reference to the given HipObjectsAntiMalwareCriteriaProductVersion and assigns it to the ProductVersion field.
func (o *HipObjectsAntiMalwareCriteria) SetProductVersion(v HipObjectsAntiMalwareCriteriaProductVersion) {
	o.ProductVersion = &v
}

// GetRealTimeProtection returns the RealTimeProtection field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteria) GetRealTimeProtection() string {
	if o == nil || IsNil(o.RealTimeProtection) {
		var ret string
		return ret
	}
	return *o.RealTimeProtection
}

// GetRealTimeProtectionOk returns a tuple with the RealTimeProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteria) GetRealTimeProtectionOk() (*string, bool) {
	if o == nil || IsNil(o.RealTimeProtection) {
		return nil, false
	}
	return o.RealTimeProtection, true
}

// HasRealTimeProtection returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteria) HasRealTimeProtection() bool {
	if o != nil && !IsNil(o.RealTimeProtection) {
		return true
	}

	return false
}

// SetRealTimeProtection gets a reference to the given string and assigns it to the RealTimeProtection field.
func (o *HipObjectsAntiMalwareCriteria) SetRealTimeProtection(v string) {
	o.RealTimeProtection = &v
}

// GetVirdefVersion returns the VirdefVersion field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteria) GetVirdefVersion() HipObjectsAntiMalwareCriteriaVirdefVersion {
	if o == nil || IsNil(o.VirdefVersion) {
		var ret HipObjectsAntiMalwareCriteriaVirdefVersion
		return ret
	}
	return *o.VirdefVersion
}

// GetVirdefVersionOk returns a tuple with the VirdefVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteria) GetVirdefVersionOk() (*HipObjectsAntiMalwareCriteriaVirdefVersion, bool) {
	if o == nil || IsNil(o.VirdefVersion) {
		return nil, false
	}
	return o.VirdefVersion, true
}

// HasVirdefVersion returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteria) HasVirdefVersion() bool {
	if o != nil && !IsNil(o.VirdefVersion) {
		return true
	}

	return false
}

// SetVirdefVersion gets a reference to the given HipObjectsAntiMalwareCriteriaVirdefVersion and assigns it to the VirdefVersion field.
func (o *HipObjectsAntiMalwareCriteria) SetVirdefVersion(v HipObjectsAntiMalwareCriteriaVirdefVersion) {
	o.VirdefVersion = &v
}

func (o HipObjectsAntiMalwareCriteria) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsAntiMalwareCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsInstalled) {
		toSerialize["is_installed"] = o.IsInstalled
	}
	if !IsNil(o.LastScanTime) {
		toSerialize["last_scan_time"] = o.LastScanTime
	}
	if !IsNil(o.ProductVersion) {
		toSerialize["product_version"] = o.ProductVersion
	}
	if !IsNil(o.RealTimeProtection) {
		toSerialize["real_time_protection"] = o.RealTimeProtection
	}
	if !IsNil(o.VirdefVersion) {
		toSerialize["virdef_version"] = o.VirdefVersion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsAntiMalwareCriteria) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsAntiMalwareCriteria := _HipObjectsAntiMalwareCriteria{}

	err = json.Unmarshal(data, &varHipObjectsAntiMalwareCriteria)

	if err != nil {
		return err
	}

	*o = HipObjectsAntiMalwareCriteria(varHipObjectsAntiMalwareCriteria)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "is_installed")
		delete(additionalProperties, "last_scan_time")
		delete(additionalProperties, "product_version")
		delete(additionalProperties, "real_time_protection")
		delete(additionalProperties, "virdef_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsAntiMalwareCriteria struct {
	value *HipObjectsAntiMalwareCriteria
	isSet bool
}

func (v NullableHipObjectsAntiMalwareCriteria) Get() *HipObjectsAntiMalwareCriteria {
	return v.value
}

func (v *NullableHipObjectsAntiMalwareCriteria) Set(val *HipObjectsAntiMalwareCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsAntiMalwareCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsAntiMalwareCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsAntiMalwareCriteria(val *HipObjectsAntiMalwareCriteria) *NullableHipObjectsAntiMalwareCriteria {
	return &NullableHipObjectsAntiMalwareCriteria{value: val, isSet: true}
}

func (v NullableHipObjectsAntiMalwareCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsAntiMalwareCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
