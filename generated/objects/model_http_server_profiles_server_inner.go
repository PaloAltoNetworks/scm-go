/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HttpServerProfilesServerInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpServerProfilesServerInner{}

// HttpServerProfilesServerInner struct for HttpServerProfilesServerInner
type HttpServerProfilesServerInner struct {
	// HTTP server address
	Address *string `json:"address,omitempty"`
	// HTTP server certificate profile
	CertificateProfile *string `json:"certificate_profile,omitempty"`
	// HTTP operation to perform
	HttpMethod *string `json:"http_method,omitempty"`
	// HTTP server name
	Name *string `json:"name,omitempty"`
	// HTTP server port
	Port *int32 `json:"port,omitempty"`
	// HTTP server protocol
	Protocol *string `json:"protocol,omitempty"`
	// HTTP server TLS version
	TlsVersion           *string `json:"tls_version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HttpServerProfilesServerInner HttpServerProfilesServerInner

// NewHttpServerProfilesServerInner instantiates a new HttpServerProfilesServerInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpServerProfilesServerInner() *HttpServerProfilesServerInner {
	this := HttpServerProfilesServerInner{}
	var certificateProfile string = "None"
	this.CertificateProfile = &certificateProfile
	return &this
}

// NewHttpServerProfilesServerInnerWithDefaults instantiates a new HttpServerProfilesServerInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpServerProfilesServerInnerWithDefaults() *HttpServerProfilesServerInner {
	this := HttpServerProfilesServerInner{}
	var certificateProfile string = "None"
	this.CertificateProfile = &certificateProfile
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *HttpServerProfilesServerInner) SetAddress(v string) {
	o.Address = &v
}

// GetCertificateProfile returns the CertificateProfile field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetCertificateProfile() string {
	if o == nil || IsNil(o.CertificateProfile) {
		var ret string
		return ret
	}
	return *o.CertificateProfile
}

// GetCertificateProfileOk returns a tuple with the CertificateProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetCertificateProfileOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateProfile) {
		return nil, false
	}
	return o.CertificateProfile, true
}

// HasCertificateProfile returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasCertificateProfile() bool {
	if o != nil && !IsNil(o.CertificateProfile) {
		return true
	}

	return false
}

// SetCertificateProfile gets a reference to the given string and assigns it to the CertificateProfile field.
func (o *HttpServerProfilesServerInner) SetCertificateProfile(v string) {
	o.CertificateProfile = &v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetHttpMethod() string {
	if o == nil || IsNil(o.HttpMethod) {
		var ret string
		return ret
	}
	return *o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetHttpMethodOk() (*string, bool) {
	if o == nil || IsNil(o.HttpMethod) {
		return nil, false
	}
	return o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasHttpMethod() bool {
	if o != nil && !IsNil(o.HttpMethod) {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given string and assigns it to the HttpMethod field.
func (o *HttpServerProfilesServerInner) SetHttpMethod(v string) {
	o.HttpMethod = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HttpServerProfilesServerInner) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *HttpServerProfilesServerInner) SetPort(v int32) {
	o.Port = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *HttpServerProfilesServerInner) SetProtocol(v string) {
	o.Protocol = &v
}

// GetTlsVersion returns the TlsVersion field value if set, zero value otherwise.
func (o *HttpServerProfilesServerInner) GetTlsVersion() string {
	if o == nil || IsNil(o.TlsVersion) {
		var ret string
		return ret
	}
	return *o.TlsVersion
}

// GetTlsVersionOk returns a tuple with the TlsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesServerInner) GetTlsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TlsVersion) {
		return nil, false
	}
	return o.TlsVersion, true
}

// HasTlsVersion returns a boolean if a field has been set.
func (o *HttpServerProfilesServerInner) HasTlsVersion() bool {
	if o != nil && !IsNil(o.TlsVersion) {
		return true
	}

	return false
}

// SetTlsVersion gets a reference to the given string and assigns it to the TlsVersion field.
func (o *HttpServerProfilesServerInner) SetTlsVersion(v string) {
	o.TlsVersion = &v
}

func (o HttpServerProfilesServerInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpServerProfilesServerInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CertificateProfile) {
		toSerialize["certificate_profile"] = o.CertificateProfile
	}
	if !IsNil(o.HttpMethod) {
		toSerialize["http_method"] = o.HttpMethod
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.TlsVersion) {
		toSerialize["tls_version"] = o.TlsVersion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HttpServerProfilesServerInner) UnmarshalJSON(data []byte) (err error) {
	varHttpServerProfilesServerInner := _HttpServerProfilesServerInner{}

	err = json.Unmarshal(data, &varHttpServerProfilesServerInner)

	if err != nil {
		return err
	}

	*o = HttpServerProfilesServerInner(varHttpServerProfilesServerInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "certificate_profile")
		delete(additionalProperties, "http_method")
		delete(additionalProperties, "name")
		delete(additionalProperties, "port")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "tls_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHttpServerProfilesServerInner struct {
	value *HttpServerProfilesServerInner
	isSet bool
}

func (v NullableHttpServerProfilesServerInner) Get() *HttpServerProfilesServerInner {
	return v.value
}

func (v *NullableHttpServerProfilesServerInner) Set(val *HttpServerProfilesServerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpServerProfilesServerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpServerProfilesServerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpServerProfilesServerInner(val *HttpServerProfilesServerInner) *NullableHttpServerProfilesServerInner {
	return &NullableHttpServerProfilesServerInner{value: val, isSet: true}
}

func (v NullableHttpServerProfilesServerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpServerProfilesServerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
