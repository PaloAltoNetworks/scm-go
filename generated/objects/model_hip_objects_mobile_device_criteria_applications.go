/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsMobileDeviceCriteriaApplications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsMobileDeviceCriteriaApplications{}

// HipObjectsMobileDeviceCriteriaApplications struct for HipObjectsMobileDeviceCriteriaApplications
type HipObjectsMobileDeviceCriteriaApplications struct {
	HasMalware *HipObjectsMobileDeviceCriteriaApplicationsHasMalware `json:"has_malware,omitempty"`
	// Has apps that are not managed
	HasUnmanagedApp      *bool                                                                  `json:"has_unmanaged_app,omitempty"`
	Includes             []HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYesExcludesInner `json:"includes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsMobileDeviceCriteriaApplications HipObjectsMobileDeviceCriteriaApplications

// NewHipObjectsMobileDeviceCriteriaApplications instantiates a new HipObjectsMobileDeviceCriteriaApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsMobileDeviceCriteriaApplications() *HipObjectsMobileDeviceCriteriaApplications {
	this := HipObjectsMobileDeviceCriteriaApplications{}
	return &this
}

// NewHipObjectsMobileDeviceCriteriaApplicationsWithDefaults instantiates a new HipObjectsMobileDeviceCriteriaApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsMobileDeviceCriteriaApplicationsWithDefaults() *HipObjectsMobileDeviceCriteriaApplications {
	this := HipObjectsMobileDeviceCriteriaApplications{}
	return &this
}

// GetHasMalware returns the HasMalware field value if set, zero value otherwise.
func (o *HipObjectsMobileDeviceCriteriaApplications) GetHasMalware() HipObjectsMobileDeviceCriteriaApplicationsHasMalware {
	if o == nil || IsNil(o.HasMalware) {
		var ret HipObjectsMobileDeviceCriteriaApplicationsHasMalware
		return ret
	}
	return *o.HasMalware
}

// GetHasMalwareOk returns a tuple with the HasMalware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsMobileDeviceCriteriaApplications) GetHasMalwareOk() (*HipObjectsMobileDeviceCriteriaApplicationsHasMalware, bool) {
	if o == nil || IsNil(o.HasMalware) {
		return nil, false
	}
	return o.HasMalware, true
}

// HasHasMalware returns a boolean if a field has been set.
func (o *HipObjectsMobileDeviceCriteriaApplications) HasHasMalware() bool {
	if o != nil && !IsNil(o.HasMalware) {
		return true
	}

	return false
}

// SetHasMalware gets a reference to the given HipObjectsMobileDeviceCriteriaApplicationsHasMalware and assigns it to the HasMalware field.
func (o *HipObjectsMobileDeviceCriteriaApplications) SetHasMalware(v HipObjectsMobileDeviceCriteriaApplicationsHasMalware) {
	o.HasMalware = &v
}

// GetHasUnmanagedApp returns the HasUnmanagedApp field value if set, zero value otherwise.
func (o *HipObjectsMobileDeviceCriteriaApplications) GetHasUnmanagedApp() bool {
	if o == nil || IsNil(o.HasUnmanagedApp) {
		var ret bool
		return ret
	}
	return *o.HasUnmanagedApp
}

// GetHasUnmanagedAppOk returns a tuple with the HasUnmanagedApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsMobileDeviceCriteriaApplications) GetHasUnmanagedAppOk() (*bool, bool) {
	if o == nil || IsNil(o.HasUnmanagedApp) {
		return nil, false
	}
	return o.HasUnmanagedApp, true
}

// HasHasUnmanagedApp returns a boolean if a field has been set.
func (o *HipObjectsMobileDeviceCriteriaApplications) HasHasUnmanagedApp() bool {
	if o != nil && !IsNil(o.HasUnmanagedApp) {
		return true
	}

	return false
}

// SetHasUnmanagedApp gets a reference to the given bool and assigns it to the HasUnmanagedApp field.
func (o *HipObjectsMobileDeviceCriteriaApplications) SetHasUnmanagedApp(v bool) {
	o.HasUnmanagedApp = &v
}

// GetIncludes returns the Includes field value if set, zero value otherwise.
func (o *HipObjectsMobileDeviceCriteriaApplications) GetIncludes() []HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYesExcludesInner {
	if o == nil || IsNil(o.Includes) {
		var ret []HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYesExcludesInner
		return ret
	}
	return o.Includes
}

// GetIncludesOk returns a tuple with the Includes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsMobileDeviceCriteriaApplications) GetIncludesOk() ([]HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYesExcludesInner, bool) {
	if o == nil || IsNil(o.Includes) {
		return nil, false
	}
	return o.Includes, true
}

// HasIncludes returns a boolean if a field has been set.
func (o *HipObjectsMobileDeviceCriteriaApplications) HasIncludes() bool {
	if o != nil && !IsNil(o.Includes) {
		return true
	}

	return false
}

// SetIncludes gets a reference to the given []HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYesExcludesInner and assigns it to the Includes field.
func (o *HipObjectsMobileDeviceCriteriaApplications) SetIncludes(v []HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYesExcludesInner) {
	o.Includes = v
}

func (o HipObjectsMobileDeviceCriteriaApplications) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsMobileDeviceCriteriaApplications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasMalware) {
		toSerialize["has_malware"] = o.HasMalware
	}
	if !IsNil(o.HasUnmanagedApp) {
		toSerialize["has_unmanaged_app"] = o.HasUnmanagedApp
	}
	if !IsNil(o.Includes) {
		toSerialize["includes"] = o.Includes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsMobileDeviceCriteriaApplications) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsMobileDeviceCriteriaApplications := _HipObjectsMobileDeviceCriteriaApplications{}

	err = json.Unmarshal(data, &varHipObjectsMobileDeviceCriteriaApplications)

	if err != nil {
		return err
	}

	*o = HipObjectsMobileDeviceCriteriaApplications(varHipObjectsMobileDeviceCriteriaApplications)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "has_malware")
		delete(additionalProperties, "has_unmanaged_app")
		delete(additionalProperties, "includes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsMobileDeviceCriteriaApplications struct {
	value *HipObjectsMobileDeviceCriteriaApplications
	isSet bool
}

func (v NullableHipObjectsMobileDeviceCriteriaApplications) Get() *HipObjectsMobileDeviceCriteriaApplications {
	return v.value
}

func (v *NullableHipObjectsMobileDeviceCriteriaApplications) Set(val *HipObjectsMobileDeviceCriteriaApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsMobileDeviceCriteriaApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsMobileDeviceCriteriaApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsMobileDeviceCriteriaApplications(val *HipObjectsMobileDeviceCriteriaApplications) *NullableHipObjectsMobileDeviceCriteriaApplications {
	return &NullableHipObjectsMobileDeviceCriteriaApplications{value: val, isSet: true}
}

func (v NullableHipObjectsMobileDeviceCriteriaApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsMobileDeviceCriteriaApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
