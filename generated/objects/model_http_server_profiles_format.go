/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HttpServerProfilesFormat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpServerProfilesFormat{}

// HttpServerProfilesFormat struct for HttpServerProfilesFormat
type HttpServerProfilesFormat struct {
	Auth                 *PayloadFormat `json:"auth,omitempty"`
	Config               *PayloadFormat `json:"config,omitempty"`
	Correlation          *PayloadFormat `json:"correlation,omitempty"`
	Data                 *PayloadFormat `json:"data,omitempty"`
	Decryption           *PayloadFormat `json:"decryption,omitempty"`
	Globalprotect        *PayloadFormat `json:"globalprotect,omitempty"`
	Gtp                  *PayloadFormat `json:"gtp,omitempty"`
	HipMatch             *PayloadFormat `json:"hip_match,omitempty"`
	Iptag                *PayloadFormat `json:"iptag,omitempty"`
	Sctp                 *PayloadFormat `json:"sctp,omitempty"`
	System               *PayloadFormat `json:"system,omitempty"`
	Threat               *PayloadFormat `json:"threat,omitempty"`
	Traffic              *PayloadFormat `json:"traffic,omitempty"`
	Tunnel               *PayloadFormat `json:"tunnel,omitempty"`
	Url                  *PayloadFormat `json:"url,omitempty"`
	Userid               *PayloadFormat `json:"userid,omitempty"`
	Wildfire             *PayloadFormat `json:"wildfire,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HttpServerProfilesFormat HttpServerProfilesFormat

// NewHttpServerProfilesFormat instantiates a new HttpServerProfilesFormat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpServerProfilesFormat() *HttpServerProfilesFormat {
	this := HttpServerProfilesFormat{}
	return &this
}

// NewHttpServerProfilesFormatWithDefaults instantiates a new HttpServerProfilesFormat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpServerProfilesFormatWithDefaults() *HttpServerProfilesFormat {
	this := HttpServerProfilesFormat{}
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetAuth() PayloadFormat {
	if o == nil || IsNil(o.Auth) {
		var ret PayloadFormat
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetAuthOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given PayloadFormat and assigns it to the Auth field.
func (o *HttpServerProfilesFormat) SetAuth(v PayloadFormat) {
	o.Auth = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetConfig() PayloadFormat {
	if o == nil || IsNil(o.Config) {
		var ret PayloadFormat
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetConfigOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given PayloadFormat and assigns it to the Config field.
func (o *HttpServerProfilesFormat) SetConfig(v PayloadFormat) {
	o.Config = &v
}

// GetCorrelation returns the Correlation field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetCorrelation() PayloadFormat {
	if o == nil || IsNil(o.Correlation) {
		var ret PayloadFormat
		return ret
	}
	return *o.Correlation
}

// GetCorrelationOk returns a tuple with the Correlation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetCorrelationOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Correlation) {
		return nil, false
	}
	return o.Correlation, true
}

// HasCorrelation returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasCorrelation() bool {
	if o != nil && !IsNil(o.Correlation) {
		return true
	}

	return false
}

// SetCorrelation gets a reference to the given PayloadFormat and assigns it to the Correlation field.
func (o *HttpServerProfilesFormat) SetCorrelation(v PayloadFormat) {
	o.Correlation = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetData() PayloadFormat {
	if o == nil || IsNil(o.Data) {
		var ret PayloadFormat
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetDataOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given PayloadFormat and assigns it to the Data field.
func (o *HttpServerProfilesFormat) SetData(v PayloadFormat) {
	o.Data = &v
}

// GetDecryption returns the Decryption field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetDecryption() PayloadFormat {
	if o == nil || IsNil(o.Decryption) {
		var ret PayloadFormat
		return ret
	}
	return *o.Decryption
}

// GetDecryptionOk returns a tuple with the Decryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetDecryptionOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Decryption) {
		return nil, false
	}
	return o.Decryption, true
}

// HasDecryption returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasDecryption() bool {
	if o != nil && !IsNil(o.Decryption) {
		return true
	}

	return false
}

// SetDecryption gets a reference to the given PayloadFormat and assigns it to the Decryption field.
func (o *HttpServerProfilesFormat) SetDecryption(v PayloadFormat) {
	o.Decryption = &v
}

// GetGlobalprotect returns the Globalprotect field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetGlobalprotect() PayloadFormat {
	if o == nil || IsNil(o.Globalprotect) {
		var ret PayloadFormat
		return ret
	}
	return *o.Globalprotect
}

// GetGlobalprotectOk returns a tuple with the Globalprotect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetGlobalprotectOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Globalprotect) {
		return nil, false
	}
	return o.Globalprotect, true
}

// HasGlobalprotect returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasGlobalprotect() bool {
	if o != nil && !IsNil(o.Globalprotect) {
		return true
	}

	return false
}

// SetGlobalprotect gets a reference to the given PayloadFormat and assigns it to the Globalprotect field.
func (o *HttpServerProfilesFormat) SetGlobalprotect(v PayloadFormat) {
	o.Globalprotect = &v
}

// GetGtp returns the Gtp field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetGtp() PayloadFormat {
	if o == nil || IsNil(o.Gtp) {
		var ret PayloadFormat
		return ret
	}
	return *o.Gtp
}

// GetGtpOk returns a tuple with the Gtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetGtpOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Gtp) {
		return nil, false
	}
	return o.Gtp, true
}

// HasGtp returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasGtp() bool {
	if o != nil && !IsNil(o.Gtp) {
		return true
	}

	return false
}

// SetGtp gets a reference to the given PayloadFormat and assigns it to the Gtp field.
func (o *HttpServerProfilesFormat) SetGtp(v PayloadFormat) {
	o.Gtp = &v
}

// GetHipMatch returns the HipMatch field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetHipMatch() PayloadFormat {
	if o == nil || IsNil(o.HipMatch) {
		var ret PayloadFormat
		return ret
	}
	return *o.HipMatch
}

// GetHipMatchOk returns a tuple with the HipMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetHipMatchOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.HipMatch) {
		return nil, false
	}
	return o.HipMatch, true
}

// HasHipMatch returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasHipMatch() bool {
	if o != nil && !IsNil(o.HipMatch) {
		return true
	}

	return false
}

// SetHipMatch gets a reference to the given PayloadFormat and assigns it to the HipMatch field.
func (o *HttpServerProfilesFormat) SetHipMatch(v PayloadFormat) {
	o.HipMatch = &v
}

// GetIptag returns the Iptag field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetIptag() PayloadFormat {
	if o == nil || IsNil(o.Iptag) {
		var ret PayloadFormat
		return ret
	}
	return *o.Iptag
}

// GetIptagOk returns a tuple with the Iptag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetIptagOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Iptag) {
		return nil, false
	}
	return o.Iptag, true
}

// HasIptag returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasIptag() bool {
	if o != nil && !IsNil(o.Iptag) {
		return true
	}

	return false
}

// SetIptag gets a reference to the given PayloadFormat and assigns it to the Iptag field.
func (o *HttpServerProfilesFormat) SetIptag(v PayloadFormat) {
	o.Iptag = &v
}

// GetSctp returns the Sctp field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetSctp() PayloadFormat {
	if o == nil || IsNil(o.Sctp) {
		var ret PayloadFormat
		return ret
	}
	return *o.Sctp
}

// GetSctpOk returns a tuple with the Sctp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetSctpOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Sctp) {
		return nil, false
	}
	return o.Sctp, true
}

// HasSctp returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasSctp() bool {
	if o != nil && !IsNil(o.Sctp) {
		return true
	}

	return false
}

// SetSctp gets a reference to the given PayloadFormat and assigns it to the Sctp field.
func (o *HttpServerProfilesFormat) SetSctp(v PayloadFormat) {
	o.Sctp = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetSystem() PayloadFormat {
	if o == nil || IsNil(o.System) {
		var ret PayloadFormat
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetSystemOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.System) {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasSystem() bool {
	if o != nil && !IsNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given PayloadFormat and assigns it to the System field.
func (o *HttpServerProfilesFormat) SetSystem(v PayloadFormat) {
	o.System = &v
}

// GetThreat returns the Threat field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetThreat() PayloadFormat {
	if o == nil || IsNil(o.Threat) {
		var ret PayloadFormat
		return ret
	}
	return *o.Threat
}

// GetThreatOk returns a tuple with the Threat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetThreatOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Threat) {
		return nil, false
	}
	return o.Threat, true
}

// HasThreat returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasThreat() bool {
	if o != nil && !IsNil(o.Threat) {
		return true
	}

	return false
}

// SetThreat gets a reference to the given PayloadFormat and assigns it to the Threat field.
func (o *HttpServerProfilesFormat) SetThreat(v PayloadFormat) {
	o.Threat = &v
}

// GetTraffic returns the Traffic field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetTraffic() PayloadFormat {
	if o == nil || IsNil(o.Traffic) {
		var ret PayloadFormat
		return ret
	}
	return *o.Traffic
}

// GetTrafficOk returns a tuple with the Traffic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetTrafficOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Traffic) {
		return nil, false
	}
	return o.Traffic, true
}

// HasTraffic returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasTraffic() bool {
	if o != nil && !IsNil(o.Traffic) {
		return true
	}

	return false
}

// SetTraffic gets a reference to the given PayloadFormat and assigns it to the Traffic field.
func (o *HttpServerProfilesFormat) SetTraffic(v PayloadFormat) {
	o.Traffic = &v
}

// GetTunnel returns the Tunnel field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetTunnel() PayloadFormat {
	if o == nil || IsNil(o.Tunnel) {
		var ret PayloadFormat
		return ret
	}
	return *o.Tunnel
}

// GetTunnelOk returns a tuple with the Tunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetTunnelOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Tunnel) {
		return nil, false
	}
	return o.Tunnel, true
}

// HasTunnel returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasTunnel() bool {
	if o != nil && !IsNil(o.Tunnel) {
		return true
	}

	return false
}

// SetTunnel gets a reference to the given PayloadFormat and assigns it to the Tunnel field.
func (o *HttpServerProfilesFormat) SetTunnel(v PayloadFormat) {
	o.Tunnel = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetUrl() PayloadFormat {
	if o == nil || IsNil(o.Url) {
		var ret PayloadFormat
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetUrlOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given PayloadFormat and assigns it to the Url field.
func (o *HttpServerProfilesFormat) SetUrl(v PayloadFormat) {
	o.Url = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetUserid() PayloadFormat {
	if o == nil || IsNil(o.Userid) {
		var ret PayloadFormat
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetUseridOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given PayloadFormat and assigns it to the Userid field.
func (o *HttpServerProfilesFormat) SetUserid(v PayloadFormat) {
	o.Userid = &v
}

// GetWildfire returns the Wildfire field value if set, zero value otherwise.
func (o *HttpServerProfilesFormat) GetWildfire() PayloadFormat {
	if o == nil || IsNil(o.Wildfire) {
		var ret PayloadFormat
		return ret
	}
	return *o.Wildfire
}

// GetWildfireOk returns a tuple with the Wildfire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfilesFormat) GetWildfireOk() (*PayloadFormat, bool) {
	if o == nil || IsNil(o.Wildfire) {
		return nil, false
	}
	return o.Wildfire, true
}

// HasWildfire returns a boolean if a field has been set.
func (o *HttpServerProfilesFormat) HasWildfire() bool {
	if o != nil && !IsNil(o.Wildfire) {
		return true
	}

	return false
}

// SetWildfire gets a reference to the given PayloadFormat and assigns it to the Wildfire field.
func (o *HttpServerProfilesFormat) SetWildfire(v PayloadFormat) {
	o.Wildfire = &v
}

func (o HttpServerProfilesFormat) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpServerProfilesFormat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Correlation) {
		toSerialize["correlation"] = o.Correlation
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Decryption) {
		toSerialize["decryption"] = o.Decryption
	}
	if !IsNil(o.Globalprotect) {
		toSerialize["globalprotect"] = o.Globalprotect
	}
	if !IsNil(o.Gtp) {
		toSerialize["gtp"] = o.Gtp
	}
	if !IsNil(o.HipMatch) {
		toSerialize["hip_match"] = o.HipMatch
	}
	if !IsNil(o.Iptag) {
		toSerialize["iptag"] = o.Iptag
	}
	if !IsNil(o.Sctp) {
		toSerialize["sctp"] = o.Sctp
	}
	if !IsNil(o.System) {
		toSerialize["system"] = o.System
	}
	if !IsNil(o.Threat) {
		toSerialize["threat"] = o.Threat
	}
	if !IsNil(o.Traffic) {
		toSerialize["traffic"] = o.Traffic
	}
	if !IsNil(o.Tunnel) {
		toSerialize["tunnel"] = o.Tunnel
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	if !IsNil(o.Wildfire) {
		toSerialize["wildfire"] = o.Wildfire
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HttpServerProfilesFormat) UnmarshalJSON(data []byte) (err error) {
	varHttpServerProfilesFormat := _HttpServerProfilesFormat{}

	err = json.Unmarshal(data, &varHttpServerProfilesFormat)

	if err != nil {
		return err
	}

	*o = HttpServerProfilesFormat(varHttpServerProfilesFormat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth")
		delete(additionalProperties, "config")
		delete(additionalProperties, "correlation")
		delete(additionalProperties, "data")
		delete(additionalProperties, "decryption")
		delete(additionalProperties, "globalprotect")
		delete(additionalProperties, "gtp")
		delete(additionalProperties, "hip_match")
		delete(additionalProperties, "iptag")
		delete(additionalProperties, "sctp")
		delete(additionalProperties, "system")
		delete(additionalProperties, "threat")
		delete(additionalProperties, "traffic")
		delete(additionalProperties, "tunnel")
		delete(additionalProperties, "url")
		delete(additionalProperties, "userid")
		delete(additionalProperties, "wildfire")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHttpServerProfilesFormat struct {
	value *HttpServerProfilesFormat
	isSet bool
}

func (v NullableHttpServerProfilesFormat) Get() *HttpServerProfilesFormat {
	return v.value
}

func (v *NullableHttpServerProfilesFormat) Set(val *HttpServerProfilesFormat) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpServerProfilesFormat) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpServerProfilesFormat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpServerProfilesFormat(val *HttpServerProfilesFormat) *NullableHttpServerProfilesFormat {
	return &NullableHttpServerProfilesFormat{value: val, isSet: true}
}

func (v NullableHttpServerProfilesFormat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpServerProfilesFormat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
