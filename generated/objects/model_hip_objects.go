/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the HipObjects type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjects{}

// HipObjects struct for HipObjects
type HipObjects struct {
	AntiMalware        *HipObjectsAntiMalware        `json:"anti_malware,omitempty"`
	Certificate        *HipObjectsCertificate        `json:"certificate,omitempty"`
	CustomChecks       *HipObjectsCustomChecks       `json:"custom_checks,omitempty"`
	DataLossPrevention *HipObjectsDataLossPrevention `json:"data_loss_prevention,omitempty"`
	Description        *string                       `json:"description,omitempty"`
	// The device in which the resource is defined
	Device         *string                   `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	DiskBackup     *HipObjectsDiskBackup     `json:"disk_backup,omitempty"`
	DiskEncryption *HipObjectsDiskEncryption `json:"disk_encryption,omitempty"`
	Firewall       *HipObjectsFirewall       `json:"firewall,omitempty"`
	// The folder in which the resource is defined
	Folder   *string             `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	HostInfo *HipObjectsHostInfo `json:"host_info,omitempty"`
	// UUID of the resource
	Id           string                  `json:"id"`
	MobileDevice *HipObjectsMobileDevice `json:"mobile_device,omitempty"`
	// The name of the HIP object
	Name            string                     `json:"name" validate:"regexp=^[ a-zA-Z\\\\d.\\\\-_]+$"`
	NetworkInfo     *HipObjectsNetworkInfo     `json:"network_info,omitempty"`
	PatchManagement *HipObjectsPatchManagement `json:"patch_management,omitempty"`
	// The snippet in which the resource is defined
	Snippet              *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d\\\\-_\\\\. ]+$"`
	AdditionalProperties map[string]interface{}
}

type _HipObjects HipObjects

// NewHipObjects instantiates a new HipObjects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjects(id string, name string) *HipObjects {
	this := HipObjects{}
	this.Id = id
	this.Name = name
	return &this
}

// NewHipObjectsWithDefaults instantiates a new HipObjects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsWithDefaults() *HipObjects {
	this := HipObjects{}
	return &this
}

// GetAntiMalware returns the AntiMalware field value if set, zero value otherwise.
func (o *HipObjects) GetAntiMalware() HipObjectsAntiMalware {
	if o == nil || IsNil(o.AntiMalware) {
		var ret HipObjectsAntiMalware
		return ret
	}
	return *o.AntiMalware
}

// GetAntiMalwareOk returns a tuple with the AntiMalware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetAntiMalwareOk() (*HipObjectsAntiMalware, bool) {
	if o == nil || IsNil(o.AntiMalware) {
		return nil, false
	}
	return o.AntiMalware, true
}

// HasAntiMalware returns a boolean if a field has been set.
func (o *HipObjects) HasAntiMalware() bool {
	if o != nil && !IsNil(o.AntiMalware) {
		return true
	}

	return false
}

// SetAntiMalware gets a reference to the given HipObjectsAntiMalware and assigns it to the AntiMalware field.
func (o *HipObjects) SetAntiMalware(v HipObjectsAntiMalware) {
	o.AntiMalware = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *HipObjects) GetCertificate() HipObjectsCertificate {
	if o == nil || IsNil(o.Certificate) {
		var ret HipObjectsCertificate
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetCertificateOk() (*HipObjectsCertificate, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *HipObjects) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given HipObjectsCertificate and assigns it to the Certificate field.
func (o *HipObjects) SetCertificate(v HipObjectsCertificate) {
	o.Certificate = &v
}

// GetCustomChecks returns the CustomChecks field value if set, zero value otherwise.
func (o *HipObjects) GetCustomChecks() HipObjectsCustomChecks {
	if o == nil || IsNil(o.CustomChecks) {
		var ret HipObjectsCustomChecks
		return ret
	}
	return *o.CustomChecks
}

// GetCustomChecksOk returns a tuple with the CustomChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetCustomChecksOk() (*HipObjectsCustomChecks, bool) {
	if o == nil || IsNil(o.CustomChecks) {
		return nil, false
	}
	return o.CustomChecks, true
}

// HasCustomChecks returns a boolean if a field has been set.
func (o *HipObjects) HasCustomChecks() bool {
	if o != nil && !IsNil(o.CustomChecks) {
		return true
	}

	return false
}

// SetCustomChecks gets a reference to the given HipObjectsCustomChecks and assigns it to the CustomChecks field.
func (o *HipObjects) SetCustomChecks(v HipObjectsCustomChecks) {
	o.CustomChecks = &v
}

// GetDataLossPrevention returns the DataLossPrevention field value if set, zero value otherwise.
func (o *HipObjects) GetDataLossPrevention() HipObjectsDataLossPrevention {
	if o == nil || IsNil(o.DataLossPrevention) {
		var ret HipObjectsDataLossPrevention
		return ret
	}
	return *o.DataLossPrevention
}

// GetDataLossPreventionOk returns a tuple with the DataLossPrevention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetDataLossPreventionOk() (*HipObjectsDataLossPrevention, bool) {
	if o == nil || IsNil(o.DataLossPrevention) {
		return nil, false
	}
	return o.DataLossPrevention, true
}

// HasDataLossPrevention returns a boolean if a field has been set.
func (o *HipObjects) HasDataLossPrevention() bool {
	if o != nil && !IsNil(o.DataLossPrevention) {
		return true
	}

	return false
}

// SetDataLossPrevention gets a reference to the given HipObjectsDataLossPrevention and assigns it to the DataLossPrevention field.
func (o *HipObjects) SetDataLossPrevention(v HipObjectsDataLossPrevention) {
	o.DataLossPrevention = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HipObjects) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HipObjects) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HipObjects) SetDescription(v string) {
	o.Description = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *HipObjects) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *HipObjects) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *HipObjects) SetDevice(v string) {
	o.Device = &v
}

// GetDiskBackup returns the DiskBackup field value if set, zero value otherwise.
func (o *HipObjects) GetDiskBackup() HipObjectsDiskBackup {
	if o == nil || IsNil(o.DiskBackup) {
		var ret HipObjectsDiskBackup
		return ret
	}
	return *o.DiskBackup
}

// GetDiskBackupOk returns a tuple with the DiskBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetDiskBackupOk() (*HipObjectsDiskBackup, bool) {
	if o == nil || IsNil(o.DiskBackup) {
		return nil, false
	}
	return o.DiskBackup, true
}

// HasDiskBackup returns a boolean if a field has been set.
func (o *HipObjects) HasDiskBackup() bool {
	if o != nil && !IsNil(o.DiskBackup) {
		return true
	}

	return false
}

// SetDiskBackup gets a reference to the given HipObjectsDiskBackup and assigns it to the DiskBackup field.
func (o *HipObjects) SetDiskBackup(v HipObjectsDiskBackup) {
	o.DiskBackup = &v
}

// GetDiskEncryption returns the DiskEncryption field value if set, zero value otherwise.
func (o *HipObjects) GetDiskEncryption() HipObjectsDiskEncryption {
	if o == nil || IsNil(o.DiskEncryption) {
		var ret HipObjectsDiskEncryption
		return ret
	}
	return *o.DiskEncryption
}

// GetDiskEncryptionOk returns a tuple with the DiskEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetDiskEncryptionOk() (*HipObjectsDiskEncryption, bool) {
	if o == nil || IsNil(o.DiskEncryption) {
		return nil, false
	}
	return o.DiskEncryption, true
}

// HasDiskEncryption returns a boolean if a field has been set.
func (o *HipObjects) HasDiskEncryption() bool {
	if o != nil && !IsNil(o.DiskEncryption) {
		return true
	}

	return false
}

// SetDiskEncryption gets a reference to the given HipObjectsDiskEncryption and assigns it to the DiskEncryption field.
func (o *HipObjects) SetDiskEncryption(v HipObjectsDiskEncryption) {
	o.DiskEncryption = &v
}

// GetFirewall returns the Firewall field value if set, zero value otherwise.
func (o *HipObjects) GetFirewall() HipObjectsFirewall {
	if o == nil || IsNil(o.Firewall) {
		var ret HipObjectsFirewall
		return ret
	}
	return *o.Firewall
}

// GetFirewallOk returns a tuple with the Firewall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetFirewallOk() (*HipObjectsFirewall, bool) {
	if o == nil || IsNil(o.Firewall) {
		return nil, false
	}
	return o.Firewall, true
}

// HasFirewall returns a boolean if a field has been set.
func (o *HipObjects) HasFirewall() bool {
	if o != nil && !IsNil(o.Firewall) {
		return true
	}

	return false
}

// SetFirewall gets a reference to the given HipObjectsFirewall and assigns it to the Firewall field.
func (o *HipObjects) SetFirewall(v HipObjectsFirewall) {
	o.Firewall = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *HipObjects) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *HipObjects) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *HipObjects) SetFolder(v string) {
	o.Folder = &v
}

// GetHostInfo returns the HostInfo field value if set, zero value otherwise.
func (o *HipObjects) GetHostInfo() HipObjectsHostInfo {
	if o == nil || IsNil(o.HostInfo) {
		var ret HipObjectsHostInfo
		return ret
	}
	return *o.HostInfo
}

// GetHostInfoOk returns a tuple with the HostInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetHostInfoOk() (*HipObjectsHostInfo, bool) {
	if o == nil || IsNil(o.HostInfo) {
		return nil, false
	}
	return o.HostInfo, true
}

// HasHostInfo returns a boolean if a field has been set.
func (o *HipObjects) HasHostInfo() bool {
	if o != nil && !IsNil(o.HostInfo) {
		return true
	}

	return false
}

// SetHostInfo gets a reference to the given HipObjectsHostInfo and assigns it to the HostInfo field.
func (o *HipObjects) SetHostInfo(v HipObjectsHostInfo) {
	o.HostInfo = &v
}

// GetId returns the Id field value
func (o *HipObjects) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HipObjects) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HipObjects) SetId(v string) {
	o.Id = v
}

// GetMobileDevice returns the MobileDevice field value if set, zero value otherwise.
func (o *HipObjects) GetMobileDevice() HipObjectsMobileDevice {
	if o == nil || IsNil(o.MobileDevice) {
		var ret HipObjectsMobileDevice
		return ret
	}
	return *o.MobileDevice
}

// GetMobileDeviceOk returns a tuple with the MobileDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetMobileDeviceOk() (*HipObjectsMobileDevice, bool) {
	if o == nil || IsNil(o.MobileDevice) {
		return nil, false
	}
	return o.MobileDevice, true
}

// HasMobileDevice returns a boolean if a field has been set.
func (o *HipObjects) HasMobileDevice() bool {
	if o != nil && !IsNil(o.MobileDevice) {
		return true
	}

	return false
}

// SetMobileDevice gets a reference to the given HipObjectsMobileDevice and assigns it to the MobileDevice field.
func (o *HipObjects) SetMobileDevice(v HipObjectsMobileDevice) {
	o.MobileDevice = &v
}

// GetName returns the Name field value
func (o *HipObjects) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HipObjects) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HipObjects) SetName(v string) {
	o.Name = v
}

// GetNetworkInfo returns the NetworkInfo field value if set, zero value otherwise.
func (o *HipObjects) GetNetworkInfo() HipObjectsNetworkInfo {
	if o == nil || IsNil(o.NetworkInfo) {
		var ret HipObjectsNetworkInfo
		return ret
	}
	return *o.NetworkInfo
}

// GetNetworkInfoOk returns a tuple with the NetworkInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetNetworkInfoOk() (*HipObjectsNetworkInfo, bool) {
	if o == nil || IsNil(o.NetworkInfo) {
		return nil, false
	}
	return o.NetworkInfo, true
}

// HasNetworkInfo returns a boolean if a field has been set.
func (o *HipObjects) HasNetworkInfo() bool {
	if o != nil && !IsNil(o.NetworkInfo) {
		return true
	}

	return false
}

// SetNetworkInfo gets a reference to the given HipObjectsNetworkInfo and assigns it to the NetworkInfo field.
func (o *HipObjects) SetNetworkInfo(v HipObjectsNetworkInfo) {
	o.NetworkInfo = &v
}

// GetPatchManagement returns the PatchManagement field value if set, zero value otherwise.
func (o *HipObjects) GetPatchManagement() HipObjectsPatchManagement {
	if o == nil || IsNil(o.PatchManagement) {
		var ret HipObjectsPatchManagement
		return ret
	}
	return *o.PatchManagement
}

// GetPatchManagementOk returns a tuple with the PatchManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetPatchManagementOk() (*HipObjectsPatchManagement, bool) {
	if o == nil || IsNil(o.PatchManagement) {
		return nil, false
	}
	return o.PatchManagement, true
}

// HasPatchManagement returns a boolean if a field has been set.
func (o *HipObjects) HasPatchManagement() bool {
	if o != nil && !IsNil(o.PatchManagement) {
		return true
	}

	return false
}

// SetPatchManagement gets a reference to the given HipObjectsPatchManagement and assigns it to the PatchManagement field.
func (o *HipObjects) SetPatchManagement(v HipObjectsPatchManagement) {
	o.PatchManagement = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *HipObjects) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjects) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *HipObjects) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *HipObjects) SetSnippet(v string) {
	o.Snippet = &v
}

func (o HipObjects) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjects) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiMalware) {
		toSerialize["anti_malware"] = o.AntiMalware
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.CustomChecks) {
		toSerialize["custom_checks"] = o.CustomChecks
	}
	if !IsNil(o.DataLossPrevention) {
		toSerialize["data_loss_prevention"] = o.DataLossPrevention
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.DiskBackup) {
		toSerialize["disk_backup"] = o.DiskBackup
	}
	if !IsNil(o.DiskEncryption) {
		toSerialize["disk_encryption"] = o.DiskEncryption
	}
	if !IsNil(o.Firewall) {
		toSerialize["firewall"] = o.Firewall
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.HostInfo) {
		toSerialize["host_info"] = o.HostInfo
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.MobileDevice) {
		toSerialize["mobile_device"] = o.MobileDevice
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NetworkInfo) {
		toSerialize["network_info"] = o.NetworkInfo
	}
	if !IsNil(o.PatchManagement) {
		toSerialize["patch_management"] = o.PatchManagement
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjects) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHipObjects := _HipObjects{}

	err = json.Unmarshal(data, &varHipObjects)

	if err != nil {
		return err
	}

	*o = HipObjects(varHipObjects)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "anti_malware")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "custom_checks")
		delete(additionalProperties, "data_loss_prevention")
		delete(additionalProperties, "description")
		delete(additionalProperties, "device")
		delete(additionalProperties, "disk_backup")
		delete(additionalProperties, "disk_encryption")
		delete(additionalProperties, "firewall")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "host_info")
		delete(additionalProperties, "id")
		delete(additionalProperties, "mobile_device")
		delete(additionalProperties, "name")
		delete(additionalProperties, "network_info")
		delete(additionalProperties, "patch_management")
		delete(additionalProperties, "snippet")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjects struct {
	value *HipObjects
	isSet bool
}

func (v NullableHipObjects) Get() *HipObjects {
	return v.value
}

func (v *NullableHipObjects) Set(val *HipObjects) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjects) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjects(val *HipObjects) *NullableHipObjects {
	return &NullableHipObjects{value: val, isSet: true}
}

func (v NullableHipObjects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
