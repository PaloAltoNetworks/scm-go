/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsDiskBackupCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsDiskBackupCriteria{}

// HipObjectsDiskBackupCriteria struct for HipObjectsDiskBackupCriteria
type HipObjectsDiskBackupCriteria struct {
	// Is Installed
	IsInstalled          *bool                                      `json:"is_installed,omitempty"`
	LastBackupTime       *HipObjectsAntiMalwareCriteriaLastScanTime `json:"last_backup_time,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsDiskBackupCriteria HipObjectsDiskBackupCriteria

// NewHipObjectsDiskBackupCriteria instantiates a new HipObjectsDiskBackupCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsDiskBackupCriteria() *HipObjectsDiskBackupCriteria {
	this := HipObjectsDiskBackupCriteria{}
	var isInstalled bool = true
	this.IsInstalled = &isInstalled
	return &this
}

// NewHipObjectsDiskBackupCriteriaWithDefaults instantiates a new HipObjectsDiskBackupCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsDiskBackupCriteriaWithDefaults() *HipObjectsDiskBackupCriteria {
	this := HipObjectsDiskBackupCriteria{}
	var isInstalled bool = true
	this.IsInstalled = &isInstalled
	return &this
}

// GetIsInstalled returns the IsInstalled field value if set, zero value otherwise.
func (o *HipObjectsDiskBackupCriteria) GetIsInstalled() bool {
	if o == nil || IsNil(o.IsInstalled) {
		var ret bool
		return ret
	}
	return *o.IsInstalled
}

// GetIsInstalledOk returns a tuple with the IsInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskBackupCriteria) GetIsInstalledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInstalled) {
		return nil, false
	}
	return o.IsInstalled, true
}

// HasIsInstalled returns a boolean if a field has been set.
func (o *HipObjectsDiskBackupCriteria) HasIsInstalled() bool {
	if o != nil && !IsNil(o.IsInstalled) {
		return true
	}

	return false
}

// SetIsInstalled gets a reference to the given bool and assigns it to the IsInstalled field.
func (o *HipObjectsDiskBackupCriteria) SetIsInstalled(v bool) {
	o.IsInstalled = &v
}

// GetLastBackupTime returns the LastBackupTime field value if set, zero value otherwise.
func (o *HipObjectsDiskBackupCriteria) GetLastBackupTime() HipObjectsAntiMalwareCriteriaLastScanTime {
	if o == nil || IsNil(o.LastBackupTime) {
		var ret HipObjectsAntiMalwareCriteriaLastScanTime
		return ret
	}
	return *o.LastBackupTime
}

// GetLastBackupTimeOk returns a tuple with the LastBackupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskBackupCriteria) GetLastBackupTimeOk() (*HipObjectsAntiMalwareCriteriaLastScanTime, bool) {
	if o == nil || IsNil(o.LastBackupTime) {
		return nil, false
	}
	return o.LastBackupTime, true
}

// HasLastBackupTime returns a boolean if a field has been set.
func (o *HipObjectsDiskBackupCriteria) HasLastBackupTime() bool {
	if o != nil && !IsNil(o.LastBackupTime) {
		return true
	}

	return false
}

// SetLastBackupTime gets a reference to the given HipObjectsAntiMalwareCriteriaLastScanTime and assigns it to the LastBackupTime field.
func (o *HipObjectsDiskBackupCriteria) SetLastBackupTime(v HipObjectsAntiMalwareCriteriaLastScanTime) {
	o.LastBackupTime = &v
}

func (o HipObjectsDiskBackupCriteria) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsDiskBackupCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsInstalled) {
		toSerialize["is_installed"] = o.IsInstalled
	}
	if !IsNil(o.LastBackupTime) {
		toSerialize["last_backup_time"] = o.LastBackupTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsDiskBackupCriteria) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsDiskBackupCriteria := _HipObjectsDiskBackupCriteria{}

	err = json.Unmarshal(data, &varHipObjectsDiskBackupCriteria)

	if err != nil {
		return err
	}

	*o = HipObjectsDiskBackupCriteria(varHipObjectsDiskBackupCriteria)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "is_installed")
		delete(additionalProperties, "last_backup_time")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsDiskBackupCriteria struct {
	value *HipObjectsDiskBackupCriteria
	isSet bool
}

func (v NullableHipObjectsDiskBackupCriteria) Get() *HipObjectsDiskBackupCriteria {
	return v.value
}

func (v *NullableHipObjectsDiskBackupCriteria) Set(val *HipObjectsDiskBackupCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsDiskBackupCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsDiskBackupCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsDiskBackupCriteria(val *HipObjectsDiskBackupCriteria) *NullableHipObjectsDiskBackupCriteria {
	return &NullableHipObjectsDiskBackupCriteria{value: val, isSet: true}
}

func (v NullableHipObjectsDiskBackupCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsDiskBackupCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
