/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the ExternalDynamicListsTypeUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalDynamicListsTypeUrl{}

// ExternalDynamicListsTypeUrl struct for ExternalDynamicListsTypeUrl
type ExternalDynamicListsTypeUrl struct {
	Auth *ExternalDynamicListsTypeDomainAuth `json:"auth,omitempty"`
	// Profile for authenticating client certificates
	CertificateProfile   *string                                 `json:"certificate_profile,omitempty"`
	Description          *string                                 `json:"description,omitempty"`
	ExceptionList        []string                                `json:"exception_list,omitempty"`
	Recurring            ExternalDynamicListsTypeDomainRecurring `json:"recurring"`
	Url                  string                                  `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _ExternalDynamicListsTypeUrl ExternalDynamicListsTypeUrl

// NewExternalDynamicListsTypeUrl instantiates a new ExternalDynamicListsTypeUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalDynamicListsTypeUrl(recurring ExternalDynamicListsTypeDomainRecurring, url string) *ExternalDynamicListsTypeUrl {
	this := ExternalDynamicListsTypeUrl{}
	var certificateProfile string = "None"
	this.CertificateProfile = &certificateProfile
	this.Recurring = recurring
	this.Url = url
	return &this
}

// NewExternalDynamicListsTypeUrlWithDefaults instantiates a new ExternalDynamicListsTypeUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalDynamicListsTypeUrlWithDefaults() *ExternalDynamicListsTypeUrl {
	this := ExternalDynamicListsTypeUrl{}
	var certificateProfile string = "None"
	this.CertificateProfile = &certificateProfile
	var url string = "http://"
	this.Url = url
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeUrl) GetAuth() ExternalDynamicListsTypeDomainAuth {
	if o == nil || IsNil(o.Auth) {
		var ret ExternalDynamicListsTypeDomainAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeUrl) GetAuthOk() (*ExternalDynamicListsTypeDomainAuth, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeUrl) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given ExternalDynamicListsTypeDomainAuth and assigns it to the Auth field.
func (o *ExternalDynamicListsTypeUrl) SetAuth(v ExternalDynamicListsTypeDomainAuth) {
	o.Auth = &v
}

// GetCertificateProfile returns the CertificateProfile field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeUrl) GetCertificateProfile() string {
	if o == nil || IsNil(o.CertificateProfile) {
		var ret string
		return ret
	}
	return *o.CertificateProfile
}

// GetCertificateProfileOk returns a tuple with the CertificateProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeUrl) GetCertificateProfileOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateProfile) {
		return nil, false
	}
	return o.CertificateProfile, true
}

// HasCertificateProfile returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeUrl) HasCertificateProfile() bool {
	if o != nil && !IsNil(o.CertificateProfile) {
		return true
	}

	return false
}

// SetCertificateProfile gets a reference to the given string and assigns it to the CertificateProfile field.
func (o *ExternalDynamicListsTypeUrl) SetCertificateProfile(v string) {
	o.CertificateProfile = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeUrl) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeUrl) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeUrl) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExternalDynamicListsTypeUrl) SetDescription(v string) {
	o.Description = &v
}

// GetExceptionList returns the ExceptionList field value if set, zero value otherwise.
func (o *ExternalDynamicListsTypeUrl) GetExceptionList() []string {
	if o == nil || IsNil(o.ExceptionList) {
		var ret []string
		return ret
	}
	return o.ExceptionList
}

// GetExceptionListOk returns a tuple with the ExceptionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeUrl) GetExceptionListOk() ([]string, bool) {
	if o == nil || IsNil(o.ExceptionList) {
		return nil, false
	}
	return o.ExceptionList, true
}

// HasExceptionList returns a boolean if a field has been set.
func (o *ExternalDynamicListsTypeUrl) HasExceptionList() bool {
	if o != nil && !IsNil(o.ExceptionList) {
		return true
	}

	return false
}

// SetExceptionList gets a reference to the given []string and assigns it to the ExceptionList field.
func (o *ExternalDynamicListsTypeUrl) SetExceptionList(v []string) {
	o.ExceptionList = v
}

// GetRecurring returns the Recurring field value
func (o *ExternalDynamicListsTypeUrl) GetRecurring() ExternalDynamicListsTypeDomainRecurring {
	if o == nil {
		var ret ExternalDynamicListsTypeDomainRecurring
		return ret
	}

	return o.Recurring
}

// GetRecurringOk returns a tuple with the Recurring field value
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeUrl) GetRecurringOk() (*ExternalDynamicListsTypeDomainRecurring, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recurring, true
}

// SetRecurring sets field value
func (o *ExternalDynamicListsTypeUrl) SetRecurring(v ExternalDynamicListsTypeDomainRecurring) {
	o.Recurring = v
}

// GetUrl returns the Url field value
func (o *ExternalDynamicListsTypeUrl) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsTypeUrl) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExternalDynamicListsTypeUrl) SetUrl(v string) {
	o.Url = v
}

func (o ExternalDynamicListsTypeUrl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalDynamicListsTypeUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.CertificateProfile) {
		toSerialize["certificate_profile"] = o.CertificateProfile
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExceptionList) {
		toSerialize["exception_list"] = o.ExceptionList
	}
	toSerialize["recurring"] = o.Recurring
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalDynamicListsTypeUrl) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recurring",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalDynamicListsTypeUrl := _ExternalDynamicListsTypeUrl{}

	err = json.Unmarshal(data, &varExternalDynamicListsTypeUrl)

	if err != nil {
		return err
	}

	*o = ExternalDynamicListsTypeUrl(varExternalDynamicListsTypeUrl)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth")
		delete(additionalProperties, "certificate_profile")
		delete(additionalProperties, "description")
		delete(additionalProperties, "exception_list")
		delete(additionalProperties, "recurring")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalDynamicListsTypeUrl struct {
	value *ExternalDynamicListsTypeUrl
	isSet bool
}

func (v NullableExternalDynamicListsTypeUrl) Get() *ExternalDynamicListsTypeUrl {
	return v.value
}

func (v *NullableExternalDynamicListsTypeUrl) Set(val *ExternalDynamicListsTypeUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalDynamicListsTypeUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalDynamicListsTypeUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalDynamicListsTypeUrl(val *ExternalDynamicListsTypeUrl) *NullableExternalDynamicListsTypeUrl {
	return &NullableExternalDynamicListsTypeUrl{value: val, isSet: true}
}

func (v NullableExternalDynamicListsTypeUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalDynamicListsTypeUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
