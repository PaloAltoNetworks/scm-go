/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the ApplicationsDefault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationsDefault{}

// ApplicationsDefault struct for ApplicationsDefault
type ApplicationsDefault struct {
	IdentByIcmp6Type     *ApplicationsDefaultIdentByIcmp6Type `json:"ident_by_icmp6_type,omitempty"`
	IdentByIcmpType      *ApplicationsDefaultIdentByIcmp6Type `json:"ident_by_icmp_type,omitempty"`
	IdentByIpProtocol    *string                              `json:"ident_by_ip_protocol,omitempty"`
	Port                 []string                             `json:"port,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApplicationsDefault ApplicationsDefault

// NewApplicationsDefault instantiates a new ApplicationsDefault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationsDefault() *ApplicationsDefault {
	this := ApplicationsDefault{}
	return &this
}

// NewApplicationsDefaultWithDefaults instantiates a new ApplicationsDefault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationsDefaultWithDefaults() *ApplicationsDefault {
	this := ApplicationsDefault{}
	return &this
}

// GetIdentByIcmp6Type returns the IdentByIcmp6Type field value if set, zero value otherwise.
func (o *ApplicationsDefault) GetIdentByIcmp6Type() ApplicationsDefaultIdentByIcmp6Type {
	if o == nil || IsNil(o.IdentByIcmp6Type) {
		var ret ApplicationsDefaultIdentByIcmp6Type
		return ret
	}
	return *o.IdentByIcmp6Type
}

// GetIdentByIcmp6TypeOk returns a tuple with the IdentByIcmp6Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsDefault) GetIdentByIcmp6TypeOk() (*ApplicationsDefaultIdentByIcmp6Type, bool) {
	if o == nil || IsNil(o.IdentByIcmp6Type) {
		return nil, false
	}
	return o.IdentByIcmp6Type, true
}

// HasIdentByIcmp6Type returns a boolean if a field has been set.
func (o *ApplicationsDefault) HasIdentByIcmp6Type() bool {
	if o != nil && !IsNil(o.IdentByIcmp6Type) {
		return true
	}

	return false
}

// SetIdentByIcmp6Type gets a reference to the given ApplicationsDefaultIdentByIcmp6Type and assigns it to the IdentByIcmp6Type field.
func (o *ApplicationsDefault) SetIdentByIcmp6Type(v ApplicationsDefaultIdentByIcmp6Type) {
	o.IdentByIcmp6Type = &v
}

// GetIdentByIcmpType returns the IdentByIcmpType field value if set, zero value otherwise.
func (o *ApplicationsDefault) GetIdentByIcmpType() ApplicationsDefaultIdentByIcmp6Type {
	if o == nil || IsNil(o.IdentByIcmpType) {
		var ret ApplicationsDefaultIdentByIcmp6Type
		return ret
	}
	return *o.IdentByIcmpType
}

// GetIdentByIcmpTypeOk returns a tuple with the IdentByIcmpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsDefault) GetIdentByIcmpTypeOk() (*ApplicationsDefaultIdentByIcmp6Type, bool) {
	if o == nil || IsNil(o.IdentByIcmpType) {
		return nil, false
	}
	return o.IdentByIcmpType, true
}

// HasIdentByIcmpType returns a boolean if a field has been set.
func (o *ApplicationsDefault) HasIdentByIcmpType() bool {
	if o != nil && !IsNil(o.IdentByIcmpType) {
		return true
	}

	return false
}

// SetIdentByIcmpType gets a reference to the given ApplicationsDefaultIdentByIcmp6Type and assigns it to the IdentByIcmpType field.
func (o *ApplicationsDefault) SetIdentByIcmpType(v ApplicationsDefaultIdentByIcmp6Type) {
	o.IdentByIcmpType = &v
}

// GetIdentByIpProtocol returns the IdentByIpProtocol field value if set, zero value otherwise.
func (o *ApplicationsDefault) GetIdentByIpProtocol() string {
	if o == nil || IsNil(o.IdentByIpProtocol) {
		var ret string
		return ret
	}
	return *o.IdentByIpProtocol
}

// GetIdentByIpProtocolOk returns a tuple with the IdentByIpProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsDefault) GetIdentByIpProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.IdentByIpProtocol) {
		return nil, false
	}
	return o.IdentByIpProtocol, true
}

// HasIdentByIpProtocol returns a boolean if a field has been set.
func (o *ApplicationsDefault) HasIdentByIpProtocol() bool {
	if o != nil && !IsNil(o.IdentByIpProtocol) {
		return true
	}

	return false
}

// SetIdentByIpProtocol gets a reference to the given string and assigns it to the IdentByIpProtocol field.
func (o *ApplicationsDefault) SetIdentByIpProtocol(v string) {
	o.IdentByIpProtocol = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ApplicationsDefault) GetPort() []string {
	if o == nil || IsNil(o.Port) {
		var ret []string
		return ret
	}
	return o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsDefault) GetPortOk() ([]string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ApplicationsDefault) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given []string and assigns it to the Port field.
func (o *ApplicationsDefault) SetPort(v []string) {
	o.Port = v
}

func (o ApplicationsDefault) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationsDefault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentByIcmp6Type) {
		toSerialize["ident_by_icmp6_type"] = o.IdentByIcmp6Type
	}
	if !IsNil(o.IdentByIcmpType) {
		toSerialize["ident_by_icmp_type"] = o.IdentByIcmpType
	}
	if !IsNil(o.IdentByIpProtocol) {
		toSerialize["ident_by_ip_protocol"] = o.IdentByIpProtocol
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApplicationsDefault) UnmarshalJSON(data []byte) (err error) {
	varApplicationsDefault := _ApplicationsDefault{}

	err = json.Unmarshal(data, &varApplicationsDefault)

	if err != nil {
		return err
	}

	*o = ApplicationsDefault(varApplicationsDefault)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ident_by_icmp6_type")
		delete(additionalProperties, "ident_by_icmp_type")
		delete(additionalProperties, "ident_by_ip_protocol")
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApplicationsDefault struct {
	value *ApplicationsDefault
	isSet bool
}

func (v NullableApplicationsDefault) Get() *ApplicationsDefault {
	return v.value
}

func (v *NullableApplicationsDefault) Set(val *ApplicationsDefault) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationsDefault) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationsDefault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationsDefault(val *ApplicationsDefault) *NullableApplicationsDefault {
	return &NullableApplicationsDefault{value: val, isSet: true}
}

func (v NullableApplicationsDefault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationsDefault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
