/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsNetworkInfoCriteriaNetworkIs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsNetworkInfoCriteriaNetworkIs{}

// HipObjectsNetworkInfoCriteriaNetworkIs struct for HipObjectsNetworkInfoCriteriaNetworkIs
type HipObjectsNetworkInfoCriteriaNetworkIs struct {
	Mobile               *HipObjectsNetworkInfoCriteriaNetworkIsMobile `json:"mobile,omitempty"`
	Unknown              map[string]interface{}                        `json:"unknown,omitempty"`
	Wifi                 *HipObjectsNetworkInfoCriteriaNetworkIsWifi   `json:"wifi,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsNetworkInfoCriteriaNetworkIs HipObjectsNetworkInfoCriteriaNetworkIs

// NewHipObjectsNetworkInfoCriteriaNetworkIs instantiates a new HipObjectsNetworkInfoCriteriaNetworkIs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsNetworkInfoCriteriaNetworkIs() *HipObjectsNetworkInfoCriteriaNetworkIs {
	this := HipObjectsNetworkInfoCriteriaNetworkIs{}
	return &this
}

// NewHipObjectsNetworkInfoCriteriaNetworkIsWithDefaults instantiates a new HipObjectsNetworkInfoCriteriaNetworkIs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsNetworkInfoCriteriaNetworkIsWithDefaults() *HipObjectsNetworkInfoCriteriaNetworkIs {
	this := HipObjectsNetworkInfoCriteriaNetworkIs{}
	return &this
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) GetMobile() HipObjectsNetworkInfoCriteriaNetworkIsMobile {
	if o == nil || IsNil(o.Mobile) {
		var ret HipObjectsNetworkInfoCriteriaNetworkIsMobile
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) GetMobileOk() (*HipObjectsNetworkInfoCriteriaNetworkIsMobile, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given HipObjectsNetworkInfoCriteriaNetworkIsMobile and assigns it to the Mobile field.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) SetMobile(v HipObjectsNetworkInfoCriteriaNetworkIsMobile) {
	o.Mobile = &v
}

// GetUnknown returns the Unknown field value if set, zero value otherwise.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) GetUnknown() map[string]interface{} {
	if o == nil || IsNil(o.Unknown) {
		var ret map[string]interface{}
		return ret
	}
	return o.Unknown
}

// GetUnknownOk returns a tuple with the Unknown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) GetUnknownOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Unknown) {
		return map[string]interface{}{}, false
	}
	return o.Unknown, true
}

// HasUnknown returns a boolean if a field has been set.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) HasUnknown() bool {
	if o != nil && !IsNil(o.Unknown) {
		return true
	}

	return false
}

// SetUnknown gets a reference to the given map[string]interface{} and assigns it to the Unknown field.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) SetUnknown(v map[string]interface{}) {
	o.Unknown = v
}

// GetWifi returns the Wifi field value if set, zero value otherwise.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) GetWifi() HipObjectsNetworkInfoCriteriaNetworkIsWifi {
	if o == nil || IsNil(o.Wifi) {
		var ret HipObjectsNetworkInfoCriteriaNetworkIsWifi
		return ret
	}
	return *o.Wifi
}

// GetWifiOk returns a tuple with the Wifi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) GetWifiOk() (*HipObjectsNetworkInfoCriteriaNetworkIsWifi, bool) {
	if o == nil || IsNil(o.Wifi) {
		return nil, false
	}
	return o.Wifi, true
}

// HasWifi returns a boolean if a field has been set.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) HasWifi() bool {
	if o != nil && !IsNil(o.Wifi) {
		return true
	}

	return false
}

// SetWifi gets a reference to the given HipObjectsNetworkInfoCriteriaNetworkIsWifi and assigns it to the Wifi field.
func (o *HipObjectsNetworkInfoCriteriaNetworkIs) SetWifi(v HipObjectsNetworkInfoCriteriaNetworkIsWifi) {
	o.Wifi = &v
}

func (o HipObjectsNetworkInfoCriteriaNetworkIs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsNetworkInfoCriteriaNetworkIs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.Unknown) {
		toSerialize["unknown"] = o.Unknown
	}
	if !IsNil(o.Wifi) {
		toSerialize["wifi"] = o.Wifi
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsNetworkInfoCriteriaNetworkIs) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsNetworkInfoCriteriaNetworkIs := _HipObjectsNetworkInfoCriteriaNetworkIs{}

	err = json.Unmarshal(data, &varHipObjectsNetworkInfoCriteriaNetworkIs)

	if err != nil {
		return err
	}

	*o = HipObjectsNetworkInfoCriteriaNetworkIs(varHipObjectsNetworkInfoCriteriaNetworkIs)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mobile")
		delete(additionalProperties, "unknown")
		delete(additionalProperties, "wifi")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsNetworkInfoCriteriaNetworkIs struct {
	value *HipObjectsNetworkInfoCriteriaNetworkIs
	isSet bool
}

func (v NullableHipObjectsNetworkInfoCriteriaNetworkIs) Get() *HipObjectsNetworkInfoCriteriaNetworkIs {
	return v.value
}

func (v *NullableHipObjectsNetworkInfoCriteriaNetworkIs) Set(val *HipObjectsNetworkInfoCriteriaNetworkIs) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsNetworkInfoCriteriaNetworkIs) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsNetworkInfoCriteriaNetworkIs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsNetworkInfoCriteriaNetworkIs(val *HipObjectsNetworkInfoCriteriaNetworkIs) *NullableHipObjectsNetworkInfoCriteriaNetworkIs {
	return &NullableHipObjectsNetworkInfoCriteriaNetworkIs{value: val, isSet: true}
}

func (v NullableHipObjectsNetworkInfoCriteriaNetworkIs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsNetworkInfoCriteriaNetworkIs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
