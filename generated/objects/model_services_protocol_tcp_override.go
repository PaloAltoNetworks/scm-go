/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the ServicesProtocolTcpOverride type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesProtocolTcpOverride{}

// ServicesProtocolTcpOverride struct for ServicesProtocolTcpOverride
type ServicesProtocolTcpOverride struct {
	// tcp session half-close timeout value (in second)
	HalfcloseTimeout *int32 `json:"halfclose_timeout,omitempty"`
	// tcp session timeout value (in second)
	Timeout *int32 `json:"timeout,omitempty"`
	// tcp session time-wait timeout value (in second)
	TimewaitTimeout      *int32 `json:"timewait_timeout,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServicesProtocolTcpOverride ServicesProtocolTcpOverride

// NewServicesProtocolTcpOverride instantiates a new ServicesProtocolTcpOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesProtocolTcpOverride() *ServicesProtocolTcpOverride {
	this := ServicesProtocolTcpOverride{}
	var halfcloseTimeout int32 = 120
	this.HalfcloseTimeout = &halfcloseTimeout
	var timeout int32 = 3600
	this.Timeout = &timeout
	var timewaitTimeout int32 = 15
	this.TimewaitTimeout = &timewaitTimeout
	return &this
}

// NewServicesProtocolTcpOverrideWithDefaults instantiates a new ServicesProtocolTcpOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesProtocolTcpOverrideWithDefaults() *ServicesProtocolTcpOverride {
	this := ServicesProtocolTcpOverride{}
	var halfcloseTimeout int32 = 120
	this.HalfcloseTimeout = &halfcloseTimeout
	var timeout int32 = 3600
	this.Timeout = &timeout
	var timewaitTimeout int32 = 15
	this.TimewaitTimeout = &timewaitTimeout
	return &this
}

// GetHalfcloseTimeout returns the HalfcloseTimeout field value if set, zero value otherwise.
func (o *ServicesProtocolTcpOverride) GetHalfcloseTimeout() int32 {
	if o == nil || IsNil(o.HalfcloseTimeout) {
		var ret int32
		return ret
	}
	return *o.HalfcloseTimeout
}

// GetHalfcloseTimeoutOk returns a tuple with the HalfcloseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesProtocolTcpOverride) GetHalfcloseTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.HalfcloseTimeout) {
		return nil, false
	}
	return o.HalfcloseTimeout, true
}

// HasHalfcloseTimeout returns a boolean if a field has been set.
func (o *ServicesProtocolTcpOverride) HasHalfcloseTimeout() bool {
	if o != nil && !IsNil(o.HalfcloseTimeout) {
		return true
	}

	return false
}

// SetHalfcloseTimeout gets a reference to the given int32 and assigns it to the HalfcloseTimeout field.
func (o *ServicesProtocolTcpOverride) SetHalfcloseTimeout(v int32) {
	o.HalfcloseTimeout = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ServicesProtocolTcpOverride) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesProtocolTcpOverride) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ServicesProtocolTcpOverride) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *ServicesProtocolTcpOverride) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetTimewaitTimeout returns the TimewaitTimeout field value if set, zero value otherwise.
func (o *ServicesProtocolTcpOverride) GetTimewaitTimeout() int32 {
	if o == nil || IsNil(o.TimewaitTimeout) {
		var ret int32
		return ret
	}
	return *o.TimewaitTimeout
}

// GetTimewaitTimeoutOk returns a tuple with the TimewaitTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesProtocolTcpOverride) GetTimewaitTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.TimewaitTimeout) {
		return nil, false
	}
	return o.TimewaitTimeout, true
}

// HasTimewaitTimeout returns a boolean if a field has been set.
func (o *ServicesProtocolTcpOverride) HasTimewaitTimeout() bool {
	if o != nil && !IsNil(o.TimewaitTimeout) {
		return true
	}

	return false
}

// SetTimewaitTimeout gets a reference to the given int32 and assigns it to the TimewaitTimeout field.
func (o *ServicesProtocolTcpOverride) SetTimewaitTimeout(v int32) {
	o.TimewaitTimeout = &v
}

func (o ServicesProtocolTcpOverride) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesProtocolTcpOverride) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HalfcloseTimeout) {
		toSerialize["halfclose_timeout"] = o.HalfcloseTimeout
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.TimewaitTimeout) {
		toSerialize["timewait_timeout"] = o.TimewaitTimeout
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServicesProtocolTcpOverride) UnmarshalJSON(data []byte) (err error) {
	varServicesProtocolTcpOverride := _ServicesProtocolTcpOverride{}

	err = json.Unmarshal(data, &varServicesProtocolTcpOverride)

	if err != nil {
		return err
	}

	*o = ServicesProtocolTcpOverride(varServicesProtocolTcpOverride)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "halfclose_timeout")
		delete(additionalProperties, "timeout")
		delete(additionalProperties, "timewait_timeout")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicesProtocolTcpOverride struct {
	value *ServicesProtocolTcpOverride
	isSet bool
}

func (v NullableServicesProtocolTcpOverride) Get() *ServicesProtocolTcpOverride {
	return v.value
}

func (v *NullableServicesProtocolTcpOverride) Set(val *ServicesProtocolTcpOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesProtocolTcpOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesProtocolTcpOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesProtocolTcpOverride(val *ServicesProtocolTcpOverride) *NullableServicesProtocolTcpOverride {
	return &NullableServicesProtocolTcpOverride{value: val, isSet: true}
}

func (v NullableServicesProtocolTcpOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesProtocolTcpOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
