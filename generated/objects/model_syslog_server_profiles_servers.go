/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the SyslogServerProfilesServers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyslogServerProfilesServers{}

// SyslogServerProfilesServers struct for SyslogServerProfilesServers
type SyslogServerProfilesServers struct {
	// Syslog facility
	Facility *string `json:"facility,omitempty"`
	// Syslog format
	Format *string `json:"format,omitempty"`
	// Syslog server name
	Name *string `json:"name,omitempty"`
	// Syslog server port
	Port *int32 `json:"port,omitempty"`
	// Syslog server address
	Server *string `json:"server,omitempty"`
	// Transport protocol
	Transport            *string `json:"transport,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SyslogServerProfilesServers SyslogServerProfilesServers

// NewSyslogServerProfilesServers instantiates a new SyslogServerProfilesServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyslogServerProfilesServers() *SyslogServerProfilesServers {
	this := SyslogServerProfilesServers{}
	return &this
}

// NewSyslogServerProfilesServersWithDefaults instantiates a new SyslogServerProfilesServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyslogServerProfilesServersWithDefaults() *SyslogServerProfilesServers {
	this := SyslogServerProfilesServers{}
	return &this
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *SyslogServerProfilesServers) GetFacility() string {
	if o == nil || IsNil(o.Facility) {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogServerProfilesServers) GetFacilityOk() (*string, bool) {
	if o == nil || IsNil(o.Facility) {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *SyslogServerProfilesServers) HasFacility() bool {
	if o != nil && !IsNil(o.Facility) {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *SyslogServerProfilesServers) SetFacility(v string) {
	o.Facility = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *SyslogServerProfilesServers) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogServerProfilesServers) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *SyslogServerProfilesServers) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *SyslogServerProfilesServers) SetFormat(v string) {
	o.Format = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyslogServerProfilesServers) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogServerProfilesServers) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyslogServerProfilesServers) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyslogServerProfilesServers) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SyslogServerProfilesServers) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogServerProfilesServers) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SyslogServerProfilesServers) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *SyslogServerProfilesServers) SetPort(v int32) {
	o.Port = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *SyslogServerProfilesServers) GetServer() string {
	if o == nil || IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogServerProfilesServers) GetServerOk() (*string, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *SyslogServerProfilesServers) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *SyslogServerProfilesServers) SetServer(v string) {
	o.Server = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *SyslogServerProfilesServers) GetTransport() string {
	if o == nil || IsNil(o.Transport) {
		var ret string
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogServerProfilesServers) GetTransportOk() (*string, bool) {
	if o == nil || IsNil(o.Transport) {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *SyslogServerProfilesServers) HasTransport() bool {
	if o != nil && !IsNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given string and assigns it to the Transport field.
func (o *SyslogServerProfilesServers) SetTransport(v string) {
	o.Transport = &v
}

func (o SyslogServerProfilesServers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyslogServerProfilesServers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Facility) {
		toSerialize["facility"] = o.Facility
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SyslogServerProfilesServers) UnmarshalJSON(data []byte) (err error) {
	varSyslogServerProfilesServers := _SyslogServerProfilesServers{}

	err = json.Unmarshal(data, &varSyslogServerProfilesServers)

	if err != nil {
		return err
	}

	*o = SyslogServerProfilesServers(varSyslogServerProfilesServers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "facility")
		delete(additionalProperties, "format")
		delete(additionalProperties, "name")
		delete(additionalProperties, "port")
		delete(additionalProperties, "server")
		delete(additionalProperties, "transport")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSyslogServerProfilesServers struct {
	value *SyslogServerProfilesServers
	isSet bool
}

func (v NullableSyslogServerProfilesServers) Get() *SyslogServerProfilesServers {
	return v.value
}

func (v *NullableSyslogServerProfilesServers) Set(val *SyslogServerProfilesServers) {
	v.value = val
	v.isSet = true
}

func (v NullableSyslogServerProfilesServers) IsSet() bool {
	return v.isSet
}

func (v *NullableSyslogServerProfilesServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyslogServerProfilesServers(val *SyslogServerProfilesServers) *NullableSyslogServerProfilesServers {
	return &NullableSyslogServerProfilesServers{value: val, isSet: true}
}

func (v NullableSyslogServerProfilesServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyslogServerProfilesServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
