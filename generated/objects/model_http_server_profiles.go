/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the HttpServerProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpServerProfiles{}

// HttpServerProfiles struct for HttpServerProfiles
type HttpServerProfiles struct {
	// The device in which the resource is defined
	Device *string `json:"device,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// The folder in which the resource is defined
	Folder *string                   `json:"folder,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	Format *HttpServerProfilesFormat `json:"format,omitempty"`
	// The UUID of the HTTP server profile
	Id string `json:"id"`
	// The name of the profile
	Name   string                          `json:"name"`
	Server []HttpServerProfilesServerInner `json:"server,omitempty"`
	// The snippet in which the resource is defined
	Snippet *string `json:"snippet,omitempty" validate:"regexp=^[a-zA-Z\\\\d-_\\\\. ]+$"`
	// Register tags on match
	TagRegistration      *bool `json:"tag_registration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HttpServerProfiles HttpServerProfiles

// NewHttpServerProfiles instantiates a new HttpServerProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpServerProfiles(id string, name string) *HttpServerProfiles {
	this := HttpServerProfiles{}
	this.Id = id
	this.Name = name
	return &this
}

// NewHttpServerProfilesWithDefaults instantiates a new HttpServerProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpServerProfilesWithDefaults() *HttpServerProfiles {
	this := HttpServerProfiles{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *HttpServerProfiles) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *HttpServerProfiles) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *HttpServerProfiles) SetDevice(v string) {
	o.Device = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *HttpServerProfiles) GetFolder() string {
	if o == nil || IsNil(o.Folder) {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetFolderOk() (*string, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *HttpServerProfiles) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *HttpServerProfiles) SetFolder(v string) {
	o.Folder = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *HttpServerProfiles) GetFormat() HttpServerProfilesFormat {
	if o == nil || IsNil(o.Format) {
		var ret HttpServerProfilesFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetFormatOk() (*HttpServerProfilesFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *HttpServerProfiles) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given HttpServerProfilesFormat and assigns it to the Format field.
func (o *HttpServerProfiles) SetFormat(v HttpServerProfilesFormat) {
	o.Format = &v
}

// GetId returns the Id field value
func (o *HttpServerProfiles) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HttpServerProfiles) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *HttpServerProfiles) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HttpServerProfiles) SetName(v string) {
	o.Name = v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *HttpServerProfiles) GetServer() []HttpServerProfilesServerInner {
	if o == nil || IsNil(o.Server) {
		var ret []HttpServerProfilesServerInner
		return ret
	}
	return o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetServerOk() ([]HttpServerProfilesServerInner, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *HttpServerProfiles) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given []HttpServerProfilesServerInner and assigns it to the Server field.
func (o *HttpServerProfiles) SetServer(v []HttpServerProfilesServerInner) {
	o.Server = v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *HttpServerProfiles) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *HttpServerProfiles) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *HttpServerProfiles) SetSnippet(v string) {
	o.Snippet = &v
}

// GetTagRegistration returns the TagRegistration field value if set, zero value otherwise.
func (o *HttpServerProfiles) GetTagRegistration() bool {
	if o == nil || IsNil(o.TagRegistration) {
		var ret bool
		return ret
	}
	return *o.TagRegistration
}

// GetTagRegistrationOk returns a tuple with the TagRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServerProfiles) GetTagRegistrationOk() (*bool, bool) {
	if o == nil || IsNil(o.TagRegistration) {
		return nil, false
	}
	return o.TagRegistration, true
}

// HasTagRegistration returns a boolean if a field has been set.
func (o *HttpServerProfiles) HasTagRegistration() bool {
	if o != nil && !IsNil(o.TagRegistration) {
		return true
	}

	return false
}

// SetTagRegistration gets a reference to the given bool and assigns it to the TagRegistration field.
func (o *HttpServerProfiles) SetTagRegistration(v bool) {
	o.TagRegistration = &v
}

func (o HttpServerProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpServerProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.TagRegistration) {
		toSerialize["tag_registration"] = o.TagRegistration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HttpServerProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHttpServerProfiles := _HttpServerProfiles{}

	err = json.Unmarshal(data, &varHttpServerProfiles)

	if err != nil {
		return err
	}

	*o = HttpServerProfiles(varHttpServerProfiles)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device")
		delete(additionalProperties, "folder")
		delete(additionalProperties, "format")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "server")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "tag_registration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHttpServerProfiles struct {
	value *HttpServerProfiles
	isSet bool
}

func (v NullableHttpServerProfiles) Get() *HttpServerProfiles {
	return v.value
}

func (v *NullableHttpServerProfiles) Set(val *HttpServerProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpServerProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpServerProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpServerProfiles(val *HttpServerProfiles) *NullableHttpServerProfiles {
	return &NullableHttpServerProfiles{value: val, isSet: true}
}

func (v NullableHttpServerProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpServerProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
