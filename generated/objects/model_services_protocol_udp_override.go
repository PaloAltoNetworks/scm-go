/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the ServicesProtocolUdpOverride type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesProtocolUdpOverride{}

// ServicesProtocolUdpOverride struct for ServicesProtocolUdpOverride
type ServicesProtocolUdpOverride struct {
	// udp session timeout value (in second)
	Timeout              *int32 `json:"timeout,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServicesProtocolUdpOverride ServicesProtocolUdpOverride

// NewServicesProtocolUdpOverride instantiates a new ServicesProtocolUdpOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesProtocolUdpOverride() *ServicesProtocolUdpOverride {
	this := ServicesProtocolUdpOverride{}
	var timeout int32 = 30
	this.Timeout = &timeout
	return &this
}

// NewServicesProtocolUdpOverrideWithDefaults instantiates a new ServicesProtocolUdpOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesProtocolUdpOverrideWithDefaults() *ServicesProtocolUdpOverride {
	this := ServicesProtocolUdpOverride{}
	var timeout int32 = 30
	this.Timeout = &timeout
	return &this
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ServicesProtocolUdpOverride) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesProtocolUdpOverride) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ServicesProtocolUdpOverride) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *ServicesProtocolUdpOverride) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o ServicesProtocolUdpOverride) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesProtocolUdpOverride) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServicesProtocolUdpOverride) UnmarshalJSON(data []byte) (err error) {
	varServicesProtocolUdpOverride := _ServicesProtocolUdpOverride{}

	err = json.Unmarshal(data, &varServicesProtocolUdpOverride)

	if err != nil {
		return err
	}

	*o = ServicesProtocolUdpOverride(varServicesProtocolUdpOverride)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "timeout")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicesProtocolUdpOverride struct {
	value *ServicesProtocolUdpOverride
	isSet bool
}

func (v NullableServicesProtocolUdpOverride) Get() *ServicesProtocolUdpOverride {
	return v.value
}

func (v *NullableServicesProtocolUdpOverride) Set(val *ServicesProtocolUdpOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesProtocolUdpOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesProtocolUdpOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesProtocolUdpOverride(val *ServicesProtocolUdpOverride) *NullableServicesProtocolUdpOverride {
	return &NullableServicesProtocolUdpOverride{value: val, isSet: true}
}

func (v NullableServicesProtocolUdpOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesProtocolUdpOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
