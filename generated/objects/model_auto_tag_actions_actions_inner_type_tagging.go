/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the AutoTagActionsActionsInnerTypeTagging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTagActionsActionsInnerTypeTagging{}

// AutoTagActionsActionsInnerTypeTagging struct for AutoTagActionsActionsInnerTypeTagging
type AutoTagActionsActionsInnerTypeTagging struct {
	// Add or Remove tag option
	Action string `json:"action"`
	// Tags for address object
	Tags []string `json:"tags,omitempty"`
	// Source or Destination Address, User, X-Forwarded-For Address
	Target               string   `json:"target"`
	Timeout              *float32 `json:"timeout,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AutoTagActionsActionsInnerTypeTagging AutoTagActionsActionsInnerTypeTagging

// NewAutoTagActionsActionsInnerTypeTagging instantiates a new AutoTagActionsActionsInnerTypeTagging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTagActionsActionsInnerTypeTagging(action string, target string) *AutoTagActionsActionsInnerTypeTagging {
	this := AutoTagActionsActionsInnerTypeTagging{}
	this.Action = action
	this.Target = target
	return &this
}

// NewAutoTagActionsActionsInnerTypeTaggingWithDefaults instantiates a new AutoTagActionsActionsInnerTypeTagging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTagActionsActionsInnerTypeTaggingWithDefaults() *AutoTagActionsActionsInnerTypeTagging {
	this := AutoTagActionsActionsInnerTypeTagging{}
	return &this
}

// GetAction returns the Action field value
func (o *AutoTagActionsActionsInnerTypeTagging) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *AutoTagActionsActionsInnerTypeTagging) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *AutoTagActionsActionsInnerTypeTagging) SetAction(v string) {
	o.Action = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AutoTagActionsActionsInnerTypeTagging) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTagActionsActionsInnerTypeTagging) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AutoTagActionsActionsInnerTypeTagging) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AutoTagActionsActionsInnerTypeTagging) SetTags(v []string) {
	o.Tags = v
}

// GetTarget returns the Target field value
func (o *AutoTagActionsActionsInnerTypeTagging) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *AutoTagActionsActionsInnerTypeTagging) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *AutoTagActionsActionsInnerTypeTagging) SetTarget(v string) {
	o.Target = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *AutoTagActionsActionsInnerTypeTagging) GetTimeout() float32 {
	if o == nil || IsNil(o.Timeout) {
		var ret float32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTagActionsActionsInnerTypeTagging) GetTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *AutoTagActionsActionsInnerTypeTagging) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given float32 and assigns it to the Timeout field.
func (o *AutoTagActionsActionsInnerTypeTagging) SetTimeout(v float32) {
	o.Timeout = &v
}

func (o AutoTagActionsActionsInnerTypeTagging) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTagActionsActionsInnerTypeTagging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["target"] = o.Target
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AutoTagActionsActionsInnerTypeTagging) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoTagActionsActionsInnerTypeTagging := _AutoTagActionsActionsInnerTypeTagging{}

	err = json.Unmarshal(data, &varAutoTagActionsActionsInnerTypeTagging)

	if err != nil {
		return err
	}

	*o = AutoTagActionsActionsInnerTypeTagging(varAutoTagActionsActionsInnerTypeTagging)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "target")
		delete(additionalProperties, "timeout")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAutoTagActionsActionsInnerTypeTagging struct {
	value *AutoTagActionsActionsInnerTypeTagging
	isSet bool
}

func (v NullableAutoTagActionsActionsInnerTypeTagging) Get() *AutoTagActionsActionsInnerTypeTagging {
	return v.value
}

func (v *NullableAutoTagActionsActionsInnerTypeTagging) Set(val *AutoTagActionsActionsInnerTypeTagging) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTagActionsActionsInnerTypeTagging) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTagActionsActionsInnerTypeTagging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTagActionsActionsInnerTypeTagging(val *AutoTagActionsActionsInnerTypeTagging) *NullableAutoTagActionsActionsInnerTypeTagging {
	return &NullableAutoTagActionsActionsInnerTypeTagging{value: val, isSet: true}
}

func (v NullableAutoTagActionsActionsInnerTypeTagging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTagActionsActionsInnerTypeTagging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
