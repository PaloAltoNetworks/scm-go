/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsDiskEncryptionCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsDiskEncryptionCriteria{}

// HipObjectsDiskEncryptionCriteria Encryption locations
type HipObjectsDiskEncryptionCriteria struct {
	EncryptedLocations []HipObjectsDiskEncryptionCriteriaEncryptedLocationsInner `json:"encrypted_locations,omitempty"`
	// Is Installed
	IsInstalled          *bool `json:"is_installed,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsDiskEncryptionCriteria HipObjectsDiskEncryptionCriteria

// NewHipObjectsDiskEncryptionCriteria instantiates a new HipObjectsDiskEncryptionCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsDiskEncryptionCriteria() *HipObjectsDiskEncryptionCriteria {
	this := HipObjectsDiskEncryptionCriteria{}
	var isInstalled bool = true
	this.IsInstalled = &isInstalled
	return &this
}

// NewHipObjectsDiskEncryptionCriteriaWithDefaults instantiates a new HipObjectsDiskEncryptionCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsDiskEncryptionCriteriaWithDefaults() *HipObjectsDiskEncryptionCriteria {
	this := HipObjectsDiskEncryptionCriteria{}
	var isInstalled bool = true
	this.IsInstalled = &isInstalled
	return &this
}

// GetEncryptedLocations returns the EncryptedLocations field value if set, zero value otherwise.
func (o *HipObjectsDiskEncryptionCriteria) GetEncryptedLocations() []HipObjectsDiskEncryptionCriteriaEncryptedLocationsInner {
	if o == nil || IsNil(o.EncryptedLocations) {
		var ret []HipObjectsDiskEncryptionCriteriaEncryptedLocationsInner
		return ret
	}
	return o.EncryptedLocations
}

// GetEncryptedLocationsOk returns a tuple with the EncryptedLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskEncryptionCriteria) GetEncryptedLocationsOk() ([]HipObjectsDiskEncryptionCriteriaEncryptedLocationsInner, bool) {
	if o == nil || IsNil(o.EncryptedLocations) {
		return nil, false
	}
	return o.EncryptedLocations, true
}

// HasEncryptedLocations returns a boolean if a field has been set.
func (o *HipObjectsDiskEncryptionCriteria) HasEncryptedLocations() bool {
	if o != nil && !IsNil(o.EncryptedLocations) {
		return true
	}

	return false
}

// SetEncryptedLocations gets a reference to the given []HipObjectsDiskEncryptionCriteriaEncryptedLocationsInner and assigns it to the EncryptedLocations field.
func (o *HipObjectsDiskEncryptionCriteria) SetEncryptedLocations(v []HipObjectsDiskEncryptionCriteriaEncryptedLocationsInner) {
	o.EncryptedLocations = v
}

// GetIsInstalled returns the IsInstalled field value if set, zero value otherwise.
func (o *HipObjectsDiskEncryptionCriteria) GetIsInstalled() bool {
	if o == nil || IsNil(o.IsInstalled) {
		var ret bool
		return ret
	}
	return *o.IsInstalled
}

// GetIsInstalledOk returns a tuple with the IsInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskEncryptionCriteria) GetIsInstalledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInstalled) {
		return nil, false
	}
	return o.IsInstalled, true
}

// HasIsInstalled returns a boolean if a field has been set.
func (o *HipObjectsDiskEncryptionCriteria) HasIsInstalled() bool {
	if o != nil && !IsNil(o.IsInstalled) {
		return true
	}

	return false
}

// SetIsInstalled gets a reference to the given bool and assigns it to the IsInstalled field.
func (o *HipObjectsDiskEncryptionCriteria) SetIsInstalled(v bool) {
	o.IsInstalled = &v
}

func (o HipObjectsDiskEncryptionCriteria) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsDiskEncryptionCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EncryptedLocations) {
		toSerialize["encrypted_locations"] = o.EncryptedLocations
	}
	if !IsNil(o.IsInstalled) {
		toSerialize["is_installed"] = o.IsInstalled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsDiskEncryptionCriteria) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsDiskEncryptionCriteria := _HipObjectsDiskEncryptionCriteria{}

	err = json.Unmarshal(data, &varHipObjectsDiskEncryptionCriteria)

	if err != nil {
		return err
	}

	*o = HipObjectsDiskEncryptionCriteria(varHipObjectsDiskEncryptionCriteria)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "encrypted_locations")
		delete(additionalProperties, "is_installed")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsDiskEncryptionCriteria struct {
	value *HipObjectsDiskEncryptionCriteria
	isSet bool
}

func (v NullableHipObjectsDiskEncryptionCriteria) Get() *HipObjectsDiskEncryptionCriteria {
	return v.value
}

func (v *NullableHipObjectsDiskEncryptionCriteria) Set(val *HipObjectsDiskEncryptionCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsDiskEncryptionCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsDiskEncryptionCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsDiskEncryptionCriteria(val *HipObjectsDiskEncryptionCriteria) *NullableHipObjectsDiskEncryptionCriteria {
	return &NullableHipObjectsDiskEncryptionCriteria{value: val, isSet: true}
}

func (v NullableHipObjectsDiskEncryptionCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsDiskEncryptionCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
