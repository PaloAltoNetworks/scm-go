/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsAntiMalwareCriteriaProductVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsAntiMalwareCriteriaProductVersion{}

// HipObjectsAntiMalwareCriteriaProductVersion struct for HipObjectsAntiMalwareCriteriaProductVersion
type HipObjectsAntiMalwareCriteriaProductVersion struct {
	Contains             *string                                               `json:"contains,omitempty"`
	GreaterEqual         *string                                               `json:"greater_equal,omitempty"`
	GreaterThan          *string                                               `json:"greater_than,omitempty"`
	Is                   *string                                               `json:"is,omitempty"`
	IsNot                *string                                               `json:"is_not,omitempty"`
	LessEqual            *string                                               `json:"less_equal,omitempty"`
	LessThan             *string                                               `json:"less_than,omitempty"`
	NotWithin            *HipObjectsAntiMalwareCriteriaProductVersionNotWithin `json:"not_within,omitempty"`
	Within               *HipObjectsAntiMalwareCriteriaProductVersionNotWithin `json:"within,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsAntiMalwareCriteriaProductVersion HipObjectsAntiMalwareCriteriaProductVersion

// NewHipObjectsAntiMalwareCriteriaProductVersion instantiates a new HipObjectsAntiMalwareCriteriaProductVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsAntiMalwareCriteriaProductVersion() *HipObjectsAntiMalwareCriteriaProductVersion {
	this := HipObjectsAntiMalwareCriteriaProductVersion{}
	return &this
}

// NewHipObjectsAntiMalwareCriteriaProductVersionWithDefaults instantiates a new HipObjectsAntiMalwareCriteriaProductVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsAntiMalwareCriteriaProductVersionWithDefaults() *HipObjectsAntiMalwareCriteriaProductVersion {
	this := HipObjectsAntiMalwareCriteriaProductVersion{}
	return &this
}

// GetContains returns the Contains field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetContains() string {
	if o == nil || IsNil(o.Contains) {
		var ret string
		return ret
	}
	return *o.Contains
}

// GetContainsOk returns a tuple with the Contains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetContainsOk() (*string, bool) {
	if o == nil || IsNil(o.Contains) {
		return nil, false
	}
	return o.Contains, true
}

// HasContains returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasContains() bool {
	if o != nil && !IsNil(o.Contains) {
		return true
	}

	return false
}

// SetContains gets a reference to the given string and assigns it to the Contains field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetContains(v string) {
	o.Contains = &v
}

// GetGreaterEqual returns the GreaterEqual field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetGreaterEqual() string {
	if o == nil || IsNil(o.GreaterEqual) {
		var ret string
		return ret
	}
	return *o.GreaterEqual
}

// GetGreaterEqualOk returns a tuple with the GreaterEqual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetGreaterEqualOk() (*string, bool) {
	if o == nil || IsNil(o.GreaterEqual) {
		return nil, false
	}
	return o.GreaterEqual, true
}

// HasGreaterEqual returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasGreaterEqual() bool {
	if o != nil && !IsNil(o.GreaterEqual) {
		return true
	}

	return false
}

// SetGreaterEqual gets a reference to the given string and assigns it to the GreaterEqual field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetGreaterEqual(v string) {
	o.GreaterEqual = &v
}

// GetGreaterThan returns the GreaterThan field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetGreaterThan() string {
	if o == nil || IsNil(o.GreaterThan) {
		var ret string
		return ret
	}
	return *o.GreaterThan
}

// GetGreaterThanOk returns a tuple with the GreaterThan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetGreaterThanOk() (*string, bool) {
	if o == nil || IsNil(o.GreaterThan) {
		return nil, false
	}
	return o.GreaterThan, true
}

// HasGreaterThan returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasGreaterThan() bool {
	if o != nil && !IsNil(o.GreaterThan) {
		return true
	}

	return false
}

// SetGreaterThan gets a reference to the given string and assigns it to the GreaterThan field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetGreaterThan(v string) {
	o.GreaterThan = &v
}

// GetIs returns the Is field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetIs() string {
	if o == nil || IsNil(o.Is) {
		var ret string
		return ret
	}
	return *o.Is
}

// GetIsOk returns a tuple with the Is field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetIsOk() (*string, bool) {
	if o == nil || IsNil(o.Is) {
		return nil, false
	}
	return o.Is, true
}

// HasIs returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasIs() bool {
	if o != nil && !IsNil(o.Is) {
		return true
	}

	return false
}

// SetIs gets a reference to the given string and assigns it to the Is field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetIs(v string) {
	o.Is = &v
}

// GetIsNot returns the IsNot field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetIsNot() string {
	if o == nil || IsNil(o.IsNot) {
		var ret string
		return ret
	}
	return *o.IsNot
}

// GetIsNotOk returns a tuple with the IsNot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetIsNotOk() (*string, bool) {
	if o == nil || IsNil(o.IsNot) {
		return nil, false
	}
	return o.IsNot, true
}

// HasIsNot returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasIsNot() bool {
	if o != nil && !IsNil(o.IsNot) {
		return true
	}

	return false
}

// SetIsNot gets a reference to the given string and assigns it to the IsNot field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetIsNot(v string) {
	o.IsNot = &v
}

// GetLessEqual returns the LessEqual field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetLessEqual() string {
	if o == nil || IsNil(o.LessEqual) {
		var ret string
		return ret
	}
	return *o.LessEqual
}

// GetLessEqualOk returns a tuple with the LessEqual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetLessEqualOk() (*string, bool) {
	if o == nil || IsNil(o.LessEqual) {
		return nil, false
	}
	return o.LessEqual, true
}

// HasLessEqual returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasLessEqual() bool {
	if o != nil && !IsNil(o.LessEqual) {
		return true
	}

	return false
}

// SetLessEqual gets a reference to the given string and assigns it to the LessEqual field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetLessEqual(v string) {
	o.LessEqual = &v
}

// GetLessThan returns the LessThan field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetLessThan() string {
	if o == nil || IsNil(o.LessThan) {
		var ret string
		return ret
	}
	return *o.LessThan
}

// GetLessThanOk returns a tuple with the LessThan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetLessThanOk() (*string, bool) {
	if o == nil || IsNil(o.LessThan) {
		return nil, false
	}
	return o.LessThan, true
}

// HasLessThan returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasLessThan() bool {
	if o != nil && !IsNil(o.LessThan) {
		return true
	}

	return false
}

// SetLessThan gets a reference to the given string and assigns it to the LessThan field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetLessThan(v string) {
	o.LessThan = &v
}

// GetNotWithin returns the NotWithin field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetNotWithin() HipObjectsAntiMalwareCriteriaProductVersionNotWithin {
	if o == nil || IsNil(o.NotWithin) {
		var ret HipObjectsAntiMalwareCriteriaProductVersionNotWithin
		return ret
	}
	return *o.NotWithin
}

// GetNotWithinOk returns a tuple with the NotWithin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetNotWithinOk() (*HipObjectsAntiMalwareCriteriaProductVersionNotWithin, bool) {
	if o == nil || IsNil(o.NotWithin) {
		return nil, false
	}
	return o.NotWithin, true
}

// HasNotWithin returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasNotWithin() bool {
	if o != nil && !IsNil(o.NotWithin) {
		return true
	}

	return false
}

// SetNotWithin gets a reference to the given HipObjectsAntiMalwareCriteriaProductVersionNotWithin and assigns it to the NotWithin field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetNotWithin(v HipObjectsAntiMalwareCriteriaProductVersionNotWithin) {
	o.NotWithin = &v
}

// GetWithin returns the Within field value if set, zero value otherwise.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetWithin() HipObjectsAntiMalwareCriteriaProductVersionNotWithin {
	if o == nil || IsNil(o.Within) {
		var ret HipObjectsAntiMalwareCriteriaProductVersionNotWithin
		return ret
	}
	return *o.Within
}

// GetWithinOk returns a tuple with the Within field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) GetWithinOk() (*HipObjectsAntiMalwareCriteriaProductVersionNotWithin, bool) {
	if o == nil || IsNil(o.Within) {
		return nil, false
	}
	return o.Within, true
}

// HasWithin returns a boolean if a field has been set.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) HasWithin() bool {
	if o != nil && !IsNil(o.Within) {
		return true
	}

	return false
}

// SetWithin gets a reference to the given HipObjectsAntiMalwareCriteriaProductVersionNotWithin and assigns it to the Within field.
func (o *HipObjectsAntiMalwareCriteriaProductVersion) SetWithin(v HipObjectsAntiMalwareCriteriaProductVersionNotWithin) {
	o.Within = &v
}

func (o HipObjectsAntiMalwareCriteriaProductVersion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsAntiMalwareCriteriaProductVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contains) {
		toSerialize["contains"] = o.Contains
	}
	if !IsNil(o.GreaterEqual) {
		toSerialize["greater_equal"] = o.GreaterEqual
	}
	if !IsNil(o.GreaterThan) {
		toSerialize["greater_than"] = o.GreaterThan
	}
	if !IsNil(o.Is) {
		toSerialize["is"] = o.Is
	}
	if !IsNil(o.IsNot) {
		toSerialize["is_not"] = o.IsNot
	}
	if !IsNil(o.LessEqual) {
		toSerialize["less_equal"] = o.LessEqual
	}
	if !IsNil(o.LessThan) {
		toSerialize["less_than"] = o.LessThan
	}
	if !IsNil(o.NotWithin) {
		toSerialize["not_within"] = o.NotWithin
	}
	if !IsNil(o.Within) {
		toSerialize["within"] = o.Within
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsAntiMalwareCriteriaProductVersion) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsAntiMalwareCriteriaProductVersion := _HipObjectsAntiMalwareCriteriaProductVersion{}

	err = json.Unmarshal(data, &varHipObjectsAntiMalwareCriteriaProductVersion)

	if err != nil {
		return err
	}

	*o = HipObjectsAntiMalwareCriteriaProductVersion(varHipObjectsAntiMalwareCriteriaProductVersion)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "contains")
		delete(additionalProperties, "greater_equal")
		delete(additionalProperties, "greater_than")
		delete(additionalProperties, "is")
		delete(additionalProperties, "is_not")
		delete(additionalProperties, "less_equal")
		delete(additionalProperties, "less_than")
		delete(additionalProperties, "not_within")
		delete(additionalProperties, "within")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsAntiMalwareCriteriaProductVersion struct {
	value *HipObjectsAntiMalwareCriteriaProductVersion
	isSet bool
}

func (v NullableHipObjectsAntiMalwareCriteriaProductVersion) Get() *HipObjectsAntiMalwareCriteriaProductVersion {
	return v.value
}

func (v *NullableHipObjectsAntiMalwareCriteriaProductVersion) Set(val *HipObjectsAntiMalwareCriteriaProductVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsAntiMalwareCriteriaProductVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsAntiMalwareCriteriaProductVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsAntiMalwareCriteriaProductVersion(val *HipObjectsAntiMalwareCriteriaProductVersion) *NullableHipObjectsAntiMalwareCriteriaProductVersion {
	return &NullableHipObjectsAntiMalwareCriteriaProductVersion{value: val, isSet: true}
}

func (v NullableHipObjectsAntiMalwareCriteriaProductVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsAntiMalwareCriteriaProductVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
