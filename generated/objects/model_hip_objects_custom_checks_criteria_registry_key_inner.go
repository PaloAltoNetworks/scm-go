/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the HipObjectsCustomChecksCriteriaRegistryKeyInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsCustomChecksCriteriaRegistryKeyInner{}

// HipObjectsCustomChecksCriteriaRegistryKeyInner struct for HipObjectsCustomChecksCriteriaRegistryKeyInner
type HipObjectsCustomChecksCriteriaRegistryKeyInner struct {
	// Registry key default value data
	DefaultValueData *string `json:"default_value_data,omitempty" validate:"regexp=.*"`
	// Registry key
	Name string `json:"name"`
	// Key does not exist or match specified value data
	Negate               *bool                                                              `json:"negate,omitempty"`
	RegistryValue        []HipObjectsCustomChecksCriteriaRegistryKeyInnerRegistryValueInner `json:"registry_value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsCustomChecksCriteriaRegistryKeyInner HipObjectsCustomChecksCriteriaRegistryKeyInner

// NewHipObjectsCustomChecksCriteriaRegistryKeyInner instantiates a new HipObjectsCustomChecksCriteriaRegistryKeyInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsCustomChecksCriteriaRegistryKeyInner(name string) *HipObjectsCustomChecksCriteriaRegistryKeyInner {
	this := HipObjectsCustomChecksCriteriaRegistryKeyInner{}
	this.Name = name
	var negate bool = false
	this.Negate = &negate
	return &this
}

// NewHipObjectsCustomChecksCriteriaRegistryKeyInnerWithDefaults instantiates a new HipObjectsCustomChecksCriteriaRegistryKeyInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsCustomChecksCriteriaRegistryKeyInnerWithDefaults() *HipObjectsCustomChecksCriteriaRegistryKeyInner {
	this := HipObjectsCustomChecksCriteriaRegistryKeyInner{}
	var negate bool = false
	this.Negate = &negate
	return &this
}

// GetDefaultValueData returns the DefaultValueData field value if set, zero value otherwise.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetDefaultValueData() string {
	if o == nil || IsNil(o.DefaultValueData) {
		var ret string
		return ret
	}
	return *o.DefaultValueData
}

// GetDefaultValueDataOk returns a tuple with the DefaultValueData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetDefaultValueDataOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValueData) {
		return nil, false
	}
	return o.DefaultValueData, true
}

// HasDefaultValueData returns a boolean if a field has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) HasDefaultValueData() bool {
	if o != nil && !IsNil(o.DefaultValueData) {
		return true
	}

	return false
}

// SetDefaultValueData gets a reference to the given string and assigns it to the DefaultValueData field.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) SetDefaultValueData(v string) {
	o.DefaultValueData = &v
}

// GetName returns the Name field value
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) SetName(v string) {
	o.Name = v
}

// GetNegate returns the Negate field value if set, zero value otherwise.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetNegate() bool {
	if o == nil || IsNil(o.Negate) {
		var ret bool
		return ret
	}
	return *o.Negate
}

// GetNegateOk returns a tuple with the Negate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetNegateOk() (*bool, bool) {
	if o == nil || IsNil(o.Negate) {
		return nil, false
	}
	return o.Negate, true
}

// HasNegate returns a boolean if a field has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) HasNegate() bool {
	if o != nil && !IsNil(o.Negate) {
		return true
	}

	return false
}

// SetNegate gets a reference to the given bool and assigns it to the Negate field.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) SetNegate(v bool) {
	o.Negate = &v
}

// GetRegistryValue returns the RegistryValue field value if set, zero value otherwise.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetRegistryValue() []HipObjectsCustomChecksCriteriaRegistryKeyInnerRegistryValueInner {
	if o == nil || IsNil(o.RegistryValue) {
		var ret []HipObjectsCustomChecksCriteriaRegistryKeyInnerRegistryValueInner
		return ret
	}
	return o.RegistryValue
}

// GetRegistryValueOk returns a tuple with the RegistryValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) GetRegistryValueOk() ([]HipObjectsCustomChecksCriteriaRegistryKeyInnerRegistryValueInner, bool) {
	if o == nil || IsNil(o.RegistryValue) {
		return nil, false
	}
	return o.RegistryValue, true
}

// HasRegistryValue returns a boolean if a field has been set.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) HasRegistryValue() bool {
	if o != nil && !IsNil(o.RegistryValue) {
		return true
	}

	return false
}

// SetRegistryValue gets a reference to the given []HipObjectsCustomChecksCriteriaRegistryKeyInnerRegistryValueInner and assigns it to the RegistryValue field.
func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) SetRegistryValue(v []HipObjectsCustomChecksCriteriaRegistryKeyInnerRegistryValueInner) {
	o.RegistryValue = v
}

func (o HipObjectsCustomChecksCriteriaRegistryKeyInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsCustomChecksCriteriaRegistryKeyInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValueData) {
		toSerialize["default_value_data"] = o.DefaultValueData
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Negate) {
		toSerialize["negate"] = o.Negate
	}
	if !IsNil(o.RegistryValue) {
		toSerialize["registry_value"] = o.RegistryValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsCustomChecksCriteriaRegistryKeyInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHipObjectsCustomChecksCriteriaRegistryKeyInner := _HipObjectsCustomChecksCriteriaRegistryKeyInner{}

	err = json.Unmarshal(data, &varHipObjectsCustomChecksCriteriaRegistryKeyInner)

	if err != nil {
		return err
	}

	*o = HipObjectsCustomChecksCriteriaRegistryKeyInner(varHipObjectsCustomChecksCriteriaRegistryKeyInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "default_value_data")
		delete(additionalProperties, "name")
		delete(additionalProperties, "negate")
		delete(additionalProperties, "registry_value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsCustomChecksCriteriaRegistryKeyInner struct {
	value *HipObjectsCustomChecksCriteriaRegistryKeyInner
	isSet bool
}

func (v NullableHipObjectsCustomChecksCriteriaRegistryKeyInner) Get() *HipObjectsCustomChecksCriteriaRegistryKeyInner {
	return v.value
}

func (v *NullableHipObjectsCustomChecksCriteriaRegistryKeyInner) Set(val *HipObjectsCustomChecksCriteriaRegistryKeyInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsCustomChecksCriteriaRegistryKeyInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsCustomChecksCriteriaRegistryKeyInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsCustomChecksCriteriaRegistryKeyInner(val *HipObjectsCustomChecksCriteriaRegistryKeyInner) *NullableHipObjectsCustomChecksCriteriaRegistryKeyInner {
	return &NullableHipObjectsCustomChecksCriteriaRegistryKeyInner{value: val, isSet: true}
}

func (v NullableHipObjectsCustomChecksCriteriaRegistryKeyInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsCustomChecksCriteriaRegistryKeyInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
