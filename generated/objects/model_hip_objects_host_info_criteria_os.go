/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsHostInfoCriteriaOs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsHostInfoCriteriaOs{}

// HipObjectsHostInfoCriteriaOs struct for HipObjectsHostInfoCriteriaOs
type HipObjectsHostInfoCriteriaOs struct {
	Contains             *HipObjectsHostInfoCriteriaOsContains `json:"contains,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsHostInfoCriteriaOs HipObjectsHostInfoCriteriaOs

// NewHipObjectsHostInfoCriteriaOs instantiates a new HipObjectsHostInfoCriteriaOs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsHostInfoCriteriaOs() *HipObjectsHostInfoCriteriaOs {
	this := HipObjectsHostInfoCriteriaOs{}
	return &this
}

// NewHipObjectsHostInfoCriteriaOsWithDefaults instantiates a new HipObjectsHostInfoCriteriaOs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsHostInfoCriteriaOsWithDefaults() *HipObjectsHostInfoCriteriaOs {
	this := HipObjectsHostInfoCriteriaOs{}
	return &this
}

// GetContains returns the Contains field value if set, zero value otherwise.
func (o *HipObjectsHostInfoCriteriaOs) GetContains() HipObjectsHostInfoCriteriaOsContains {
	if o == nil || IsNil(o.Contains) {
		var ret HipObjectsHostInfoCriteriaOsContains
		return ret
	}
	return *o.Contains
}

// GetContainsOk returns a tuple with the Contains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsHostInfoCriteriaOs) GetContainsOk() (*HipObjectsHostInfoCriteriaOsContains, bool) {
	if o == nil || IsNil(o.Contains) {
		return nil, false
	}
	return o.Contains, true
}

// HasContains returns a boolean if a field has been set.
func (o *HipObjectsHostInfoCriteriaOs) HasContains() bool {
	if o != nil && !IsNil(o.Contains) {
		return true
	}

	return false
}

// SetContains gets a reference to the given HipObjectsHostInfoCriteriaOsContains and assigns it to the Contains field.
func (o *HipObjectsHostInfoCriteriaOs) SetContains(v HipObjectsHostInfoCriteriaOsContains) {
	o.Contains = &v
}

func (o HipObjectsHostInfoCriteriaOs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsHostInfoCriteriaOs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contains) {
		toSerialize["contains"] = o.Contains
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsHostInfoCriteriaOs) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsHostInfoCriteriaOs := _HipObjectsHostInfoCriteriaOs{}

	err = json.Unmarshal(data, &varHipObjectsHostInfoCriteriaOs)

	if err != nil {
		return err
	}

	*o = HipObjectsHostInfoCriteriaOs(varHipObjectsHostInfoCriteriaOs)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "contains")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsHostInfoCriteriaOs struct {
	value *HipObjectsHostInfoCriteriaOs
	isSet bool
}

func (v NullableHipObjectsHostInfoCriteriaOs) Get() *HipObjectsHostInfoCriteriaOs {
	return v.value
}

func (v *NullableHipObjectsHostInfoCriteriaOs) Set(val *HipObjectsHostInfoCriteriaOs) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsHostInfoCriteriaOs) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsHostInfoCriteriaOs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsHostInfoCriteriaOs(val *HipObjectsHostInfoCriteriaOs) *NullableHipObjectsHostInfoCriteriaOs {
	return &NullableHipObjectsHostInfoCriteriaOs{value: val, isSet: true}
}

func (v NullableHipObjectsHostInfoCriteriaOs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsHostInfoCriteriaOs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
