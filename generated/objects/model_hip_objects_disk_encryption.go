/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsDiskEncryption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsDiskEncryption{}

// HipObjectsDiskEncryption struct for HipObjectsDiskEncryption
type HipObjectsDiskEncryption struct {
	Criteria      *HipObjectsDiskEncryptionCriteria `json:"criteria,omitempty"`
	ExcludeVendor *bool                             `json:"exclude_vendor,omitempty"`
	// Vendor name
	Vendor               []HipObjectsAntiMalwareVendorInner `json:"vendor,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsDiskEncryption HipObjectsDiskEncryption

// NewHipObjectsDiskEncryption instantiates a new HipObjectsDiskEncryption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsDiskEncryption() *HipObjectsDiskEncryption {
	this := HipObjectsDiskEncryption{}
	var excludeVendor bool = false
	this.ExcludeVendor = &excludeVendor
	return &this
}

// NewHipObjectsDiskEncryptionWithDefaults instantiates a new HipObjectsDiskEncryption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsDiskEncryptionWithDefaults() *HipObjectsDiskEncryption {
	this := HipObjectsDiskEncryption{}
	var excludeVendor bool = false
	this.ExcludeVendor = &excludeVendor
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *HipObjectsDiskEncryption) GetCriteria() HipObjectsDiskEncryptionCriteria {
	if o == nil || IsNil(o.Criteria) {
		var ret HipObjectsDiskEncryptionCriteria
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskEncryption) GetCriteriaOk() (*HipObjectsDiskEncryptionCriteria, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *HipObjectsDiskEncryption) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given HipObjectsDiskEncryptionCriteria and assigns it to the Criteria field.
func (o *HipObjectsDiskEncryption) SetCriteria(v HipObjectsDiskEncryptionCriteria) {
	o.Criteria = &v
}

// GetExcludeVendor returns the ExcludeVendor field value if set, zero value otherwise.
func (o *HipObjectsDiskEncryption) GetExcludeVendor() bool {
	if o == nil || IsNil(o.ExcludeVendor) {
		var ret bool
		return ret
	}
	return *o.ExcludeVendor
}

// GetExcludeVendorOk returns a tuple with the ExcludeVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskEncryption) GetExcludeVendorOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeVendor) {
		return nil, false
	}
	return o.ExcludeVendor, true
}

// HasExcludeVendor returns a boolean if a field has been set.
func (o *HipObjectsDiskEncryption) HasExcludeVendor() bool {
	if o != nil && !IsNil(o.ExcludeVendor) {
		return true
	}

	return false
}

// SetExcludeVendor gets a reference to the given bool and assigns it to the ExcludeVendor field.
func (o *HipObjectsDiskEncryption) SetExcludeVendor(v bool) {
	o.ExcludeVendor = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *HipObjectsDiskEncryption) GetVendor() []HipObjectsAntiMalwareVendorInner {
	if o == nil || IsNil(o.Vendor) {
		var ret []HipObjectsAntiMalwareVendorInner
		return ret
	}
	return o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsDiskEncryption) GetVendorOk() ([]HipObjectsAntiMalwareVendorInner, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *HipObjectsDiskEncryption) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given []HipObjectsAntiMalwareVendorInner and assigns it to the Vendor field.
func (o *HipObjectsDiskEncryption) SetVendor(v []HipObjectsAntiMalwareVendorInner) {
	o.Vendor = v
}

func (o HipObjectsDiskEncryption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsDiskEncryption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.ExcludeVendor) {
		toSerialize["exclude_vendor"] = o.ExcludeVendor
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsDiskEncryption) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsDiskEncryption := _HipObjectsDiskEncryption{}

	err = json.Unmarshal(data, &varHipObjectsDiskEncryption)

	if err != nil {
		return err
	}

	*o = HipObjectsDiskEncryption(varHipObjectsDiskEncryption)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "criteria")
		delete(additionalProperties, "exclude_vendor")
		delete(additionalProperties, "vendor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsDiskEncryption struct {
	value *HipObjectsDiskEncryption
	isSet bool
}

func (v NullableHipObjectsDiskEncryption) Get() *HipObjectsDiskEncryption {
	return v.value
}

func (v *NullableHipObjectsDiskEncryption) Set(val *HipObjectsDiskEncryption) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsDiskEncryption) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsDiskEncryption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsDiskEncryption(val *HipObjectsDiskEncryption) *NullableHipObjectsDiskEncryption {
	return &NullableHipObjectsDiskEncryption{value: val, isSet: true}
}

func (v NullableHipObjectsDiskEncryption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsDiskEncryption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
