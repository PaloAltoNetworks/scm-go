/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsMobileDeviceCriteriaApplicationsHasMalware type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsMobileDeviceCriteriaApplicationsHasMalware{}

// HipObjectsMobileDeviceCriteriaApplicationsHasMalware struct for HipObjectsMobileDeviceCriteriaApplicationsHasMalware
type HipObjectsMobileDeviceCriteriaApplicationsHasMalware struct {
	No                   map[string]interface{}                                   `json:"no,omitempty"`
	Yes                  *HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYes `json:"yes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsMobileDeviceCriteriaApplicationsHasMalware HipObjectsMobileDeviceCriteriaApplicationsHasMalware

// NewHipObjectsMobileDeviceCriteriaApplicationsHasMalware instantiates a new HipObjectsMobileDeviceCriteriaApplicationsHasMalware object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsMobileDeviceCriteriaApplicationsHasMalware() *HipObjectsMobileDeviceCriteriaApplicationsHasMalware {
	this := HipObjectsMobileDeviceCriteriaApplicationsHasMalware{}
	return &this
}

// NewHipObjectsMobileDeviceCriteriaApplicationsHasMalwareWithDefaults instantiates a new HipObjectsMobileDeviceCriteriaApplicationsHasMalware object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsMobileDeviceCriteriaApplicationsHasMalwareWithDefaults() *HipObjectsMobileDeviceCriteriaApplicationsHasMalware {
	this := HipObjectsMobileDeviceCriteriaApplicationsHasMalware{}
	return &this
}

// GetNo returns the No field value if set, zero value otherwise.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) GetNo() map[string]interface{} {
	if o == nil || IsNil(o.No) {
		var ret map[string]interface{}
		return ret
	}
	return o.No
}

// GetNoOk returns a tuple with the No field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) GetNoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.No) {
		return map[string]interface{}{}, false
	}
	return o.No, true
}

// HasNo returns a boolean if a field has been set.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) HasNo() bool {
	if o != nil && !IsNil(o.No) {
		return true
	}

	return false
}

// SetNo gets a reference to the given map[string]interface{} and assigns it to the No field.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) SetNo(v map[string]interface{}) {
	o.No = v
}

// GetYes returns the Yes field value if set, zero value otherwise.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) GetYes() HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYes {
	if o == nil || IsNil(o.Yes) {
		var ret HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYes
		return ret
	}
	return *o.Yes
}

// GetYesOk returns a tuple with the Yes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) GetYesOk() (*HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYes, bool) {
	if o == nil || IsNil(o.Yes) {
		return nil, false
	}
	return o.Yes, true
}

// HasYes returns a boolean if a field has been set.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) HasYes() bool {
	if o != nil && !IsNil(o.Yes) {
		return true
	}

	return false
}

// SetYes gets a reference to the given HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYes and assigns it to the Yes field.
func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) SetYes(v HipObjectsMobileDeviceCriteriaApplicationsHasMalwareYes) {
	o.Yes = &v
}

func (o HipObjectsMobileDeviceCriteriaApplicationsHasMalware) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsMobileDeviceCriteriaApplicationsHasMalware) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.No) {
		toSerialize["no"] = o.No
	}
	if !IsNil(o.Yes) {
		toSerialize["yes"] = o.Yes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsMobileDeviceCriteriaApplicationsHasMalware := _HipObjectsMobileDeviceCriteriaApplicationsHasMalware{}

	err = json.Unmarshal(data, &varHipObjectsMobileDeviceCriteriaApplicationsHasMalware)

	if err != nil {
		return err
	}

	*o = HipObjectsMobileDeviceCriteriaApplicationsHasMalware(varHipObjectsMobileDeviceCriteriaApplicationsHasMalware)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "no")
		delete(additionalProperties, "yes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware struct {
	value *HipObjectsMobileDeviceCriteriaApplicationsHasMalware
	isSet bool
}

func (v NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware) Get() *HipObjectsMobileDeviceCriteriaApplicationsHasMalware {
	return v.value
}

func (v *NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware) Set(val *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware(val *HipObjectsMobileDeviceCriteriaApplicationsHasMalware) *NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware {
	return &NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware{value: val, isSet: true}
}

func (v NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsMobileDeviceCriteriaApplicationsHasMalware) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
