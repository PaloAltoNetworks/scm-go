/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the HipObjectsCertificate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HipObjectsCertificate{}

// HipObjectsCertificate struct for HipObjectsCertificate
type HipObjectsCertificate struct {
	Criteria             *HipObjectsCertificateCriteria `json:"criteria,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HipObjectsCertificate HipObjectsCertificate

// NewHipObjectsCertificate instantiates a new HipObjectsCertificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHipObjectsCertificate() *HipObjectsCertificate {
	this := HipObjectsCertificate{}
	return &this
}

// NewHipObjectsCertificateWithDefaults instantiates a new HipObjectsCertificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHipObjectsCertificateWithDefaults() *HipObjectsCertificate {
	this := HipObjectsCertificate{}
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *HipObjectsCertificate) GetCriteria() HipObjectsCertificateCriteria {
	if o == nil || IsNil(o.Criteria) {
		var ret HipObjectsCertificateCriteria
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HipObjectsCertificate) GetCriteriaOk() (*HipObjectsCertificateCriteria, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *HipObjectsCertificate) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given HipObjectsCertificateCriteria and assigns it to the Criteria field.
func (o *HipObjectsCertificate) SetCriteria(v HipObjectsCertificateCriteria) {
	o.Criteria = &v
}

func (o HipObjectsCertificate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HipObjectsCertificate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HipObjectsCertificate) UnmarshalJSON(data []byte) (err error) {
	varHipObjectsCertificate := _HipObjectsCertificate{}

	err = json.Unmarshal(data, &varHipObjectsCertificate)

	if err != nil {
		return err
	}

	*o = HipObjectsCertificate(varHipObjectsCertificate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "criteria")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHipObjectsCertificate struct {
	value *HipObjectsCertificate
	isSet bool
}

func (v NullableHipObjectsCertificate) Get() *HipObjectsCertificate {
	return v.value
}

func (v *NullableHipObjectsCertificate) Set(val *HipObjectsCertificate) {
	v.value = val
	v.isSet = true
}

func (v NullableHipObjectsCertificate) IsSet() bool {
	return v.isSet
}

func (v *NullableHipObjectsCertificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHipObjectsCertificate(val *HipObjectsCertificate) *NullableHipObjectsCertificate {
	return &NullableHipObjectsCertificate{value: val, isSet: true}
}

func (v NullableHipObjectsCertificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHipObjectsCertificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
