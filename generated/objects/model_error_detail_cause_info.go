/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the ErrorDetailCauseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorDetailCauseInfo{}

// ErrorDetailCauseInfo struct for ErrorDetailCauseInfo
type ErrorDetailCauseInfo struct {
	Code                 *string     `json:"code,omitempty"`
	Details              interface{} `json:"details,omitempty"`
	Help                 *string     `json:"help,omitempty"`
	Message              *string     `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ErrorDetailCauseInfo ErrorDetailCauseInfo

// NewErrorDetailCauseInfo instantiates a new ErrorDetailCauseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorDetailCauseInfo() *ErrorDetailCauseInfo {
	this := ErrorDetailCauseInfo{}
	return &this
}

// NewErrorDetailCauseInfoWithDefaults instantiates a new ErrorDetailCauseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorDetailCauseInfoWithDefaults() *ErrorDetailCauseInfo {
	this := ErrorDetailCauseInfo{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ErrorDetailCauseInfo) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetailCauseInfo) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ErrorDetailCauseInfo) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ErrorDetailCauseInfo) SetCode(v string) {
	o.Code = &v
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorDetailCauseInfo) GetDetails() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorDetailCauseInfo) GetDetailsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return &o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ErrorDetailCauseInfo) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given interface{} and assigns it to the Details field.
func (o *ErrorDetailCauseInfo) SetDetails(v interface{}) {
	o.Details = v
}

// GetHelp returns the Help field value if set, zero value otherwise.
func (o *ErrorDetailCauseInfo) GetHelp() string {
	if o == nil || IsNil(o.Help) {
		var ret string
		return ret
	}
	return *o.Help
}

// GetHelpOk returns a tuple with the Help field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetailCauseInfo) GetHelpOk() (*string, bool) {
	if o == nil || IsNil(o.Help) {
		return nil, false
	}
	return o.Help, true
}

// HasHelp returns a boolean if a field has been set.
func (o *ErrorDetailCauseInfo) HasHelp() bool {
	if o != nil && !IsNil(o.Help) {
		return true
	}

	return false
}

// SetHelp gets a reference to the given string and assigns it to the Help field.
func (o *ErrorDetailCauseInfo) SetHelp(v string) {
	o.Help = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorDetailCauseInfo) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetailCauseInfo) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorDetailCauseInfo) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorDetailCauseInfo) SetMessage(v string) {
	o.Message = &v
}

func (o ErrorDetailCauseInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorDetailCauseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Help) {
		toSerialize["help"] = o.Help
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ErrorDetailCauseInfo) UnmarshalJSON(data []byte) (err error) {
	varErrorDetailCauseInfo := _ErrorDetailCauseInfo{}

	err = json.Unmarshal(data, &varErrorDetailCauseInfo)

	if err != nil {
		return err
	}

	*o = ErrorDetailCauseInfo(varErrorDetailCauseInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "details")
		delete(additionalProperties, "help")
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableErrorDetailCauseInfo struct {
	value *ErrorDetailCauseInfo
	isSet bool
}

func (v NullableErrorDetailCauseInfo) Get() *ErrorDetailCauseInfo {
	return v.value
}

func (v *NullableErrorDetailCauseInfo) Set(val *ErrorDetailCauseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorDetailCauseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorDetailCauseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorDetailCauseInfo(val *ErrorDetailCauseInfo) *NullableErrorDetailCauseInfo {
	return &NullableErrorDetailCauseInfo{value: val, isSet: true}
}

func (v NullableErrorDetailCauseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorDetailCauseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
