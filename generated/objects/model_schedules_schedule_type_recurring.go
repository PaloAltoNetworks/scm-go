/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the SchedulesScheduleTypeRecurring type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulesScheduleTypeRecurring{}

// SchedulesScheduleTypeRecurring struct for SchedulesScheduleTypeRecurring
type SchedulesScheduleTypeRecurring struct {
	Daily                []string                              `json:"daily,omitempty"`
	Weekly               *SchedulesScheduleTypeRecurringWeekly `json:"weekly,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SchedulesScheduleTypeRecurring SchedulesScheduleTypeRecurring

// NewSchedulesScheduleTypeRecurring instantiates a new SchedulesScheduleTypeRecurring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulesScheduleTypeRecurring() *SchedulesScheduleTypeRecurring {
	this := SchedulesScheduleTypeRecurring{}
	return &this
}

// NewSchedulesScheduleTypeRecurringWithDefaults instantiates a new SchedulesScheduleTypeRecurring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulesScheduleTypeRecurringWithDefaults() *SchedulesScheduleTypeRecurring {
	this := SchedulesScheduleTypeRecurring{}
	return &this
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *SchedulesScheduleTypeRecurring) GetDaily() []string {
	if o == nil || IsNil(o.Daily) {
		var ret []string
		return ret
	}
	return o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulesScheduleTypeRecurring) GetDailyOk() ([]string, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *SchedulesScheduleTypeRecurring) HasDaily() bool {
	if o != nil && !IsNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given []string and assigns it to the Daily field.
func (o *SchedulesScheduleTypeRecurring) SetDaily(v []string) {
	o.Daily = v
}

// GetWeekly returns the Weekly field value if set, zero value otherwise.
func (o *SchedulesScheduleTypeRecurring) GetWeekly() SchedulesScheduleTypeRecurringWeekly {
	if o == nil || IsNil(o.Weekly) {
		var ret SchedulesScheduleTypeRecurringWeekly
		return ret
	}
	return *o.Weekly
}

// GetWeeklyOk returns a tuple with the Weekly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulesScheduleTypeRecurring) GetWeeklyOk() (*SchedulesScheduleTypeRecurringWeekly, bool) {
	if o == nil || IsNil(o.Weekly) {
		return nil, false
	}
	return o.Weekly, true
}

// HasWeekly returns a boolean if a field has been set.
func (o *SchedulesScheduleTypeRecurring) HasWeekly() bool {
	if o != nil && !IsNil(o.Weekly) {
		return true
	}

	return false
}

// SetWeekly gets a reference to the given SchedulesScheduleTypeRecurringWeekly and assigns it to the Weekly field.
func (o *SchedulesScheduleTypeRecurring) SetWeekly(v SchedulesScheduleTypeRecurringWeekly) {
	o.Weekly = &v
}

func (o SchedulesScheduleTypeRecurring) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulesScheduleTypeRecurring) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.Weekly) {
		toSerialize["weekly"] = o.Weekly
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SchedulesScheduleTypeRecurring) UnmarshalJSON(data []byte) (err error) {
	varSchedulesScheduleTypeRecurring := _SchedulesScheduleTypeRecurring{}

	err = json.Unmarshal(data, &varSchedulesScheduleTypeRecurring)

	if err != nil {
		return err
	}

	*o = SchedulesScheduleTypeRecurring(varSchedulesScheduleTypeRecurring)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "daily")
		delete(additionalProperties, "weekly")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSchedulesScheduleTypeRecurring struct {
	value *SchedulesScheduleTypeRecurring
	isSet bool
}

func (v NullableSchedulesScheduleTypeRecurring) Get() *SchedulesScheduleTypeRecurring {
	return v.value
}

func (v *NullableSchedulesScheduleTypeRecurring) Set(val *SchedulesScheduleTypeRecurring) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulesScheduleTypeRecurring) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulesScheduleTypeRecurring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulesScheduleTypeRecurring(val *SchedulesScheduleTypeRecurring) *NullableSchedulesScheduleTypeRecurring {
	return &NullableSchedulesScheduleTypeRecurring{value: val, isSet: true}
}

func (v NullableSchedulesScheduleTypeRecurring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulesScheduleTypeRecurring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
