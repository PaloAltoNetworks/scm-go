/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the ApplicationsSignatureInnerAndConditionInnerOrConditionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationsSignatureInnerAndConditionInnerOrConditionInner{}

// ApplicationsSignatureInnerAndConditionInnerOrConditionInner struct for ApplicationsSignatureInnerAndConditionInnerOrConditionInner
type ApplicationsSignatureInnerAndConditionInnerOrConditionInner struct {
	// Alphanumeric string [ 0-9a-zA-Z._-]
	Name                 string                                                              `json:"name"`
	Operator             ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperator `json:"operator"`
	AdditionalProperties map[string]interface{}
}

type _ApplicationsSignatureInnerAndConditionInnerOrConditionInner ApplicationsSignatureInnerAndConditionInnerOrConditionInner

// NewApplicationsSignatureInnerAndConditionInnerOrConditionInner instantiates a new ApplicationsSignatureInnerAndConditionInnerOrConditionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationsSignatureInnerAndConditionInnerOrConditionInner(name string, operator ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperator) *ApplicationsSignatureInnerAndConditionInnerOrConditionInner {
	this := ApplicationsSignatureInnerAndConditionInnerOrConditionInner{}
	this.Name = name
	this.Operator = operator
	return &this
}

// NewApplicationsSignatureInnerAndConditionInnerOrConditionInnerWithDefaults instantiates a new ApplicationsSignatureInnerAndConditionInnerOrConditionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationsSignatureInnerAndConditionInnerOrConditionInnerWithDefaults() *ApplicationsSignatureInnerAndConditionInnerOrConditionInner {
	this := ApplicationsSignatureInnerAndConditionInnerOrConditionInner{}
	return &this
}

// GetName returns the Name field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) SetName(v string) {
	o.Name = v
}

// GetOperator returns the Operator field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) GetOperator() ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperator {
	if o == nil {
		var ret ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperator
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) GetOperatorOk() (*ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) SetOperator(v ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperator) {
	o.Operator = v
}

func (o ApplicationsSignatureInnerAndConditionInnerOrConditionInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationsSignatureInnerAndConditionInnerOrConditionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["operator"] = o.Operator

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplicationsSignatureInnerAndConditionInnerOrConditionInner := _ApplicationsSignatureInnerAndConditionInnerOrConditionInner{}

	err = json.Unmarshal(data, &varApplicationsSignatureInnerAndConditionInnerOrConditionInner)

	if err != nil {
		return err
	}

	*o = ApplicationsSignatureInnerAndConditionInnerOrConditionInner(varApplicationsSignatureInnerAndConditionInnerOrConditionInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "operator")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner struct {
	value *ApplicationsSignatureInnerAndConditionInnerOrConditionInner
	isSet bool
}

func (v NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner) Get() *ApplicationsSignatureInnerAndConditionInnerOrConditionInner {
	return v.value
}

func (v *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner) Set(val *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationsSignatureInnerAndConditionInnerOrConditionInner(val *ApplicationsSignatureInnerAndConditionInnerOrConditionInner) *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner {
	return &NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner{value: val, isSet: true}
}

func (v NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
