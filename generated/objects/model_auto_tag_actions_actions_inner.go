/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the AutoTagActionsActionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTagActionsActionsInner{}

// AutoTagActionsActionsInner struct for AutoTagActionsActionsInner
type AutoTagActionsActionsInner struct {
	Name                 string                         `json:"name"`
	Type                 AutoTagActionsActionsInnerType `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _AutoTagActionsActionsInner AutoTagActionsActionsInner

// NewAutoTagActionsActionsInner instantiates a new AutoTagActionsActionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTagActionsActionsInner(name string, type_ AutoTagActionsActionsInnerType) *AutoTagActionsActionsInner {
	this := AutoTagActionsActionsInner{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewAutoTagActionsActionsInnerWithDefaults instantiates a new AutoTagActionsActionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTagActionsActionsInnerWithDefaults() *AutoTagActionsActionsInner {
	this := AutoTagActionsActionsInner{}
	return &this
}

// GetName returns the Name field value
func (o *AutoTagActionsActionsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutoTagActionsActionsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutoTagActionsActionsInner) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *AutoTagActionsActionsInner) GetType() AutoTagActionsActionsInnerType {
	if o == nil {
		var ret AutoTagActionsActionsInnerType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AutoTagActionsActionsInner) GetTypeOk() (*AutoTagActionsActionsInnerType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AutoTagActionsActionsInner) SetType(v AutoTagActionsActionsInnerType) {
	o.Type = v
}

func (o AutoTagActionsActionsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTagActionsActionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AutoTagActionsActionsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoTagActionsActionsInner := _AutoTagActionsActionsInner{}

	err = json.Unmarshal(data, &varAutoTagActionsActionsInner)

	if err != nil {
		return err
	}

	*o = AutoTagActionsActionsInner(varAutoTagActionsActionsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAutoTagActionsActionsInner struct {
	value *AutoTagActionsActionsInner
	isSet bool
}

func (v NullableAutoTagActionsActionsInner) Get() *AutoTagActionsActionsInner {
	return v.value
}

func (v *NullableAutoTagActionsActionsInner) Set(val *AutoTagActionsActionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTagActionsActionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTagActionsActionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTagActionsActionsInner(val *AutoTagActionsActionsInner) *NullableAutoTagActionsActionsInner {
	return &NullableAutoTagActionsActionsInner{value: val, isSet: true}
}

func (v NullableAutoTagActionsActionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTagActionsActionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
