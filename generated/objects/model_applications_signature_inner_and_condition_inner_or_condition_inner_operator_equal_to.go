/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
	"fmt"
)

// checks if the ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo{}

// ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo struct for ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo
type ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo struct {
	Context string `json:"context"`
	// 4-byte hex value
	Mask                 *string `json:"mask,omitempty" validate:"regexp=^[0][xX][0-9A-Fa-f]{8}$"`
	Position             *string `json:"position,omitempty"`
	Value                string  `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo

// NewApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo instantiates a new ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo(context string, value string) *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo {
	this := ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo{}
	this.Context = context
	this.Value = value
	return &this
}

// NewApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualToWithDefaults instantiates a new ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualToWithDefaults() *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo {
	this := ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo{}
	return &this
}

// GetContext returns the Context field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) SetContext(v string) {
	o.Context = v
}

// GetMask returns the Mask field value if set, zero value otherwise.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetMask() string {
	if o == nil || IsNil(o.Mask) {
		var ret string
		return ret
	}
	return *o.Mask
}

// GetMaskOk returns a tuple with the Mask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetMaskOk() (*string, bool) {
	if o == nil || IsNil(o.Mask) {
		return nil, false
	}
	return o.Mask, true
}

// HasMask returns a boolean if a field has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) HasMask() bool {
	if o != nil && !IsNil(o.Mask) {
		return true
	}

	return false
}

// SetMask gets a reference to the given string and assigns it to the Mask field.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) SetMask(v string) {
	o.Mask = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetPosition() string {
	if o == nil || IsNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetPositionOk() (*string, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) SetPosition(v string) {
	o.Position = &v
}

// GetValue returns the Value field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) SetValue(v string) {
	o.Value = v
}

func (o ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	if !IsNil(o.Mask) {
		toSerialize["mask"] = o.Mask
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	toSerialize["value"] = o.Value

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo := _ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo{}

	err = json.Unmarshal(data, &varApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo)

	if err != nil {
		return err
	}

	*o = ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo(varApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "context")
		delete(additionalProperties, "mask")
		delete(additionalProperties, "position")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo struct {
	value *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo
	isSet bool
}

func (v NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) Get() *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo {
	return v.value
}

func (v *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) Set(val *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo(val *ApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo {
	return &NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo{value: val, isSet: true}
}

func (v NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationsSignatureInnerAndConditionInnerOrConditionInnerOperatorEqualTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
