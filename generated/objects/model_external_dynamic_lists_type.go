/*
Objects

These APIs are used for defining and managing policy object configurations within Strata Cloud Manager.

API version: 2.0.0
Contact: support@paloaltonetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objects

import (
	"encoding/json"
)

// checks if the ExternalDynamicListsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalDynamicListsType{}

// ExternalDynamicListsType struct for ExternalDynamicListsType
type ExternalDynamicListsType struct {
	Domain               *ExternalDynamicListsTypeDomain       `json:"domain,omitempty"`
	Imei                 *ExternalDynamicListsTypeImei         `json:"imei,omitempty"`
	Imsi                 *ExternalDynamicListsTypeImsi         `json:"imsi,omitempty"`
	Ip                   *ExternalDynamicListsTypeIp           `json:"ip,omitempty"`
	PredefinedIp         *ExternalDynamicListsTypePredefinedIp `json:"predefined_ip,omitempty"`
	PredefinedUrl        *ExternalDynamicListsTypePredefinedIp `json:"predefined_url,omitempty"`
	Url                  *ExternalDynamicListsTypeUrl          `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExternalDynamicListsType ExternalDynamicListsType

// NewExternalDynamicListsType instantiates a new ExternalDynamicListsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalDynamicListsType() *ExternalDynamicListsType {
	this := ExternalDynamicListsType{}
	return &this
}

// NewExternalDynamicListsTypeWithDefaults instantiates a new ExternalDynamicListsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalDynamicListsTypeWithDefaults() *ExternalDynamicListsType {
	this := ExternalDynamicListsType{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetDomain() ExternalDynamicListsTypeDomain {
	if o == nil || IsNil(o.Domain) {
		var ret ExternalDynamicListsTypeDomain
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetDomainOk() (*ExternalDynamicListsTypeDomain, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given ExternalDynamicListsTypeDomain and assigns it to the Domain field.
func (o *ExternalDynamicListsType) SetDomain(v ExternalDynamicListsTypeDomain) {
	o.Domain = &v
}

// GetImei returns the Imei field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetImei() ExternalDynamicListsTypeImei {
	if o == nil || IsNil(o.Imei) {
		var ret ExternalDynamicListsTypeImei
		return ret
	}
	return *o.Imei
}

// GetImeiOk returns a tuple with the Imei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetImeiOk() (*ExternalDynamicListsTypeImei, bool) {
	if o == nil || IsNil(o.Imei) {
		return nil, false
	}
	return o.Imei, true
}

// HasImei returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasImei() bool {
	if o != nil && !IsNil(o.Imei) {
		return true
	}

	return false
}

// SetImei gets a reference to the given ExternalDynamicListsTypeImei and assigns it to the Imei field.
func (o *ExternalDynamicListsType) SetImei(v ExternalDynamicListsTypeImei) {
	o.Imei = &v
}

// GetImsi returns the Imsi field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetImsi() ExternalDynamicListsTypeImsi {
	if o == nil || IsNil(o.Imsi) {
		var ret ExternalDynamicListsTypeImsi
		return ret
	}
	return *o.Imsi
}

// GetImsiOk returns a tuple with the Imsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetImsiOk() (*ExternalDynamicListsTypeImsi, bool) {
	if o == nil || IsNil(o.Imsi) {
		return nil, false
	}
	return o.Imsi, true
}

// HasImsi returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasImsi() bool {
	if o != nil && !IsNil(o.Imsi) {
		return true
	}

	return false
}

// SetImsi gets a reference to the given ExternalDynamicListsTypeImsi and assigns it to the Imsi field.
func (o *ExternalDynamicListsType) SetImsi(v ExternalDynamicListsTypeImsi) {
	o.Imsi = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetIp() ExternalDynamicListsTypeIp {
	if o == nil || IsNil(o.Ip) {
		var ret ExternalDynamicListsTypeIp
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetIpOk() (*ExternalDynamicListsTypeIp, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given ExternalDynamicListsTypeIp and assigns it to the Ip field.
func (o *ExternalDynamicListsType) SetIp(v ExternalDynamicListsTypeIp) {
	o.Ip = &v
}

// GetPredefinedIp returns the PredefinedIp field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetPredefinedIp() ExternalDynamicListsTypePredefinedIp {
	if o == nil || IsNil(o.PredefinedIp) {
		var ret ExternalDynamicListsTypePredefinedIp
		return ret
	}
	return *o.PredefinedIp
}

// GetPredefinedIpOk returns a tuple with the PredefinedIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetPredefinedIpOk() (*ExternalDynamicListsTypePredefinedIp, bool) {
	if o == nil || IsNil(o.PredefinedIp) {
		return nil, false
	}
	return o.PredefinedIp, true
}

// HasPredefinedIp returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasPredefinedIp() bool {
	if o != nil && !IsNil(o.PredefinedIp) {
		return true
	}

	return false
}

// SetPredefinedIp gets a reference to the given ExternalDynamicListsTypePredefinedIp and assigns it to the PredefinedIp field.
func (o *ExternalDynamicListsType) SetPredefinedIp(v ExternalDynamicListsTypePredefinedIp) {
	o.PredefinedIp = &v
}

// GetPredefinedUrl returns the PredefinedUrl field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetPredefinedUrl() ExternalDynamicListsTypePredefinedIp {
	if o == nil || IsNil(o.PredefinedUrl) {
		var ret ExternalDynamicListsTypePredefinedIp
		return ret
	}
	return *o.PredefinedUrl
}

// GetPredefinedUrlOk returns a tuple with the PredefinedUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetPredefinedUrlOk() (*ExternalDynamicListsTypePredefinedIp, bool) {
	if o == nil || IsNil(o.PredefinedUrl) {
		return nil, false
	}
	return o.PredefinedUrl, true
}

// HasPredefinedUrl returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasPredefinedUrl() bool {
	if o != nil && !IsNil(o.PredefinedUrl) {
		return true
	}

	return false
}

// SetPredefinedUrl gets a reference to the given ExternalDynamicListsTypePredefinedIp and assigns it to the PredefinedUrl field.
func (o *ExternalDynamicListsType) SetPredefinedUrl(v ExternalDynamicListsTypePredefinedIp) {
	o.PredefinedUrl = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ExternalDynamicListsType) GetUrl() ExternalDynamicListsTypeUrl {
	if o == nil || IsNil(o.Url) {
		var ret ExternalDynamicListsTypeUrl
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDynamicListsType) GetUrlOk() (*ExternalDynamicListsTypeUrl, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ExternalDynamicListsType) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given ExternalDynamicListsTypeUrl and assigns it to the Url field.
func (o *ExternalDynamicListsType) SetUrl(v ExternalDynamicListsTypeUrl) {
	o.Url = &v
}

func (o ExternalDynamicListsType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalDynamicListsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Imei) {
		toSerialize["imei"] = o.Imei
	}
	if !IsNil(o.Imsi) {
		toSerialize["imsi"] = o.Imsi
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.PredefinedIp) {
		toSerialize["predefined_ip"] = o.PredefinedIp
	}
	if !IsNil(o.PredefinedUrl) {
		toSerialize["predefined_url"] = o.PredefinedUrl
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalDynamicListsType) UnmarshalJSON(data []byte) (err error) {
	varExternalDynamicListsType := _ExternalDynamicListsType{}

	err = json.Unmarshal(data, &varExternalDynamicListsType)

	if err != nil {
		return err
	}

	*o = ExternalDynamicListsType(varExternalDynamicListsType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "domain")
		delete(additionalProperties, "imei")
		delete(additionalProperties, "imsi")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "predefined_ip")
		delete(additionalProperties, "predefined_url")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalDynamicListsType struct {
	value *ExternalDynamicListsType
	isSet bool
}

func (v NullableExternalDynamicListsType) Get() *ExternalDynamicListsType {
	return v.value
}

func (v *NullableExternalDynamicListsType) Set(val *ExternalDynamicListsType) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalDynamicListsType) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalDynamicListsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalDynamicListsType(val *ExternalDynamicListsType) *NullableExternalDynamicListsType {
	return &NullableExternalDynamicListsType{value: val, isSet: true}
}

func (v NullableExternalDynamicListsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalDynamicListsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
